/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/robot/Robot.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/after/index.js":
/*!*************************************!*\
  !*** ./node_modules/after/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = after\r\n\r\nfunction after(count, callback, err_cb) {\r\n    var bail = false\r\n    err_cb = err_cb || noop\r\n    proxy.count = count\r\n\r\n    return (count === 0) ? callback() : proxy\r\n\r\n    function proxy(err, result) {\r\n        if (proxy.count <= 0) {\r\n            throw new Error('after called too many times')\r\n        }\r\n        --proxy.count\r\n\r\n        // after first error, rest are passed to err_cb\r\n        if (err) {\r\n            bail = true\r\n            callback(err)\r\n            // future error callbacks will go to error handler\r\n            callback = err_cb\r\n        } else if (proxy.count === 0 && !bail) {\r\n            callback(null, result)\r\n        }\r\n    }\r\n}\r\n\r\nfunction noop() {}\r\n\n\n//# sourceURL=webpack:///./node_modules/after/index.js?");

/***/ }),

/***/ "./node_modules/arraybuffer.slice/index.js":
/*!*************************************************!*\
  !*** ./node_modules/arraybuffer.slice/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * An abstraction for slicing an arraybuffer even when\r\n * ArrayBuffer.prototype.slice is not supported\r\n *\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(arraybuffer, start, end) {\r\n  var bytes = arraybuffer.byteLength;\r\n  start = start || 0;\r\n  end = end || bytes;\r\n\r\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\r\n\r\n  if (start < 0) { start += bytes; }\r\n  if (end < 0) { end += bytes; }\r\n  if (end > bytes) { end = bytes; }\r\n\r\n  if (start >= bytes || start >= end || bytes === 0) {\r\n    return new ArrayBuffer(0);\r\n  }\r\n\r\n  var abv = new Uint8Array(arraybuffer);\r\n  var result = new Uint8Array(end - start);\r\n  for (var i = start, ii = 0; i < end; i++, ii++) {\r\n    result[ii] = abv[i];\r\n  }\r\n  return result.buffer;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/arraybuffer.slice/index.js?");

/***/ }),

/***/ "./node_modules/backo2/index.js":
/*!**************************************!*\
  !*** ./node_modules/backo2/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\n/**\r\n * Expose `Backoff`.\r\n */\r\n\r\nmodule.exports = Backoff;\r\n\r\n/**\r\n * Initialize backoff timer with `opts`.\r\n *\r\n * - `min` initial timeout in milliseconds [100]\r\n * - `max` max timeout [10000]\r\n * - `jitter` [0]\r\n * - `factor` [2]\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\n\r\nfunction Backoff(opts) {\r\n  opts = opts || {};\r\n  this.ms = opts.min || 100;\r\n  this.max = opts.max || 10000;\r\n  this.factor = opts.factor || 2;\r\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\r\n  this.attempts = 0;\r\n}\r\n\r\n/**\r\n * Return the backoff duration.\r\n *\r\n * @return {Number}\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.duration = function(){\r\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\r\n  if (this.jitter) {\r\n    var rand =  Math.random();\r\n    var deviation = Math.floor(rand * this.jitter * ms);\r\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\r\n  }\r\n  return Math.min(ms, this.max) | 0;\r\n};\r\n\r\n/**\r\n * Reset the number of attempts.\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.reset = function(){\r\n  this.attempts = 0;\r\n};\r\n\r\n/**\r\n * Set the minimum duration\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.setMin = function(min){\r\n  this.ms = min;\r\n};\r\n\r\n/**\r\n * Set the maximum duration\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.setMax = function(max){\r\n  this.max = max;\r\n};\r\n\r\n/**\r\n * Set the jitter\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.setJitter = function(jitter){\r\n  this.jitter = jitter;\r\n};\r\n\r\n\n\n//# sourceURL=webpack:///./node_modules/backo2/index.js?");

/***/ }),

/***/ "./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\r\n * base64-arraybuffer\r\n * https://github.com/niklasvh/base64-arraybuffer\r\n *\r\n * Copyright (c) 2012 Niklas von Hertzen\r\n * Licensed under the MIT license.\r\n */\r\n(function(){\r\n  \"use strict\";\r\n\r\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n  // Use a lookup table to find the index.\r\n  var lookup = new Uint8Array(256);\r\n  for (var i = 0; i < chars.length; i++) {\r\n    lookup[chars.charCodeAt(i)] = i;\r\n  }\r\n\r\n  exports.encode = function(arraybuffer) {\r\n    var bytes = new Uint8Array(arraybuffer),\r\n    i, len = bytes.length, base64 = \"\";\r\n\r\n    for (i = 0; i < len; i+=3) {\r\n      base64 += chars[bytes[i] >> 2];\r\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n      base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if ((len % 3) === 2) {\r\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n    } else if (len % 3 === 1) {\r\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n    }\r\n\r\n    return base64;\r\n  };\r\n\r\n  exports.decode =  function(base64) {\r\n    var bufferLength = base64.length * 0.75,\r\n    len = base64.length, i, p = 0,\r\n    encoded1, encoded2, encoded3, encoded4;\r\n\r\n    if (base64[base64.length - 1] === \"=\") {\r\n      bufferLength--;\r\n      if (base64[base64.length - 2] === \"=\") {\r\n        bufferLength--;\r\n      }\r\n    }\r\n\r\n    var arraybuffer = new ArrayBuffer(bufferLength),\r\n    bytes = new Uint8Array(arraybuffer);\r\n\r\n    for (i = 0; i < len; i+=4) {\r\n      encoded1 = lookup[base64.charCodeAt(i)];\r\n      encoded2 = lookup[base64.charCodeAt(i+1)];\r\n      encoded3 = lookup[base64.charCodeAt(i+2)];\r\n      encoded4 = lookup[base64.charCodeAt(i+3)];\r\n\r\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n\r\n    return arraybuffer;\r\n  };\r\n})();\r\n\n\n//# sourceURL=webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js?");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nexports.byteLength = byteLength\r\nexports.toByteArray = toByteArray\r\nexports.fromByteArray = fromByteArray\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\n\r\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nfor (var i = 0, len = code.length; i < len; ++i) {\r\n  lookup[i] = code[i]\r\n  revLookup[code.charCodeAt(i)] = i\r\n}\r\n\r\n// Support decoding URL-safe base64 strings, as Node.js does.\r\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\r\nrevLookup['-'.charCodeAt(0)] = 62\r\nrevLookup['_'.charCodeAt(0)] = 63\r\n\r\nfunction getLens (b64) {\r\n  var len = b64.length\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // Trim off extra bytes after placeholder bytes are found\r\n  // See: https://github.com/beatgammit/base64-js/issues/42\r\n  var validLen = b64.indexOf('=')\r\n  if (validLen === -1) validLen = len\r\n\r\n  var placeHoldersLen = validLen === len\r\n    ? 0\r\n    : 4 - (validLen % 4)\r\n\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\n// base64 is 4/3 + up to two characters of the original data\r\nfunction byteLength (b64) {\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction _byteLength (b64, validLen, placeHoldersLen) {\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0\r\n    ? validLen - 4\r\n    : validLen\r\n\r\n  var i\r\n  for (i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 18) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n      revLookup[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xFF\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 2) |\r\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 10) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] +\r\n    lookup[num >> 12 & 0x3F] +\r\n    lookup[num >> 6 & 0x3F] +\r\n    lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp\r\n  var output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xFF0000) +\r\n      ((uint8[i + 1] << 8) & 0xFF00) +\r\n      (uint8[i + 2] & 0xFF)\r\n    output.push(tripletToBase64(tmp))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  var tmp\r\n  var len = uint8.length\r\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  var parts = []\r\n  var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(\r\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\r\n    ))\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 2] +\r\n      lookup[(tmp << 4) & 0x3F] +\r\n      '=='\r\n    )\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 10] +\r\n      lookup[(tmp >> 4) & 0x3F] +\r\n      lookup[(tmp << 2) & 0x3F] +\r\n      '='\r\n    )\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/blob/index.js":
/*!************************************!*\
  !*** ./node_modules/blob/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n\n\n//# sourceURL=webpack:///./node_modules/blob/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <http://feross.org>\r\n * @license  MIT\r\n */\r\n/* eslint-disable no-proto */\r\n\r\n\r\n\r\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\r\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\r\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\r\n\r\nexports.Buffer = Buffer\r\nexports.SlowBuffer = SlowBuffer\r\nexports.INSPECT_MAX_BYTES = 50\r\n\r\n/**\r\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n *   === true    Use Uint8Array implementation (fastest)\r\n *   === false   Use Object implementation (most compatible, even IE6)\r\n *\r\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n * Opera 11.6+, iOS 4.2+.\r\n *\r\n * Due to various browser bugs, sometimes the Object implementation will be used even\r\n * when the browser supports typed arrays.\r\n *\r\n * Note:\r\n *\r\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\r\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\r\n *\r\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\r\n *\r\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\r\n *     incorrect length in some situations.\r\n\r\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\r\n * get the Object implementation, which is slower but behaves correctly.\r\n */\r\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\r\n  ? global.TYPED_ARRAY_SUPPORT\r\n  : typedArraySupport()\r\n\r\n/*\r\n * Export kMaxLength after typed array support is determined.\r\n */\r\nexports.kMaxLength = kMaxLength()\r\n\r\nfunction typedArraySupport () {\r\n  try {\r\n    var arr = new Uint8Array(1)\r\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\r\n    return arr.foo() === 42 && // typed array instances can be augmented\r\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\r\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction kMaxLength () {\r\n  return Buffer.TYPED_ARRAY_SUPPORT\r\n    ? 0x7fffffff\r\n    : 0x3fffffff\r\n}\r\n\r\nfunction createBuffer (that, length) {\r\n  if (kMaxLength() < length) {\r\n    throw new RangeError('Invalid typed array length')\r\n  }\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    // Return an augmented `Uint8Array` instance, for best performance\r\n    that = new Uint8Array(length)\r\n    that.__proto__ = Buffer.prototype\r\n  } else {\r\n    // Fallback: Return an object instance of the Buffer class\r\n    if (that === null) {\r\n      that = new Buffer(length)\r\n    }\r\n    that.length = length\r\n  }\r\n\r\n  return that\r\n}\r\n\r\n/**\r\n * The Buffer constructor returns instances of `Uint8Array` that have their\r\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n * returns a single octet.\r\n *\r\n * The `Uint8Array` prototype remains unmodified.\r\n */\r\n\r\nfunction Buffer (arg, encodingOrOffset, length) {\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\r\n    return new Buffer(arg, encodingOrOffset, length)\r\n  }\r\n\r\n  // Common case.\r\n  if (typeof arg === 'number') {\r\n    if (typeof encodingOrOffset === 'string') {\r\n      throw new Error(\r\n        'If encoding is specified then the first argument must be a string'\r\n      )\r\n    }\r\n    return allocUnsafe(this, arg)\r\n  }\r\n  return from(this, arg, encodingOrOffset, length)\r\n}\r\n\r\nBuffer.poolSize = 8192 // not used by this implementation\r\n\r\n// TODO: Legacy, not needed anymore. Remove in next major version.\r\nBuffer._augment = function (arr) {\r\n  arr.__proto__ = Buffer.prototype\r\n  return arr\r\n}\r\n\r\nfunction from (that, value, encodingOrOffset, length) {\r\n  if (typeof value === 'number') {\r\n    throw new TypeError('\"value\" argument must not be a number')\r\n  }\r\n\r\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\r\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    return fromString(that, value, encodingOrOffset)\r\n  }\r\n\r\n  return fromObject(that, value)\r\n}\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n **/\r\nBuffer.from = function (value, encodingOrOffset, length) {\r\n  return from(null, value, encodingOrOffset, length)\r\n}\r\n\r\nif (Buffer.TYPED_ARRAY_SUPPORT) {\r\n  Buffer.prototype.__proto__ = Uint8Array.prototype\r\n  Buffer.__proto__ = Uint8Array\r\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\r\n      Buffer[Symbol.species] === Buffer) {\r\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\r\n    Object.defineProperty(Buffer, Symbol.species, {\r\n      value: null,\r\n      configurable: true\r\n    })\r\n  }\r\n}\r\n\r\nfunction assertSize (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('\"size\" argument must be a number')\r\n  } else if (size < 0) {\r\n    throw new RangeError('\"size\" argument must not be negative')\r\n  }\r\n}\r\n\r\nfunction alloc (that, size, fill, encoding) {\r\n  assertSize(size)\r\n  if (size <= 0) {\r\n    return createBuffer(that, size)\r\n  }\r\n  if (fill !== undefined) {\r\n    // Only pay attention to encoding if it's a string. This\r\n    // prevents accidentally sending in a number that would\r\n    // be interpretted as a start offset.\r\n    return typeof encoding === 'string'\r\n      ? createBuffer(that, size).fill(fill, encoding)\r\n      : createBuffer(that, size).fill(fill)\r\n  }\r\n  return createBuffer(that, size)\r\n}\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n **/\r\nBuffer.alloc = function (size, fill, encoding) {\r\n  return alloc(null, size, fill, encoding)\r\n}\r\n\r\nfunction allocUnsafe (that, size) {\r\n  assertSize(size)\r\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\r\n    for (var i = 0; i < size; ++i) {\r\n      that[i] = 0\r\n    }\r\n  }\r\n  return that\r\n}\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n * */\r\nBuffer.allocUnsafe = function (size) {\r\n  return allocUnsafe(null, size)\r\n}\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n */\r\nBuffer.allocUnsafeSlow = function (size) {\r\n  return allocUnsafe(null, size)\r\n}\r\n\r\nfunction fromString (that, string, encoding) {\r\n  if (typeof encoding !== 'string' || encoding === '') {\r\n    encoding = 'utf8'\r\n  }\r\n\r\n  if (!Buffer.isEncoding(encoding)) {\r\n    throw new TypeError('\"encoding\" must be a valid string encoding')\r\n  }\r\n\r\n  var length = byteLength(string, encoding) | 0\r\n  that = createBuffer(that, length)\r\n\r\n  var actual = that.write(string, encoding)\r\n\r\n  if (actual !== length) {\r\n    // Writing a hex string, for example, that contains invalid characters will\r\n    // cause everything after the first invalid character to be ignored. (e.g.\r\n    // 'abxxcd' will be treated as 'ab')\r\n    that = that.slice(0, actual)\r\n  }\r\n\r\n  return that\r\n}\r\n\r\nfunction fromArrayLike (that, array) {\r\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\r\n  that = createBuffer(that, length)\r\n  for (var i = 0; i < length; i += 1) {\r\n    that[i] = array[i] & 255\r\n  }\r\n  return that\r\n}\r\n\r\nfunction fromArrayBuffer (that, array, byteOffset, length) {\r\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\r\n\r\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n    throw new RangeError('\\'offset\\' is out of bounds')\r\n  }\r\n\r\n  if (array.byteLength < byteOffset + (length || 0)) {\r\n    throw new RangeError('\\'length\\' is out of bounds')\r\n  }\r\n\r\n  if (byteOffset === undefined && length === undefined) {\r\n    array = new Uint8Array(array)\r\n  } else if (length === undefined) {\r\n    array = new Uint8Array(array, byteOffset)\r\n  } else {\r\n    array = new Uint8Array(array, byteOffset, length)\r\n  }\r\n\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    // Return an augmented `Uint8Array` instance, for best performance\r\n    that = array\r\n    that.__proto__ = Buffer.prototype\r\n  } else {\r\n    // Fallback: Return an object instance of the Buffer class\r\n    that = fromArrayLike(that, array)\r\n  }\r\n  return that\r\n}\r\n\r\nfunction fromObject (that, obj) {\r\n  if (Buffer.isBuffer(obj)) {\r\n    var len = checked(obj.length) | 0\r\n    that = createBuffer(that, len)\r\n\r\n    if (that.length === 0) {\r\n      return that\r\n    }\r\n\r\n    obj.copy(that, 0, 0, len)\r\n    return that\r\n  }\r\n\r\n  if (obj) {\r\n    if ((typeof ArrayBuffer !== 'undefined' &&\r\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\r\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\r\n        return createBuffer(that, 0)\r\n      }\r\n      return fromArrayLike(that, obj)\r\n    }\r\n\r\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\r\n      return fromArrayLike(that, obj.data)\r\n    }\r\n  }\r\n\r\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\r\n}\r\n\r\nfunction checked (length) {\r\n  // Note: cannot use `length < kMaxLength()` here because that fails when\r\n  // length is NaN (which is otherwise coerced to zero.)\r\n  if (length >= kMaxLength()) {\r\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\r\n  }\r\n  return length | 0\r\n}\r\n\r\nfunction SlowBuffer (length) {\r\n  if (+length != length) { // eslint-disable-line eqeqeq\r\n    length = 0\r\n  }\r\n  return Buffer.alloc(+length)\r\n}\r\n\r\nBuffer.isBuffer = function isBuffer (b) {\r\n  return !!(b != null && b._isBuffer)\r\n}\r\n\r\nBuffer.compare = function compare (a, b) {\r\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\r\n    throw new TypeError('Arguments must be Buffers')\r\n  }\r\n\r\n  if (a === b) return 0\r\n\r\n  var x = a.length\r\n  var y = b.length\r\n\r\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\r\n    if (a[i] !== b[i]) {\r\n      x = a[i]\r\n      y = b[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\nBuffer.isEncoding = function isEncoding (encoding) {\r\n  switch (String(encoding).toLowerCase()) {\r\n    case 'hex':\r\n    case 'utf8':\r\n    case 'utf-8':\r\n    case 'ascii':\r\n    case 'latin1':\r\n    case 'binary':\r\n    case 'base64':\r\n    case 'ucs2':\r\n    case 'ucs-2':\r\n    case 'utf16le':\r\n    case 'utf-16le':\r\n      return true\r\n    default:\r\n      return false\r\n  }\r\n}\r\n\r\nBuffer.concat = function concat (list, length) {\r\n  if (!isArray(list)) {\r\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n  }\r\n\r\n  if (list.length === 0) {\r\n    return Buffer.alloc(0)\r\n  }\r\n\r\n  var i\r\n  if (length === undefined) {\r\n    length = 0\r\n    for (i = 0; i < list.length; ++i) {\r\n      length += list[i].length\r\n    }\r\n  }\r\n\r\n  var buffer = Buffer.allocUnsafe(length)\r\n  var pos = 0\r\n  for (i = 0; i < list.length; ++i) {\r\n    var buf = list[i]\r\n    if (!Buffer.isBuffer(buf)) {\r\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    }\r\n    buf.copy(buffer, pos)\r\n    pos += buf.length\r\n  }\r\n  return buffer\r\n}\r\n\r\nfunction byteLength (string, encoding) {\r\n  if (Buffer.isBuffer(string)) {\r\n    return string.length\r\n  }\r\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\r\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\r\n    return string.byteLength\r\n  }\r\n  if (typeof string !== 'string') {\r\n    string = '' + string\r\n  }\r\n\r\n  var len = string.length\r\n  if (len === 0) return 0\r\n\r\n  // Use a for loop to avoid recursion\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return len\r\n      case 'utf8':\r\n      case 'utf-8':\r\n      case undefined:\r\n        return utf8ToBytes(string).length\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return len * 2\r\n      case 'hex':\r\n        return len >>> 1\r\n      case 'base64':\r\n        return base64ToBytes(string).length\r\n      default:\r\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\nBuffer.byteLength = byteLength\r\n\r\nfunction slowToString (encoding, start, end) {\r\n  var loweredCase = false\r\n\r\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n  // property of a typed array.\r\n\r\n  // This behaves neither like String nor Uint8Array in that we set start/end\r\n  // to their upper/lower bounds if the value passed is out of range.\r\n  // undefined is handled specially as per ECMA-262 6th Edition,\r\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n  if (start === undefined || start < 0) {\r\n    start = 0\r\n  }\r\n  // Return early if start > this.length. Done here to prevent potential uint32\r\n  // coercion fail below.\r\n  if (start > this.length) {\r\n    return ''\r\n  }\r\n\r\n  if (end === undefined || end > this.length) {\r\n    end = this.length\r\n  }\r\n\r\n  if (end <= 0) {\r\n    return ''\r\n  }\r\n\r\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\r\n  end >>>= 0\r\n  start >>>= 0\r\n\r\n  if (end <= start) {\r\n    return ''\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  while (true) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexSlice(this, start, end)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Slice(this, start, end)\r\n\r\n      case 'ascii':\r\n        return asciiSlice(this, start, end)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Slice(this, start, end)\r\n\r\n      case 'base64':\r\n        return base64Slice(this, start, end)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return utf16leSlice(this, start, end)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = (encoding + '').toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\r\n// Buffer instances.\r\nBuffer.prototype._isBuffer = true\r\n\r\nfunction swap (b, n, m) {\r\n  var i = b[n]\r\n  b[n] = b[m]\r\n  b[m] = i\r\n}\r\n\r\nBuffer.prototype.swap16 = function swap16 () {\r\n  var len = this.length\r\n  if (len % 2 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 2) {\r\n    swap(this, i, i + 1)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap32 = function swap32 () {\r\n  var len = this.length\r\n  if (len % 4 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 4) {\r\n    swap(this, i, i + 3)\r\n    swap(this, i + 1, i + 2)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap64 = function swap64 () {\r\n  var len = this.length\r\n  if (len % 8 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 8) {\r\n    swap(this, i, i + 7)\r\n    swap(this, i + 1, i + 6)\r\n    swap(this, i + 2, i + 5)\r\n    swap(this, i + 3, i + 4)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.toString = function toString () {\r\n  var length = this.length | 0\r\n  if (length === 0) return ''\r\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n  return slowToString.apply(this, arguments)\r\n}\r\n\r\nBuffer.prototype.equals = function equals (b) {\r\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n  if (this === b) return true\r\n  return Buffer.compare(this, b) === 0\r\n}\r\n\r\nBuffer.prototype.inspect = function inspect () {\r\n  var str = ''\r\n  var max = exports.INSPECT_MAX_BYTES\r\n  if (this.length > 0) {\r\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\r\n    if (this.length > max) str += ' ... '\r\n  }\r\n  return '<Buffer ' + str + '>'\r\n}\r\n\r\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\r\n  if (!Buffer.isBuffer(target)) {\r\n    throw new TypeError('Argument must be a Buffer')\r\n  }\r\n\r\n  if (start === undefined) {\r\n    start = 0\r\n  }\r\n  if (end === undefined) {\r\n    end = target ? target.length : 0\r\n  }\r\n  if (thisStart === undefined) {\r\n    thisStart = 0\r\n  }\r\n  if (thisEnd === undefined) {\r\n    thisEnd = this.length\r\n  }\r\n\r\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\r\n    throw new RangeError('out of range index')\r\n  }\r\n\r\n  if (thisStart >= thisEnd && start >= end) {\r\n    return 0\r\n  }\r\n  if (thisStart >= thisEnd) {\r\n    return -1\r\n  }\r\n  if (start >= end) {\r\n    return 1\r\n  }\r\n\r\n  start >>>= 0\r\n  end >>>= 0\r\n  thisStart >>>= 0\r\n  thisEnd >>>= 0\r\n\r\n  if (this === target) return 0\r\n\r\n  var x = thisEnd - thisStart\r\n  var y = end - start\r\n  var len = Math.min(x, y)\r\n\r\n  var thisCopy = this.slice(thisStart, thisEnd)\r\n  var targetCopy = target.slice(start, end)\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    if (thisCopy[i] !== targetCopy[i]) {\r\n      x = thisCopy[i]\r\n      y = targetCopy[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant is val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\r\n  // Empty buffer means no match\r\n  if (buffer.length === 0) return -1\r\n\r\n  // Normalize byteOffset\r\n  if (typeof byteOffset === 'string') {\r\n    encoding = byteOffset\r\n    byteOffset = 0\r\n  } else if (byteOffset > 0x7fffffff) {\r\n    byteOffset = 0x7fffffff\r\n  } else if (byteOffset < -0x80000000) {\r\n    byteOffset = -0x80000000\r\n  }\r\n  byteOffset = +byteOffset  // Coerce to Number.\r\n  if (isNaN(byteOffset)) {\r\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n    byteOffset = dir ? 0 : (buffer.length - 1)\r\n  }\r\n\r\n  // Normalize byteOffset: negative offsets start from the end of the buffer\r\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\r\n  if (byteOffset >= buffer.length) {\r\n    if (dir) return -1\r\n    else byteOffset = buffer.length - 1\r\n  } else if (byteOffset < 0) {\r\n    if (dir) byteOffset = 0\r\n    else return -1\r\n  }\r\n\r\n  // Normalize val\r\n  if (typeof val === 'string') {\r\n    val = Buffer.from(val, encoding)\r\n  }\r\n\r\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n  if (Buffer.isBuffer(val)) {\r\n    // Special case: looking for empty string/buffer always fails\r\n    if (val.length === 0) {\r\n      return -1\r\n    }\r\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n  } else if (typeof val === 'number') {\r\n    val = val & 0xFF // Search for a byte value [0-255]\r\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\r\n        typeof Uint8Array.prototype.indexOf === 'function') {\r\n      if (dir) {\r\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\r\n      } else {\r\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\r\n      }\r\n    }\r\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\r\n  }\r\n\r\n  throw new TypeError('val must be string, number or Buffer')\r\n}\r\n\r\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\r\n  var indexSize = 1\r\n  var arrLength = arr.length\r\n  var valLength = val.length\r\n\r\n  if (encoding !== undefined) {\r\n    encoding = String(encoding).toLowerCase()\r\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\r\n        encoding === 'utf16le' || encoding === 'utf-16le') {\r\n      if (arr.length < 2 || val.length < 2) {\r\n        return -1\r\n      }\r\n      indexSize = 2\r\n      arrLength /= 2\r\n      valLength /= 2\r\n      byteOffset /= 2\r\n    }\r\n  }\r\n\r\n  function read (buf, i) {\r\n    if (indexSize === 1) {\r\n      return buf[i]\r\n    } else {\r\n      return buf.readUInt16BE(i * indexSize)\r\n    }\r\n  }\r\n\r\n  var i\r\n  if (dir) {\r\n    var foundIndex = -1\r\n    for (i = byteOffset; i < arrLength; i++) {\r\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\r\n        if (foundIndex === -1) foundIndex = i\r\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\r\n      } else {\r\n        if (foundIndex !== -1) i -= i - foundIndex\r\n        foundIndex = -1\r\n      }\r\n    }\r\n  } else {\r\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\r\n    for (i = byteOffset; i >= 0; i--) {\r\n      var found = true\r\n      for (var j = 0; j < valLength; j++) {\r\n        if (read(arr, i + j) !== read(val, j)) {\r\n          found = false\r\n          break\r\n        }\r\n      }\r\n      if (found) return i\r\n    }\r\n  }\r\n\r\n  return -1\r\n}\r\n\r\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\r\n  return this.indexOf(val, byteOffset, encoding) !== -1\r\n}\r\n\r\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n}\r\n\r\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n}\r\n\r\nfunction hexWrite (buf, string, offset, length) {\r\n  offset = Number(offset) || 0\r\n  var remaining = buf.length - offset\r\n  if (!length) {\r\n    length = remaining\r\n  } else {\r\n    length = Number(length)\r\n    if (length > remaining) {\r\n      length = remaining\r\n    }\r\n  }\r\n\r\n  // must be an even number of digits\r\n  var strLen = string.length\r\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\r\n\r\n  if (length > strLen / 2) {\r\n    length = strLen / 2\r\n  }\r\n  for (var i = 0; i < length; ++i) {\r\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\r\n    if (isNaN(parsed)) return i\r\n    buf[offset + i] = parsed\r\n  }\r\n  return i\r\n}\r\n\r\nfunction utf8Write (buf, string, offset, length) {\r\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nfunction asciiWrite (buf, string, offset, length) {\r\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction latin1Write (buf, string, offset, length) {\r\n  return asciiWrite(buf, string, offset, length)\r\n}\r\n\r\nfunction base64Write (buf, string, offset, length) {\r\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction ucs2Write (buf, string, offset, length) {\r\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nBuffer.prototype.write = function write (string, offset, length, encoding) {\r\n  // Buffer#write(string)\r\n  if (offset === undefined) {\r\n    encoding = 'utf8'\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, encoding)\r\n  } else if (length === undefined && typeof offset === 'string') {\r\n    encoding = offset\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, offset[, length][, encoding])\r\n  } else if (isFinite(offset)) {\r\n    offset = offset | 0\r\n    if (isFinite(length)) {\r\n      length = length | 0\r\n      if (encoding === undefined) encoding = 'utf8'\r\n    } else {\r\n      encoding = length\r\n      length = undefined\r\n    }\r\n  // legacy write(string, encoding, offset, length) - remove in v0.13\r\n  } else {\r\n    throw new Error(\r\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\r\n    )\r\n  }\r\n\r\n  var remaining = this.length - offset\r\n  if (length === undefined || length > remaining) length = remaining\r\n\r\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n    throw new RangeError('Attempt to write outside buffer bounds')\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexWrite(this, string, offset, length)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Write(this, string, offset, length)\r\n\r\n      case 'ascii':\r\n        return asciiWrite(this, string, offset, length)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Write(this, string, offset, length)\r\n\r\n      case 'base64':\r\n        // Warning: maxLength not taken into account in base64Write\r\n        return base64Write(this, string, offset, length)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return ucs2Write(this, string, offset, length)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\nBuffer.prototype.toJSON = function toJSON () {\r\n  return {\r\n    type: 'Buffer',\r\n    data: Array.prototype.slice.call(this._arr || this, 0)\r\n  }\r\n}\r\n\r\nfunction base64Slice (buf, start, end) {\r\n  if (start === 0 && end === buf.length) {\r\n    return base64.fromByteArray(buf)\r\n  } else {\r\n    return base64.fromByteArray(buf.slice(start, end))\r\n  }\r\n}\r\n\r\nfunction utf8Slice (buf, start, end) {\r\n  end = Math.min(buf.length, end)\r\n  var res = []\r\n\r\n  var i = start\r\n  while (i < end) {\r\n    var firstByte = buf[i]\r\n    var codePoint = null\r\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\r\n      : (firstByte > 0xDF) ? 3\r\n      : (firstByte > 0xBF) ? 2\r\n      : 1\r\n\r\n    if (i + bytesPerSequence <= end) {\r\n      var secondByte, thirdByte, fourthByte, tempCodePoint\r\n\r\n      switch (bytesPerSequence) {\r\n        case 1:\r\n          if (firstByte < 0x80) {\r\n            codePoint = firstByte\r\n          }\r\n          break\r\n        case 2:\r\n          secondByte = buf[i + 1]\r\n          if ((secondByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\r\n            if (tempCodePoint > 0x7F) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 3:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\r\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 4:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          fourthByte = buf[i + 3]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\r\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    if (codePoint === null) {\r\n      // we did not generate a valid codePoint so insert a\r\n      // replacement char (U+FFFD) and advance only 1 byte\r\n      codePoint = 0xFFFD\r\n      bytesPerSequence = 1\r\n    } else if (codePoint > 0xFFFF) {\r\n      // encode to utf16 (surrogate pair dance)\r\n      codePoint -= 0x10000\r\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\r\n      codePoint = 0xDC00 | codePoint & 0x3FF\r\n    }\r\n\r\n    res.push(codePoint)\r\n    i += bytesPerSequence\r\n  }\r\n\r\n  return decodeCodePointsArray(res)\r\n}\r\n\r\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n// the lowest limit is Chrome, with 0x10000 args.\r\n// We go 1 magnitude less, for safety\r\nvar MAX_ARGUMENTS_LENGTH = 0x1000\r\n\r\nfunction decodeCodePointsArray (codePoints) {\r\n  var len = codePoints.length\r\n  if (len <= MAX_ARGUMENTS_LENGTH) {\r\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n  }\r\n\r\n  // Decode in chunks to avoid \"call stack size exceeded\".\r\n  var res = ''\r\n  var i = 0\r\n  while (i < len) {\r\n    res += String.fromCharCode.apply(\r\n      String,\r\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n    )\r\n  }\r\n  return res\r\n}\r\n\r\nfunction asciiSlice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i] & 0x7F)\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction latin1Slice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i])\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction hexSlice (buf, start, end) {\r\n  var len = buf.length\r\n\r\n  if (!start || start < 0) start = 0\r\n  if (!end || end < 0 || end > len) end = len\r\n\r\n  var out = ''\r\n  for (var i = start; i < end; ++i) {\r\n    out += toHex(buf[i])\r\n  }\r\n  return out\r\n}\r\n\r\nfunction utf16leSlice (buf, start, end) {\r\n  var bytes = buf.slice(start, end)\r\n  var res = ''\r\n  for (var i = 0; i < bytes.length; i += 2) {\r\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\r\n  }\r\n  return res\r\n}\r\n\r\nBuffer.prototype.slice = function slice (start, end) {\r\n  var len = this.length\r\n  start = ~~start\r\n  end = end === undefined ? len : ~~end\r\n\r\n  if (start < 0) {\r\n    start += len\r\n    if (start < 0) start = 0\r\n  } else if (start > len) {\r\n    start = len\r\n  }\r\n\r\n  if (end < 0) {\r\n    end += len\r\n    if (end < 0) end = 0\r\n  } else if (end > len) {\r\n    end = len\r\n  }\r\n\r\n  if (end < start) end = start\r\n\r\n  var newBuf\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    newBuf = this.subarray(start, end)\r\n    newBuf.__proto__ = Buffer.prototype\r\n  } else {\r\n    var sliceLen = end - start\r\n    newBuf = new Buffer(sliceLen, undefined)\r\n    for (var i = 0; i < sliceLen; ++i) {\r\n      newBuf[i] = this[i + start]\r\n    }\r\n  }\r\n\r\n  return newBuf\r\n}\r\n\r\n/*\r\n * Need to make sure that buffer isn't trying to write out of bounds.\r\n */\r\nfunction checkOffset (offset, ext, length) {\r\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\r\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\r\n}\r\n\r\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) {\r\n    checkOffset(offset, byteLength, this.length)\r\n  }\r\n\r\n  var val = this[offset + --byteLength]\r\n  var mul = 1\r\n  while (byteLength > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --byteLength] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  return this[offset]\r\n}\r\n\r\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return this[offset] | (this[offset + 1] << 8)\r\n}\r\n\r\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return (this[offset] << 8) | this[offset + 1]\r\n}\r\n\r\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return ((this[offset]) |\r\n      (this[offset + 1] << 8) |\r\n      (this[offset + 2] << 16)) +\r\n      (this[offset + 3] * 0x1000000)\r\n}\r\n\r\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] * 0x1000000) +\r\n    ((this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var i = byteLength\r\n  var mul = 1\r\n  var val = this[offset + --i]\r\n  while (i > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  if (!(this[offset] & 0x80)) return (this[offset])\r\n  return ((0xff - this[offset] + 1) * -1)\r\n}\r\n\r\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset] | (this[offset + 1] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset + 1] | (this[offset] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset]) |\r\n    (this[offset + 1] << 8) |\r\n    (this[offset + 2] << 16) |\r\n    (this[offset + 3] << 24)\r\n}\r\n\r\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] << 24) |\r\n    (this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    (this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, true, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, false, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, true, 52, 8)\r\n}\r\n\r\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, false, 52, 8)\r\n}\r\n\r\nfunction checkInt (buf, value, offset, ext, max, min) {\r\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n}\r\n\r\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var mul = 1\r\n  var i = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\r\n  if (value < 0) value = 0xffff + value + 1\r\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\r\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\r\n      (littleEndian ? i : 1 - i) * 8\r\n  }\r\n}\r\n\r\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff)\r\n    this[offset + 1] = (value >>> 8)\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, true)\r\n  }\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 8)\r\n    this[offset + 1] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, false)\r\n  }\r\n  return offset + 2\r\n}\r\n\r\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\r\n  if (value < 0) value = 0xffffffff + value + 1\r\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\r\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\r\n  }\r\n}\r\n\r\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset + 3] = (value >>> 24)\r\n    this[offset + 2] = (value >>> 16)\r\n    this[offset + 1] = (value >>> 8)\r\n    this[offset] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, true)\r\n  }\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 24)\r\n    this[offset + 1] = (value >>> 16)\r\n    this[offset + 2] = (value >>> 8)\r\n    this[offset + 3] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, false)\r\n  }\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, 8 * byteLength - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = 0\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, 8 * byteLength - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\r\n  if (value < 0) value = 0xff + value + 1\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff)\r\n    this[offset + 1] = (value >>> 8)\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, true)\r\n  }\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 8)\r\n    this[offset + 1] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, false)\r\n  }\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff)\r\n    this[offset + 1] = (value >>> 8)\r\n    this[offset + 2] = (value >>> 16)\r\n    this[offset + 3] = (value >>> 24)\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, true)\r\n  }\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  if (value < 0) value = 0xffffffff + value + 1\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 24)\r\n    this[offset + 1] = (value >>> 16)\r\n    this[offset + 2] = (value >>> 8)\r\n    this[offset + 3] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, false)\r\n  }\r\n  return offset + 4\r\n}\r\n\r\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n  if (offset < 0) throw new RangeError('Index out of range')\r\n}\r\n\r\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, false, noAssert)\r\n}\r\n\r\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\r\n  return offset + 8\r\n}\r\n\r\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, false, noAssert)\r\n}\r\n\r\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\r\n  if (!start) start = 0\r\n  if (!end && end !== 0) end = this.length\r\n  if (targetStart >= target.length) targetStart = target.length\r\n  if (!targetStart) targetStart = 0\r\n  if (end > 0 && end < start) end = start\r\n\r\n  // Copy 0 bytes; we're done\r\n  if (end === start) return 0\r\n  if (target.length === 0 || this.length === 0) return 0\r\n\r\n  // Fatal error conditions\r\n  if (targetStart < 0) {\r\n    throw new RangeError('targetStart out of bounds')\r\n  }\r\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\r\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n  // Are we oob?\r\n  if (end > this.length) end = this.length\r\n  if (target.length - targetStart < end - start) {\r\n    end = target.length - targetStart + start\r\n  }\r\n\r\n  var len = end - start\r\n  var i\r\n\r\n  if (this === target && start < targetStart && targetStart < end) {\r\n    // descending copy from end\r\n    for (i = len - 1; i >= 0; --i) {\r\n      target[i + targetStart] = this[i + start]\r\n    }\r\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\r\n    // ascending copy from start\r\n    for (i = 0; i < len; ++i) {\r\n      target[i + targetStart] = this[i + start]\r\n    }\r\n  } else {\r\n    Uint8Array.prototype.set.call(\r\n      target,\r\n      this.subarray(start, start + len),\r\n      targetStart\r\n    )\r\n  }\r\n\r\n  return len\r\n}\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\r\n  // Handle string cases:\r\n  if (typeof val === 'string') {\r\n    if (typeof start === 'string') {\r\n      encoding = start\r\n      start = 0\r\n      end = this.length\r\n    } else if (typeof end === 'string') {\r\n      encoding = end\r\n      end = this.length\r\n    }\r\n    if (val.length === 1) {\r\n      var code = val.charCodeAt(0)\r\n      if (code < 256) {\r\n        val = code\r\n      }\r\n    }\r\n    if (encoding !== undefined && typeof encoding !== 'string') {\r\n      throw new TypeError('encoding must be a string')\r\n    }\r\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n      throw new TypeError('Unknown encoding: ' + encoding)\r\n    }\r\n  } else if (typeof val === 'number') {\r\n    val = val & 255\r\n  }\r\n\r\n  // Invalid ranges are not set to a default, so can range check early.\r\n  if (start < 0 || this.length < start || this.length < end) {\r\n    throw new RangeError('Out of range index')\r\n  }\r\n\r\n  if (end <= start) {\r\n    return this\r\n  }\r\n\r\n  start = start >>> 0\r\n  end = end === undefined ? this.length : end >>> 0\r\n\r\n  if (!val) val = 0\r\n\r\n  var i\r\n  if (typeof val === 'number') {\r\n    for (i = start; i < end; ++i) {\r\n      this[i] = val\r\n    }\r\n  } else {\r\n    var bytes = Buffer.isBuffer(val)\r\n      ? val\r\n      : utf8ToBytes(new Buffer(val, encoding).toString())\r\n    var len = bytes.length\r\n    for (i = 0; i < end - start; ++i) {\r\n      this[i + start] = bytes[i % len]\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// HELPER FUNCTIONS\r\n// ================\r\n\r\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\r\n\r\nfunction base64clean (str) {\r\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\r\n  // Node converts strings with length < 2 to ''\r\n  if (str.length < 2) return ''\r\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n  while (str.length % 4 !== 0) {\r\n    str = str + '='\r\n  }\r\n  return str\r\n}\r\n\r\nfunction stringtrim (str) {\r\n  if (str.trim) return str.trim()\r\n  return str.replace(/^\\s+|\\s+$/g, '')\r\n}\r\n\r\nfunction toHex (n) {\r\n  if (n < 16) return '0' + n.toString(16)\r\n  return n.toString(16)\r\n}\r\n\r\nfunction utf8ToBytes (string, units) {\r\n  units = units || Infinity\r\n  var codePoint\r\n  var length = string.length\r\n  var leadSurrogate = null\r\n  var bytes = []\r\n\r\n  for (var i = 0; i < length; ++i) {\r\n    codePoint = string.charCodeAt(i)\r\n\r\n    // is surrogate component\r\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n      // last char was a lead\r\n      if (!leadSurrogate) {\r\n        // no lead yet\r\n        if (codePoint > 0xDBFF) {\r\n          // unexpected trail\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        } else if (i + 1 === length) {\r\n          // unpaired lead\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        }\r\n\r\n        // valid lead\r\n        leadSurrogate = codePoint\r\n\r\n        continue\r\n      }\r\n\r\n      // 2 leads in a row\r\n      if (codePoint < 0xDC00) {\r\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n        leadSurrogate = codePoint\r\n        continue\r\n      }\r\n\r\n      // valid surrogate pair\r\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\r\n    } else if (leadSurrogate) {\r\n      // valid bmp char, but last char was a lead\r\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n    }\r\n\r\n    leadSurrogate = null\r\n\r\n    // encode utf8\r\n    if (codePoint < 0x80) {\r\n      if ((units -= 1) < 0) break\r\n      bytes.push(codePoint)\r\n    } else if (codePoint < 0x800) {\r\n      if ((units -= 2) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x6 | 0xC0,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x10000) {\r\n      if ((units -= 3) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0xC | 0xE0,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x110000) {\r\n      if ((units -= 4) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x12 | 0xF0,\r\n        codePoint >> 0xC & 0x3F | 0x80,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else {\r\n      throw new Error('Invalid code point')\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nfunction asciiToBytes (str) {\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Node's code seems to be doing this and not & 0x7F..\r\n    byteArray.push(str.charCodeAt(i) & 0xFF)\r\n  }\r\n  return byteArray\r\n}\r\n\r\nfunction utf16leToBytes (str, units) {\r\n  var c, hi, lo\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    if ((units -= 2) < 0) break\r\n\r\n    c = str.charCodeAt(i)\r\n    hi = c >> 8\r\n    lo = c % 256\r\n    byteArray.push(lo)\r\n    byteArray.push(hi)\r\n  }\r\n\r\n  return byteArray\r\n}\r\n\r\nfunction base64ToBytes (str) {\r\n  return base64.toByteArray(base64clean(str))\r\n}\r\n\r\nfunction blitBuffer (src, dst, offset, length) {\r\n  for (var i = 0; i < length; ++i) {\r\n    if ((i + offset >= dst.length) || (i >= src.length)) break\r\n    dst[i + offset] = src[i]\r\n  }\r\n  return i\r\n}\r\n\r\nfunction isnan (val) {\r\n  return val !== val // eslint-disable-line no-self-compare\r\n}\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/component-bind/index.js":
/*!**********************************************!*\
  !*** ./node_modules/component-bind/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Slice reference.\r\n */\r\n\r\nvar slice = [].slice;\r\n\r\n/**\r\n * Bind `obj` to `fn`.\r\n *\r\n * @param {Object} obj\r\n * @param {Function|String} fn or string\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(obj, fn){\r\n  if ('string' == typeof fn) fn = obj[fn];\r\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\r\n  var args = slice.call(arguments, 2);\r\n  return function(){\r\n    return fn.apply(obj, args.concat(slice.call(arguments)));\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/component-bind/index.js?");

/***/ }),

/***/ "./node_modules/component-emitter/index.js":
/*!*************************************************!*\
  !*** ./node_modules/component-emitter/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/component-emitter/index.js?");

/***/ }),

/***/ "./node_modules/component-inherit/index.js":
/*!*************************************************!*\
  !*** ./node_modules/component-inherit/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\nmodule.exports = function(a, b){\r\n  var fn = function(){};\r\n  fn.prototype = b.prototype;\r\n  a.prototype = new fn;\r\n  a.prototype.constructor = a;\r\n};\n\n//# sourceURL=webpack:///./node_modules/component-inherit/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/globalThis.browser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/globalThis.browser.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = (function () {\r\n  if (typeof self !== 'undefined') {\r\n    return self;\r\n  } else if (typeof window !== 'undefined') {\r\n    return window;\r\n  } else {\r\n    return Function('return this')(); // eslint-disable-line no-new-func\r\n  }\r\n})();\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/globalThis.browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/engine.io-client/lib/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\nmodule.exports = __webpack_require__(/*! ./socket */ \"./node_modules/engine.io-client/lib/socket.js\");\r\n\r\n/**\r\n * Exports parser\r\n *\r\n * @api public\r\n *\r\n */\r\nmodule.exports.parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/socket.js":
/*!*****************************************************!*\
  !*** ./node_modules/engine.io-client/lib/socket.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\r\n * Module dependencies.\r\n */\r\n\r\nvar transports = __webpack_require__(/*! ./transports/index */ \"./node_modules/engine.io-client/lib/transports/index.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:socket');\r\nvar index = __webpack_require__(/*! indexof */ \"./node_modules/indexof/index.js\");\r\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\nvar parseuri = __webpack_require__(/*! parseuri */ \"./node_modules/parseuri/index.js\");\r\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Socket;\r\n\r\n/**\r\n * Socket constructor.\r\n *\r\n * @param {String|Object} uri or options\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Socket (uri, opts) {\r\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\r\n\r\n  opts = opts || {};\r\n\r\n  if (uri && 'object' === typeof uri) {\r\n    opts = uri;\r\n    uri = null;\r\n  }\r\n\r\n  if (uri) {\r\n    uri = parseuri(uri);\r\n    opts.hostname = uri.host;\r\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\r\n    opts.port = uri.port;\r\n    if (uri.query) opts.query = uri.query;\r\n  } else if (opts.host) {\r\n    opts.hostname = parseuri(opts.host).host;\r\n  }\r\n\r\n  this.secure = null != opts.secure ? opts.secure\r\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\r\n\r\n  if (opts.hostname && !opts.port) {\r\n    // if no port is specified manually, use the protocol default\r\n    opts.port = this.secure ? '443' : '80';\r\n  }\r\n\r\n  this.agent = opts.agent || false;\r\n  this.hostname = opts.hostname ||\r\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\r\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\r\n      ? location.port\r\n      : (this.secure ? 443 : 80));\r\n  this.query = opts.query || {};\r\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\r\n  this.upgrade = false !== opts.upgrade;\r\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\r\n  this.forceJSONP = !!opts.forceJSONP;\r\n  this.jsonp = false !== opts.jsonp;\r\n  this.forceBase64 = !!opts.forceBase64;\r\n  this.enablesXDR = !!opts.enablesXDR;\r\n  this.withCredentials = false !== opts.withCredentials;\r\n  this.timestampParam = opts.timestampParam || 't';\r\n  this.timestampRequests = opts.timestampRequests;\r\n  this.transports = opts.transports || ['polling', 'websocket'];\r\n  this.transportOptions = opts.transportOptions || {};\r\n  this.readyState = '';\r\n  this.writeBuffer = [];\r\n  this.prevBufferLen = 0;\r\n  this.policyPort = opts.policyPort || 843;\r\n  this.rememberUpgrade = opts.rememberUpgrade || false;\r\n  this.binaryType = null;\r\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\r\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\r\n\r\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\r\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\r\n    this.perMessageDeflate.threshold = 1024;\r\n  }\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx || null;\r\n  this.key = opts.key || null;\r\n  this.passphrase = opts.passphrase || null;\r\n  this.cert = opts.cert || null;\r\n  this.ca = opts.ca || null;\r\n  this.ciphers = opts.ciphers || null;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\r\n  this.forceNode = !!opts.forceNode;\r\n\r\n  // detect ReactNative environment\r\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\r\n\r\n  // other options for Node.js or ReactNative client\r\n  if (typeof self === 'undefined' || this.isReactNative) {\r\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\r\n      this.extraHeaders = opts.extraHeaders;\r\n    }\r\n\r\n    if (opts.localAddress) {\r\n      this.localAddress = opts.localAddress;\r\n    }\r\n  }\r\n\r\n  // set on handshake\r\n  this.id = null;\r\n  this.upgrades = null;\r\n  this.pingInterval = null;\r\n  this.pingTimeout = null;\r\n\r\n  // set on heartbeat\r\n  this.pingIntervalTimer = null;\r\n  this.pingTimeoutTimer = null;\r\n\r\n  this.open();\r\n}\r\n\r\nSocket.priorWebsocketSuccess = false;\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.protocol = parser.protocol; // this is an int\r\n\r\n/**\r\n * Expose deps for legacy compatibility\r\n * and standalone browser access.\r\n */\r\n\r\nSocket.Socket = Socket;\r\nSocket.Transport = __webpack_require__(/*! ./transport */ \"./node_modules/engine.io-client/lib/transport.js\");\r\nSocket.transports = __webpack_require__(/*! ./transports/index */ \"./node_modules/engine.io-client/lib/transports/index.js\");\r\nSocket.parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\n\r\n/**\r\n * Creates transport of the given type.\r\n *\r\n * @param {String} transport name\r\n * @return {Transport}\r\n * @api private\r\n */\r\n\r\nSocket.prototype.createTransport = function (name) {\r\n  debug('creating transport \"%s\"', name);\r\n  var query = clone(this.query);\r\n\r\n  // append engine.io protocol identifier\r\n  query.EIO = parser.protocol;\r\n\r\n  // transport name\r\n  query.transport = name;\r\n\r\n  // per-transport options\r\n  var options = this.transportOptions[name] || {};\r\n\r\n  // session id if we already have one\r\n  if (this.id) query.sid = this.id;\r\n\r\n  var transport = new transports[name]({\r\n    query: query,\r\n    socket: this,\r\n    agent: options.agent || this.agent,\r\n    hostname: options.hostname || this.hostname,\r\n    port: options.port || this.port,\r\n    secure: options.secure || this.secure,\r\n    path: options.path || this.path,\r\n    forceJSONP: options.forceJSONP || this.forceJSONP,\r\n    jsonp: options.jsonp || this.jsonp,\r\n    forceBase64: options.forceBase64 || this.forceBase64,\r\n    enablesXDR: options.enablesXDR || this.enablesXDR,\r\n    withCredentials: options.withCredentials || this.withCredentials,\r\n    timestampRequests: options.timestampRequests || this.timestampRequests,\r\n    timestampParam: options.timestampParam || this.timestampParam,\r\n    policyPort: options.policyPort || this.policyPort,\r\n    pfx: options.pfx || this.pfx,\r\n    key: options.key || this.key,\r\n    passphrase: options.passphrase || this.passphrase,\r\n    cert: options.cert || this.cert,\r\n    ca: options.ca || this.ca,\r\n    ciphers: options.ciphers || this.ciphers,\r\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\r\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\r\n    extraHeaders: options.extraHeaders || this.extraHeaders,\r\n    forceNode: options.forceNode || this.forceNode,\r\n    localAddress: options.localAddress || this.localAddress,\r\n    requestTimeout: options.requestTimeout || this.requestTimeout,\r\n    protocols: options.protocols || void (0),\r\n    isReactNative: this.isReactNative\r\n  });\r\n\r\n  return transport;\r\n};\r\n\r\nfunction clone (obj) {\r\n  var o = {};\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      o[i] = obj[i];\r\n    }\r\n  }\r\n  return o;\r\n}\r\n\r\n/**\r\n * Initializes transport to use and starts probe.\r\n *\r\n * @api private\r\n */\r\nSocket.prototype.open = function () {\r\n  var transport;\r\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\r\n    transport = 'websocket';\r\n  } else if (0 === this.transports.length) {\r\n    // Emit error on next tick so it can be listened to\r\n    var self = this;\r\n    setTimeout(function () {\r\n      self.emit('error', 'No transports available');\r\n    }, 0);\r\n    return;\r\n  } else {\r\n    transport = this.transports[0];\r\n  }\r\n  this.readyState = 'opening';\r\n\r\n  // Retry with the next transport if the transport is disabled (jsonp: false)\r\n  try {\r\n    transport = this.createTransport(transport);\r\n  } catch (e) {\r\n    this.transports.shift();\r\n    this.open();\r\n    return;\r\n  }\r\n\r\n  transport.open();\r\n  this.setTransport(transport);\r\n};\r\n\r\n/**\r\n * Sets the current transport. Disables the existing one (if any).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setTransport = function (transport) {\r\n  debug('setting transport %s', transport.name);\r\n  var self = this;\r\n\r\n  if (this.transport) {\r\n    debug('clearing existing transport %s', this.transport.name);\r\n    this.transport.removeAllListeners();\r\n  }\r\n\r\n  // set up transport\r\n  this.transport = transport;\r\n\r\n  // set up transport listeners\r\n  transport\r\n  .on('drain', function () {\r\n    self.onDrain();\r\n  })\r\n  .on('packet', function (packet) {\r\n    self.onPacket(packet);\r\n  })\r\n  .on('error', function (e) {\r\n    self.onError(e);\r\n  })\r\n  .on('close', function () {\r\n    self.onClose('transport close');\r\n  });\r\n};\r\n\r\n/**\r\n * Probes a transport.\r\n *\r\n * @param {String} transport name\r\n * @api private\r\n */\r\n\r\nSocket.prototype.probe = function (name) {\r\n  debug('probing transport \"%s\"', name);\r\n  var transport = this.createTransport(name, { probe: 1 });\r\n  var failed = false;\r\n  var self = this;\r\n\r\n  Socket.priorWebsocketSuccess = false;\r\n\r\n  function onTransportOpen () {\r\n    if (self.onlyBinaryUpgrades) {\r\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\r\n      failed = failed || upgradeLosesBinary;\r\n    }\r\n    if (failed) return;\r\n\r\n    debug('probe transport \"%s\" opened', name);\r\n    transport.send([{ type: 'ping', data: 'probe' }]);\r\n    transport.once('packet', function (msg) {\r\n      if (failed) return;\r\n      if ('pong' === msg.type && 'probe' === msg.data) {\r\n        debug('probe transport \"%s\" pong', name);\r\n        self.upgrading = true;\r\n        self.emit('upgrading', transport);\r\n        if (!transport) return;\r\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\r\n\r\n        debug('pausing current transport \"%s\"', self.transport.name);\r\n        self.transport.pause(function () {\r\n          if (failed) return;\r\n          if ('closed' === self.readyState) return;\r\n          debug('changing transport and sending upgrade packet');\r\n\r\n          cleanup();\r\n\r\n          self.setTransport(transport);\r\n          transport.send([{ type: 'upgrade' }]);\r\n          self.emit('upgrade', transport);\r\n          transport = null;\r\n          self.upgrading = false;\r\n          self.flush();\r\n        });\r\n      } else {\r\n        debug('probe transport \"%s\" failed', name);\r\n        var err = new Error('probe error');\r\n        err.transport = transport.name;\r\n        self.emit('upgradeError', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  function freezeTransport () {\r\n    if (failed) return;\r\n\r\n    // Any callback called by transport should be ignored since now\r\n    failed = true;\r\n\r\n    cleanup();\r\n\r\n    transport.close();\r\n    transport = null;\r\n  }\r\n\r\n  // Handle any error that happens while probing\r\n  function onerror (err) {\r\n    var error = new Error('probe error: ' + err);\r\n    error.transport = transport.name;\r\n\r\n    freezeTransport();\r\n\r\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\r\n\r\n    self.emit('upgradeError', error);\r\n  }\r\n\r\n  function onTransportClose () {\r\n    onerror('transport closed');\r\n  }\r\n\r\n  // When the socket is closed while we're probing\r\n  function onclose () {\r\n    onerror('socket closed');\r\n  }\r\n\r\n  // When the socket is upgraded while we're probing\r\n  function onupgrade (to) {\r\n    if (transport && to.name !== transport.name) {\r\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\r\n      freezeTransport();\r\n    }\r\n  }\r\n\r\n  // Remove all listeners on the transport and on self\r\n  function cleanup () {\r\n    transport.removeListener('open', onTransportOpen);\r\n    transport.removeListener('error', onerror);\r\n    transport.removeListener('close', onTransportClose);\r\n    self.removeListener('close', onclose);\r\n    self.removeListener('upgrading', onupgrade);\r\n  }\r\n\r\n  transport.once('open', onTransportOpen);\r\n  transport.once('error', onerror);\r\n  transport.once('close', onTransportClose);\r\n\r\n  this.once('close', onclose);\r\n  this.once('upgrading', onupgrade);\r\n\r\n  transport.open();\r\n};\r\n\r\n/**\r\n * Called when connection is deemed open.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.prototype.onOpen = function () {\r\n  debug('socket open');\r\n  this.readyState = 'open';\r\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\r\n  this.emit('open');\r\n  this.flush();\r\n\r\n  // we check for `readyState` in case an `open`\r\n  // listener already closed the socket\r\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\r\n    debug('starting upgrade probes');\r\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\r\n      this.probe(this.upgrades[i]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onPacket = function (packet) {\r\n  if ('opening' === this.readyState || 'open' === this.readyState ||\r\n      'closing' === this.readyState) {\r\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\r\n\r\n    this.emit('packet', packet);\r\n\r\n    // Socket is live - any packet counts\r\n    this.emit('heartbeat');\r\n\r\n    switch (packet.type) {\r\n      case 'open':\r\n        this.onHandshake(JSON.parse(packet.data));\r\n        break;\r\n\r\n      case 'pong':\r\n        this.setPing();\r\n        this.emit('pong');\r\n        break;\r\n\r\n      case 'error':\r\n        var err = new Error('server error');\r\n        err.code = packet.data;\r\n        this.onError(err);\r\n        break;\r\n\r\n      case 'message':\r\n        this.emit('data', packet.data);\r\n        this.emit('message', packet.data);\r\n        break;\r\n    }\r\n  } else {\r\n    debug('packet received with socket readyState \"%s\"', this.readyState);\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon handshake completion.\r\n *\r\n * @param {Object} handshake obj\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onHandshake = function (data) {\r\n  this.emit('handshake', data);\r\n  this.id = data.sid;\r\n  this.transport.query.sid = data.sid;\r\n  this.upgrades = this.filterUpgrades(data.upgrades);\r\n  this.pingInterval = data.pingInterval;\r\n  this.pingTimeout = data.pingTimeout;\r\n  this.onOpen();\r\n  // In case open handler closes socket\r\n  if ('closed' === this.readyState) return;\r\n  this.setPing();\r\n\r\n  // Prolong liveness of socket on heartbeat\r\n  this.removeListener('heartbeat', this.onHeartbeat);\r\n  this.on('heartbeat', this.onHeartbeat);\r\n};\r\n\r\n/**\r\n * Resets ping timeout.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onHeartbeat = function (timeout) {\r\n  clearTimeout(this.pingTimeoutTimer);\r\n  var self = this;\r\n  self.pingTimeoutTimer = setTimeout(function () {\r\n    if ('closed' === self.readyState) return;\r\n    self.onClose('ping timeout');\r\n  }, timeout || (self.pingInterval + self.pingTimeout));\r\n};\r\n\r\n/**\r\n * Pings server every `this.pingInterval` and expects response\r\n * within `this.pingTimeout` or closes connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setPing = function () {\r\n  var self = this;\r\n  clearTimeout(self.pingIntervalTimer);\r\n  self.pingIntervalTimer = setTimeout(function () {\r\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\r\n    self.ping();\r\n    self.onHeartbeat(self.pingTimeout);\r\n  }, self.pingInterval);\r\n};\r\n\r\n/**\r\n* Sends a ping packet.\r\n*\r\n* @api private\r\n*/\r\n\r\nSocket.prototype.ping = function () {\r\n  var self = this;\r\n  this.sendPacket('ping', function () {\r\n    self.emit('ping');\r\n  });\r\n};\r\n\r\n/**\r\n * Called on `drain` event\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onDrain = function () {\r\n  this.writeBuffer.splice(0, this.prevBufferLen);\r\n\r\n  // setting prevBufferLen = 0 is very important\r\n  // for example, when upgrading, upgrade packet is sent over,\r\n  // and a nonzero prevBufferLen could cause problems on `drain`\r\n  this.prevBufferLen = 0;\r\n\r\n  if (0 === this.writeBuffer.length) {\r\n    this.emit('drain');\r\n  } else {\r\n    this.flush();\r\n  }\r\n};\r\n\r\n/**\r\n * Flush write buffers.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.flush = function () {\r\n  if ('closed' !== this.readyState && this.transport.writable &&\r\n    !this.upgrading && this.writeBuffer.length) {\r\n    debug('flushing %d packets in socket', this.writeBuffer.length);\r\n    this.transport.send(this.writeBuffer);\r\n    // keep track of current length of writeBuffer\r\n    // splice writeBuffer and callbackBuffer on `drain`\r\n    this.prevBufferLen = this.writeBuffer.length;\r\n    this.emit('flush');\r\n  }\r\n};\r\n\r\n/**\r\n * Sends a message.\r\n *\r\n * @param {String} message.\r\n * @param {Function} callback function.\r\n * @param {Object} options.\r\n * @return {Socket} for chaining.\r\n * @api public\r\n */\r\n\r\nSocket.prototype.write =\r\nSocket.prototype.send = function (msg, options, fn) {\r\n  this.sendPacket('message', msg, options, fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a packet.\r\n *\r\n * @param {String} packet type.\r\n * @param {String} data.\r\n * @param {Object} options.\r\n * @param {Function} callback function.\r\n * @api private\r\n */\r\n\r\nSocket.prototype.sendPacket = function (type, data, options, fn) {\r\n  if ('function' === typeof data) {\r\n    fn = data;\r\n    data = undefined;\r\n  }\r\n\r\n  if ('function' === typeof options) {\r\n    fn = options;\r\n    options = null;\r\n  }\r\n\r\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\r\n    return;\r\n  }\r\n\r\n  options = options || {};\r\n  options.compress = false !== options.compress;\r\n\r\n  var packet = {\r\n    type: type,\r\n    data: data,\r\n    options: options\r\n  };\r\n  this.emit('packetCreate', packet);\r\n  this.writeBuffer.push(packet);\r\n  if (fn) this.once('flush', fn);\r\n  this.flush();\r\n};\r\n\r\n/**\r\n * Closes the connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.close = function () {\r\n  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n    this.readyState = 'closing';\r\n\r\n    var self = this;\r\n\r\n    if (this.writeBuffer.length) {\r\n      this.once('drain', function () {\r\n        if (this.upgrading) {\r\n          waitForUpgrade();\r\n        } else {\r\n          close();\r\n        }\r\n      });\r\n    } else if (this.upgrading) {\r\n      waitForUpgrade();\r\n    } else {\r\n      close();\r\n    }\r\n  }\r\n\r\n  function close () {\r\n    self.onClose('forced close');\r\n    debug('socket closing - telling transport to close');\r\n    self.transport.close();\r\n  }\r\n\r\n  function cleanupAndClose () {\r\n    self.removeListener('upgrade', cleanupAndClose);\r\n    self.removeListener('upgradeError', cleanupAndClose);\r\n    close();\r\n  }\r\n\r\n  function waitForUpgrade () {\r\n    // wait for upgrade to finish since we can't send packets while pausing a transport\r\n    self.once('upgrade', cleanupAndClose);\r\n    self.once('upgradeError', cleanupAndClose);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon transport error\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onError = function (err) {\r\n  debug('socket error %j', err);\r\n  Socket.priorWebsocketSuccess = false;\r\n  this.emit('error', err);\r\n  this.onClose('transport error', err);\r\n};\r\n\r\n/**\r\n * Called upon transport close.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onClose = function (reason, desc) {\r\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\r\n    debug('socket close with reason: \"%s\"', reason);\r\n    var self = this;\r\n\r\n    // clear timers\r\n    clearTimeout(this.pingIntervalTimer);\r\n    clearTimeout(this.pingTimeoutTimer);\r\n\r\n    // stop event from firing again for transport\r\n    this.transport.removeAllListeners('close');\r\n\r\n    // ensure transport won't stay open\r\n    this.transport.close();\r\n\r\n    // ignore further transport communication\r\n    this.transport.removeAllListeners();\r\n\r\n    // set ready state\r\n    this.readyState = 'closed';\r\n\r\n    // clear session id\r\n    this.id = null;\r\n\r\n    // emit close event\r\n    this.emit('close', reason, desc);\r\n\r\n    // clean buffers after, so users can still\r\n    // grab the buffers on `close` event\r\n    self.writeBuffer = [];\r\n    self.prevBufferLen = 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Filters upgrades, returning only those matching client transports.\r\n *\r\n * @param {Array} server upgrades\r\n * @api private\r\n *\r\n */\r\n\r\nSocket.prototype.filterUpgrades = function (upgrades) {\r\n  var filteredUpgrades = [];\r\n  for (var i = 0, j = upgrades.length; i < j; i++) {\r\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\r\n  }\r\n  return filteredUpgrades;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/socket.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transport.js":
/*!********************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transport.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Transport;\r\n\r\n/**\r\n * Transport abstract constructor.\r\n *\r\n * @param {Object} options.\r\n * @api private\r\n */\r\n\r\nfunction Transport (opts) {\r\n  this.path = opts.path;\r\n  this.hostname = opts.hostname;\r\n  this.port = opts.port;\r\n  this.secure = opts.secure;\r\n  this.query = opts.query;\r\n  this.timestampParam = opts.timestampParam;\r\n  this.timestampRequests = opts.timestampRequests;\r\n  this.readyState = '';\r\n  this.agent = opts.agent || false;\r\n  this.socket = opts.socket;\r\n  this.enablesXDR = opts.enablesXDR;\r\n  this.withCredentials = opts.withCredentials;\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx;\r\n  this.key = opts.key;\r\n  this.passphrase = opts.passphrase;\r\n  this.cert = opts.cert;\r\n  this.ca = opts.ca;\r\n  this.ciphers = opts.ciphers;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n  this.forceNode = opts.forceNode;\r\n\r\n  // results of ReactNative environment detection\r\n  this.isReactNative = opts.isReactNative;\r\n\r\n  // other options for Node.js client\r\n  this.extraHeaders = opts.extraHeaders;\r\n  this.localAddress = opts.localAddress;\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Transport.prototype);\r\n\r\n/**\r\n * Emits an error.\r\n *\r\n * @param {String} str\r\n * @return {Transport} for chaining\r\n * @api public\r\n */\r\n\r\nTransport.prototype.onError = function (msg, desc) {\r\n  var err = new Error(msg);\r\n  err.type = 'TransportError';\r\n  err.description = desc;\r\n  this.emit('error', err);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Opens the transport.\r\n *\r\n * @api public\r\n */\r\n\r\nTransport.prototype.open = function () {\r\n  if ('closed' === this.readyState || '' === this.readyState) {\r\n    this.readyState = 'opening';\r\n    this.doOpen();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Closes the transport.\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.close = function () {\r\n  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n    this.doClose();\r\n    this.onClose();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends multiple packets.\r\n *\r\n * @param {Array} packets\r\n * @api private\r\n */\r\n\r\nTransport.prototype.send = function (packets) {\r\n  if ('open' === this.readyState) {\r\n    this.write(packets);\r\n  } else {\r\n    throw new Error('Transport not open');\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon open\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onOpen = function () {\r\n  this.readyState = 'open';\r\n  this.writable = true;\r\n  this.emit('open');\r\n};\r\n\r\n/**\r\n * Called with data.\r\n *\r\n * @param {String} data\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onData = function (data) {\r\n  var packet = parser.decodePacket(data, this.socket.binaryType);\r\n  this.onPacket(packet);\r\n};\r\n\r\n/**\r\n * Called with a decoded packet.\r\n */\r\n\r\nTransport.prototype.onPacket = function (packet) {\r\n  this.emit('packet', packet);\r\n};\r\n\r\n/**\r\n * Called upon close.\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onClose = function () {\r\n  this.readyState = 'closed';\r\n  this.emit('close');\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transport.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\r\n * Module dependencies\r\n */\r\n\r\nvar XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\");\r\nvar XHR = __webpack_require__(/*! ./polling-xhr */ \"./node_modules/engine.io-client/lib/transports/polling-xhr.js\");\r\nvar JSONP = __webpack_require__(/*! ./polling-jsonp */ \"./node_modules/engine.io-client/lib/transports/polling-jsonp.js\");\r\nvar websocket = __webpack_require__(/*! ./websocket */ \"./node_modules/engine.io-client/lib/transports/websocket.js\");\r\n\r\n/**\r\n * Export transports.\r\n */\r\n\r\nexports.polling = polling;\r\nexports.websocket = websocket;\r\n\r\n/**\r\n * Polling transport polymorphic constructor.\r\n * Decides on xhr vs jsonp based on feature detection.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction polling (opts) {\r\n  var xhr;\r\n  var xd = false;\r\n  var xs = false;\r\n  var jsonp = false !== opts.jsonp;\r\n\r\n  if (typeof location !== 'undefined') {\r\n    var isSSL = 'https:' === location.protocol;\r\n    var port = location.port;\r\n\r\n    // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    xd = opts.hostname !== location.hostname || port !== opts.port;\r\n    xs = opts.secure !== isSSL;\r\n  }\r\n\r\n  opts.xdomain = xd;\r\n  opts.xscheme = xs;\r\n  xhr = new XMLHttpRequest(opts);\r\n\r\n  if ('open' in xhr && !opts.forceJSONP) {\r\n    return new XHR(opts);\r\n  } else {\r\n    if (!jsonp) throw new Error('JSONP disabled');\r\n    return new JSONP(opts);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/polling-jsonp.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling-jsonp.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\r\n * Module requirements.\r\n */\r\n\r\nvar Polling = __webpack_require__(/*! ./polling */ \"./node_modules/engine.io-client/lib/transports/polling.js\");\r\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\r\nvar globalThis = __webpack_require__(/*! ../globalThis */ \"./node_modules/engine.io-client/lib/globalThis.browser.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = JSONPPolling;\r\n\r\n/**\r\n * Cached regular expressions.\r\n */\r\n\r\nvar rNewline = /\\n/g;\r\nvar rEscapedNewline = /\\\\n/g;\r\n\r\n/**\r\n * Global JSONP callbacks.\r\n */\r\n\r\nvar callbacks;\r\n\r\n/**\r\n * Noop.\r\n */\r\n\r\nfunction empty () { }\r\n\r\n/**\r\n * JSONP Polling constructor.\r\n *\r\n * @param {Object} opts.\r\n * @api public\r\n */\r\n\r\nfunction JSONPPolling (opts) {\r\n  Polling.call(this, opts);\r\n\r\n  this.query = this.query || {};\r\n\r\n  // define global callbacks array if not present\r\n  // we do this here (lazily) to avoid unneeded global pollution\r\n  if (!callbacks) {\r\n    // we need to consider multiple engines in the same page\r\n    callbacks = globalThis.___eio = (globalThis.___eio || []);\r\n  }\r\n\r\n  // callback identifier\r\n  this.index = callbacks.length;\r\n\r\n  // add callback to jsonp global\r\n  var self = this;\r\n  callbacks.push(function (msg) {\r\n    self.onData(msg);\r\n  });\r\n\r\n  // append to query string\r\n  this.query.j = this.index;\r\n\r\n  // prevent spurious errors from being emitted when the window is unloaded\r\n  if (typeof addEventListener === 'function') {\r\n    addEventListener('beforeunload', function () {\r\n      if (self.script) self.script.onerror = empty;\r\n    }, false);\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r\n */\r\n\r\ninherit(JSONPPolling, Polling);\r\n\r\n/*\r\n * JSONP only supports binary as base64 encoded strings\r\n */\r\n\r\nJSONPPolling.prototype.supportsBinary = false;\r\n\r\n/**\r\n * Closes the socket.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doClose = function () {\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  if (this.form) {\r\n    this.form.parentNode.removeChild(this.form);\r\n    this.form = null;\r\n    this.iframe = null;\r\n  }\r\n\r\n  Polling.prototype.doClose.call(this);\r\n};\r\n\r\n/**\r\n * Starts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doPoll = function () {\r\n  var self = this;\r\n  var script = document.createElement('script');\r\n\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  script.async = true;\r\n  script.src = this.uri();\r\n  script.onerror = function (e) {\r\n    self.onError('jsonp poll error', e);\r\n  };\r\n\r\n  var insertAt = document.getElementsByTagName('script')[0];\r\n  if (insertAt) {\r\n    insertAt.parentNode.insertBefore(script, insertAt);\r\n  } else {\r\n    (document.head || document.body).appendChild(script);\r\n  }\r\n  this.script = script;\r\n\r\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\r\n\r\n  if (isUAgecko) {\r\n    setTimeout(function () {\r\n      var iframe = document.createElement('iframe');\r\n      document.body.appendChild(iframe);\r\n      document.body.removeChild(iframe);\r\n    }, 100);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes with a hidden iframe.\r\n *\r\n * @param {String} data to send\r\n * @param {Function} called upon flush.\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doWrite = function (data, fn) {\r\n  var self = this;\r\n\r\n  if (!this.form) {\r\n    var form = document.createElement('form');\r\n    var area = document.createElement('textarea');\r\n    var id = this.iframeId = 'eio_iframe_' + this.index;\r\n    var iframe;\r\n\r\n    form.className = 'socketio';\r\n    form.style.position = 'absolute';\r\n    form.style.top = '-1000px';\r\n    form.style.left = '-1000px';\r\n    form.target = id;\r\n    form.method = 'POST';\r\n    form.setAttribute('accept-charset', 'utf-8');\r\n    area.name = 'd';\r\n    form.appendChild(area);\r\n    document.body.appendChild(form);\r\n\r\n    this.form = form;\r\n    this.area = area;\r\n  }\r\n\r\n  this.form.action = this.uri();\r\n\r\n  function complete () {\r\n    initIframe();\r\n    fn();\r\n  }\r\n\r\n  function initIframe () {\r\n    if (self.iframe) {\r\n      try {\r\n        self.form.removeChild(self.iframe);\r\n      } catch (e) {\r\n        self.onError('jsonp polling iframe removal error', e);\r\n      }\r\n    }\r\n\r\n    try {\r\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\r\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\r\n      iframe = document.createElement(html);\r\n    } catch (e) {\r\n      iframe = document.createElement('iframe');\r\n      iframe.name = self.iframeId;\r\n      iframe.src = 'javascript:0';\r\n    }\r\n\r\n    iframe.id = self.iframeId;\r\n\r\n    self.form.appendChild(iframe);\r\n    self.iframe = iframe;\r\n  }\r\n\r\n  initIframe();\r\n\r\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\r\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\r\n  data = data.replace(rEscapedNewline, '\\\\\\n');\r\n  this.area.value = data.replace(rNewline, '\\\\n');\r\n\r\n  try {\r\n    this.form.submit();\r\n  } catch (e) {}\r\n\r\n  if (this.iframe.attachEvent) {\r\n    this.iframe.onreadystatechange = function () {\r\n      if (self.iframe.readyState === 'complete') {\r\n        complete();\r\n      }\r\n    };\r\n  } else {\r\n    this.iframe.onload = complete;\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/polling-xhr.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling-xhr.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* global attachEvent */\r\n\r\n/**\r\n * Module requirements.\r\n */\r\n\r\nvar XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\");\r\nvar Polling = __webpack_require__(/*! ./polling */ \"./node_modules/engine.io-client/lib/transports/polling.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\r\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:polling-xhr');\r\nvar globalThis = __webpack_require__(/*! ../globalThis */ \"./node_modules/engine.io-client/lib/globalThis.browser.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = XHR;\r\nmodule.exports.Request = Request;\r\n\r\n/**\r\n * Empty function\r\n */\r\n\r\nfunction empty () {}\r\n\r\n/**\r\n * XHR Polling constructor.\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\n\r\nfunction XHR (opts) {\r\n  Polling.call(this, opts);\r\n  this.requestTimeout = opts.requestTimeout;\r\n  this.extraHeaders = opts.extraHeaders;\r\n\r\n  if (typeof location !== 'undefined') {\r\n    var isSSL = 'https:' === location.protocol;\r\n    var port = location.port;\r\n\r\n    // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\r\n      port !== opts.port;\r\n    this.xs = opts.secure !== isSSL;\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r\n */\r\n\r\ninherit(XHR, Polling);\r\n\r\n/**\r\n * XHR supports binary\r\n */\r\n\r\nXHR.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Creates a request.\r\n *\r\n * @param {String} method\r\n * @api private\r\n */\r\n\r\nXHR.prototype.request = function (opts) {\r\n  opts = opts || {};\r\n  opts.uri = this.uri();\r\n  opts.xd = this.xd;\r\n  opts.xs = this.xs;\r\n  opts.agent = this.agent || false;\r\n  opts.supportsBinary = this.supportsBinary;\r\n  opts.enablesXDR = this.enablesXDR;\r\n  opts.withCredentials = this.withCredentials;\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n  opts.requestTimeout = this.requestTimeout;\r\n\r\n  // other options for Node.js client\r\n  opts.extraHeaders = this.extraHeaders;\r\n\r\n  return new Request(opts);\r\n};\r\n\r\n/**\r\n * Sends data.\r\n *\r\n * @param {String} data to send.\r\n * @param {Function} called upon flush.\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doWrite = function (data, fn) {\r\n  var isBinary = typeof data !== 'string' && data !== undefined;\r\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\r\n  var self = this;\r\n  req.on('success', fn);\r\n  req.on('error', function (err) {\r\n    self.onError('xhr post error', err);\r\n  });\r\n  this.sendXhr = req;\r\n};\r\n\r\n/**\r\n * Starts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doPoll = function () {\r\n  debug('xhr poll');\r\n  var req = this.request();\r\n  var self = this;\r\n  req.on('data', function (data) {\r\n    self.onData(data);\r\n  });\r\n  req.on('error', function (err) {\r\n    self.onError('xhr poll error', err);\r\n  });\r\n  this.pollXhr = req;\r\n};\r\n\r\n/**\r\n * Request constructor\r\n *\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Request (opts) {\r\n  this.method = opts.method || 'GET';\r\n  this.uri = opts.uri;\r\n  this.xd = !!opts.xd;\r\n  this.xs = !!opts.xs;\r\n  this.async = false !== opts.async;\r\n  this.data = undefined !== opts.data ? opts.data : null;\r\n  this.agent = opts.agent;\r\n  this.isBinary = opts.isBinary;\r\n  this.supportsBinary = opts.supportsBinary;\r\n  this.enablesXDR = opts.enablesXDR;\r\n  this.withCredentials = opts.withCredentials;\r\n  this.requestTimeout = opts.requestTimeout;\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx;\r\n  this.key = opts.key;\r\n  this.passphrase = opts.passphrase;\r\n  this.cert = opts.cert;\r\n  this.ca = opts.ca;\r\n  this.ciphers = opts.ciphers;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n\r\n  // other options for Node.js client\r\n  this.extraHeaders = opts.extraHeaders;\r\n\r\n  this.create();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Request.prototype);\r\n\r\n/**\r\n * Creates the XHR object and sends the request.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.create = function () {\r\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\r\n  var xhr = this.xhr = new XMLHttpRequest(opts);\r\n  var self = this;\r\n\r\n  try {\r\n    debug('xhr open %s: %s', this.method, this.uri);\r\n    xhr.open(this.method, this.uri, this.async);\r\n    try {\r\n      if (this.extraHeaders) {\r\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n        for (var i in this.extraHeaders) {\r\n          if (this.extraHeaders.hasOwnProperty(i)) {\r\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {}\r\n\r\n    if ('POST' === this.method) {\r\n      try {\r\n        if (this.isBinary) {\r\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\r\n        } else {\r\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    try {\r\n      xhr.setRequestHeader('Accept', '*/*');\r\n    } catch (e) {}\r\n\r\n    // ie6 check\r\n    if ('withCredentials' in xhr) {\r\n      xhr.withCredentials = this.withCredentials;\r\n    }\r\n\r\n    if (this.requestTimeout) {\r\n      xhr.timeout = this.requestTimeout;\r\n    }\r\n\r\n    if (this.hasXDR()) {\r\n      xhr.onload = function () {\r\n        self.onLoad();\r\n      };\r\n      xhr.onerror = function () {\r\n        self.onError(xhr.responseText);\r\n      };\r\n    } else {\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 2) {\r\n          try {\r\n            var contentType = xhr.getResponseHeader('Content-Type');\r\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\r\n              xhr.responseType = 'arraybuffer';\r\n            }\r\n          } catch (e) {}\r\n        }\r\n        if (4 !== xhr.readyState) return;\r\n        if (200 === xhr.status || 1223 === xhr.status) {\r\n          self.onLoad();\r\n        } else {\r\n          // make sure the `error` event handler that's user-set\r\n          // does not throw in the same tick and gets caught here\r\n          setTimeout(function () {\r\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\r\n          }, 0);\r\n        }\r\n      };\r\n    }\r\n\r\n    debug('xhr data %s', this.data);\r\n    xhr.send(this.data);\r\n  } catch (e) {\r\n    // Need to defer since .create() is called directly fhrom the constructor\r\n    // and thus the 'error' event can only be only bound *after* this exception\r\n    // occurs.  Therefore, also, we cannot throw here at all.\r\n    setTimeout(function () {\r\n      self.onError(e);\r\n    }, 0);\r\n    return;\r\n  }\r\n\r\n  if (typeof document !== 'undefined') {\r\n    this.index = Request.requestsCount++;\r\n    Request.requests[this.index] = this;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful response.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onSuccess = function () {\r\n  this.emit('success');\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Called if we have data.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onData = function (data) {\r\n  this.emit('data', data);\r\n  this.onSuccess();\r\n};\r\n\r\n/**\r\n * Called upon error.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onError = function (err) {\r\n  this.emit('error', err);\r\n  this.cleanup(true);\r\n};\r\n\r\n/**\r\n * Cleans up house.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.cleanup = function (fromError) {\r\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\r\n    return;\r\n  }\r\n  // xmlhttprequest\r\n  if (this.hasXDR()) {\r\n    this.xhr.onload = this.xhr.onerror = empty;\r\n  } else {\r\n    this.xhr.onreadystatechange = empty;\r\n  }\r\n\r\n  if (fromError) {\r\n    try {\r\n      this.xhr.abort();\r\n    } catch (e) {}\r\n  }\r\n\r\n  if (typeof document !== 'undefined') {\r\n    delete Request.requests[this.index];\r\n  }\r\n\r\n  this.xhr = null;\r\n};\r\n\r\n/**\r\n * Called upon load.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onLoad = function () {\r\n  var data;\r\n  try {\r\n    var contentType;\r\n    try {\r\n      contentType = this.xhr.getResponseHeader('Content-Type');\r\n    } catch (e) {}\r\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\r\n      data = this.xhr.response || this.xhr.responseText;\r\n    } else {\r\n      data = this.xhr.responseText;\r\n    }\r\n  } catch (e) {\r\n    this.onError(e);\r\n  }\r\n  if (null != data) {\r\n    this.onData(data);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if it has XDomainRequest.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.hasXDR = function () {\r\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\r\n};\r\n\r\n/**\r\n * Aborts the request.\r\n *\r\n * @api public\r\n */\r\n\r\nRequest.prototype.abort = function () {\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\n\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n\r\nif (typeof document !== 'undefined') {\r\n  if (typeof attachEvent === 'function') {\r\n    attachEvent('onunload', unloadHandler);\r\n  } else if (typeof addEventListener === 'function') {\r\n    var terminationEvent = 'onpagehide' in globalThis ? 'pagehide' : 'unload';\r\n    addEventListener(terminationEvent, unloadHandler, false);\r\n  }\r\n}\r\n\r\nfunction unloadHandler () {\r\n  for (var i in Request.requests) {\r\n    if (Request.requests.hasOwnProperty(i)) {\r\n      Request.requests[i].abort();\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/polling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = __webpack_require__(/*! ../transport */ \"./node_modules/engine.io-client/lib/transport.js\");\r\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\r\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\r\nvar yeast = __webpack_require__(/*! yeast */ \"./node_modules/yeast/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:polling');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Polling;\r\n\r\n/**\r\n * Is XHR2 supported?\r\n */\r\n\r\nvar hasXHR2 = (function () {\r\n  var XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\");\r\n  var xhr = new XMLHttpRequest({ xdomain: false });\r\n  return null != xhr.responseType;\r\n})();\r\n\r\n/**\r\n * Polling interface.\r\n *\r\n * @param {Object} opts\r\n * @api private\r\n */\r\n\r\nfunction Polling (opts) {\r\n  var forceBase64 = (opts && opts.forceBase64);\r\n  if (!hasXHR2 || forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(Polling, Transport);\r\n\r\n/**\r\n * Transport name.\r\n */\r\n\r\nPolling.prototype.name = 'polling';\r\n\r\n/**\r\n * Opens the socket (triggers polling). We write a PING message to determine\r\n * when the transport is open.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.doOpen = function () {\r\n  this.poll();\r\n};\r\n\r\n/**\r\n * Pauses polling.\r\n *\r\n * @param {Function} callback upon buffers are flushed and transport is paused\r\n * @api private\r\n */\r\n\r\nPolling.prototype.pause = function (onPause) {\r\n  var self = this;\r\n\r\n  this.readyState = 'pausing';\r\n\r\n  function pause () {\r\n    debug('paused');\r\n    self.readyState = 'paused';\r\n    onPause();\r\n  }\r\n\r\n  if (this.polling || !this.writable) {\r\n    var total = 0;\r\n\r\n    if (this.polling) {\r\n      debug('we are currently polling - waiting to pause');\r\n      total++;\r\n      this.once('pollComplete', function () {\r\n        debug('pre-pause polling complete');\r\n        --total || pause();\r\n      });\r\n    }\r\n\r\n    if (!this.writable) {\r\n      debug('we are currently writing - waiting to pause');\r\n      total++;\r\n      this.once('drain', function () {\r\n        debug('pre-pause writing complete');\r\n        --total || pause();\r\n      });\r\n    }\r\n  } else {\r\n    pause();\r\n  }\r\n};\r\n\r\n/**\r\n * Starts polling cycle.\r\n *\r\n * @api public\r\n */\r\n\r\nPolling.prototype.poll = function () {\r\n  debug('polling');\r\n  this.polling = true;\r\n  this.doPoll();\r\n  this.emit('poll');\r\n};\r\n\r\n/**\r\n * Overloads onData to detect payloads.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.onData = function (data) {\r\n  var self = this;\r\n  debug('polling got data %s', data);\r\n  var callback = function (packet, index, total) {\r\n    // if its the first message we consider the transport open\r\n    if ('opening' === self.readyState) {\r\n      self.onOpen();\r\n    }\r\n\r\n    // if its a close packet, we close the ongoing requests\r\n    if ('close' === packet.type) {\r\n      self.onClose();\r\n      return false;\r\n    }\r\n\r\n    // otherwise bypass onData and handle the message\r\n    self.onPacket(packet);\r\n  };\r\n\r\n  // decode payload\r\n  parser.decodePayload(data, this.socket.binaryType, callback);\r\n\r\n  // if an event did not trigger closing\r\n  if ('closed' !== this.readyState) {\r\n    // if we got data we're not polling\r\n    this.polling = false;\r\n    this.emit('pollComplete');\r\n\r\n    if ('open' === this.readyState) {\r\n      this.poll();\r\n    } else {\r\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * For polling, send a close packet.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.doClose = function () {\r\n  var self = this;\r\n\r\n  function close () {\r\n    debug('writing close packet');\r\n    self.write([{ type: 'close' }]);\r\n  }\r\n\r\n  if ('open' === this.readyState) {\r\n    debug('transport open - closing');\r\n    close();\r\n  } else {\r\n    // in case we're trying to close while\r\n    // handshaking is in progress (GH-164)\r\n    debug('transport not open - deferring close');\r\n    this.once('open', close);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes a packets payload.\r\n *\r\n * @param {Array} data packets\r\n * @param {Function} drain callback\r\n * @api private\r\n */\r\n\r\nPolling.prototype.write = function (packets) {\r\n  var self = this;\r\n  this.writable = false;\r\n  var callbackfn = function () {\r\n    self.writable = true;\r\n    self.emit('drain');\r\n  };\r\n\r\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\r\n    self.doWrite(data, callbackfn);\r\n  });\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.uri = function () {\r\n  var query = this.query || {};\r\n  var schema = this.secure ? 'https' : 'http';\r\n  var port = '';\r\n\r\n  // cache busting is forced\r\n  if (false !== this.timestampRequests) {\r\n    query[this.timestampParam] = yeast();\r\n  }\r\n\r\n  if (!this.supportsBinary && !query.sid) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // avoid port if default for schema\r\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\r\n     ('http' === schema && Number(this.port) !== 80))) {\r\n    port = ':' + this.port;\r\n  }\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/polling.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/transports/websocket.js":
/*!*******************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/transports/websocket.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = __webpack_require__(/*! ../transport */ \"./node_modules/engine.io-client/lib/transport.js\");\r\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\r\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\r\nvar yeast = __webpack_require__(/*! yeast */ \"./node_modules/yeast/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/engine.io-client/node_modules/debug/src/browser.js\")('engine.io-client:websocket');\r\n\r\nvar BrowserWebSocket, NodeWebSocket;\r\n\r\nif (typeof WebSocket !== 'undefined') {\r\n  BrowserWebSocket = WebSocket;\r\n} else if (typeof self !== 'undefined') {\r\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\r\n}\r\n\r\nif (typeof window === 'undefined') {\r\n  try {\r\n    NodeWebSocket = __webpack_require__(/*! ws */ 0);\r\n  } catch (e) { }\r\n}\r\n\r\n/**\r\n * Get either the `WebSocket` or `MozWebSocket` globals\r\n * in the browser or try to resolve WebSocket-compatible\r\n * interface exposed by `ws` for Node-like environment.\r\n */\r\n\r\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = WS;\r\n\r\n/**\r\n * WebSocket transport constructor.\r\n *\r\n * @api {Object} connection options\r\n * @api public\r\n */\r\n\r\nfunction WS (opts) {\r\n  var forceBase64 = (opts && opts.forceBase64);\r\n  if (forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  this.perMessageDeflate = opts.perMessageDeflate;\r\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\r\n  this.protocols = opts.protocols;\r\n  if (!this.usingBrowserWebSocket) {\r\n    WebSocketImpl = NodeWebSocket;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(WS, Transport);\r\n\r\n/**\r\n * Transport name.\r\n *\r\n * @api public\r\n */\r\n\r\nWS.prototype.name = 'websocket';\r\n\r\n/*\r\n * WebSockets support binary\r\n */\r\n\r\nWS.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Opens socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.doOpen = function () {\r\n  if (!this.check()) {\r\n    // let probe timeout\r\n    return;\r\n  }\r\n\r\n  var uri = this.uri();\r\n  var protocols = this.protocols;\r\n\r\n  var opts = {};\r\n\r\n  if (!this.isReactNative) {\r\n    opts.agent = this.agent;\r\n    opts.perMessageDeflate = this.perMessageDeflate;\r\n\r\n    // SSL options for Node.js client\r\n    opts.pfx = this.pfx;\r\n    opts.key = this.key;\r\n    opts.passphrase = this.passphrase;\r\n    opts.cert = this.cert;\r\n    opts.ca = this.ca;\r\n    opts.ciphers = this.ciphers;\r\n    opts.rejectUnauthorized = this.rejectUnauthorized;\r\n  }\r\n\r\n  if (this.extraHeaders) {\r\n    opts.headers = this.extraHeaders;\r\n  }\r\n  if (this.localAddress) {\r\n    opts.localAddress = this.localAddress;\r\n  }\r\n\r\n  try {\r\n    this.ws =\r\n      this.usingBrowserWebSocket && !this.isReactNative\r\n        ? protocols\r\n          ? new WebSocketImpl(uri, protocols)\r\n          : new WebSocketImpl(uri)\r\n        : new WebSocketImpl(uri, protocols, opts);\r\n  } catch (err) {\r\n    return this.emit('error', err);\r\n  }\r\n\r\n  if (this.ws.binaryType === undefined) {\r\n    this.supportsBinary = false;\r\n  }\r\n\r\n  if (this.ws.supports && this.ws.supports.binary) {\r\n    this.supportsBinary = true;\r\n    this.ws.binaryType = 'nodebuffer';\r\n  } else {\r\n    this.ws.binaryType = 'arraybuffer';\r\n  }\r\n\r\n  this.addEventListeners();\r\n};\r\n\r\n/**\r\n * Adds event listeners to the socket\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.addEventListeners = function () {\r\n  var self = this;\r\n\r\n  this.ws.onopen = function () {\r\n    self.onOpen();\r\n  };\r\n  this.ws.onclose = function () {\r\n    self.onClose();\r\n  };\r\n  this.ws.onmessage = function (ev) {\r\n    self.onData(ev.data);\r\n  };\r\n  this.ws.onerror = function (e) {\r\n    self.onError('websocket error', e);\r\n  };\r\n};\r\n\r\n/**\r\n * Writes data to socket.\r\n *\r\n * @param {Array} array of packets.\r\n * @api private\r\n */\r\n\r\nWS.prototype.write = function (packets) {\r\n  var self = this;\r\n  this.writable = false;\r\n\r\n  // encodePacket efficient as it uses WS framing\r\n  // no need for encodePayload\r\n  var total = packets.length;\r\n  for (var i = 0, l = total; i < l; i++) {\r\n    (function (packet) {\r\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\r\n        if (!self.usingBrowserWebSocket) {\r\n          // always create a new object (GH-437)\r\n          var opts = {};\r\n          if (packet.options) {\r\n            opts.compress = packet.options.compress;\r\n          }\r\n\r\n          if (self.perMessageDeflate) {\r\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\r\n            if (len < self.perMessageDeflate.threshold) {\r\n              opts.compress = false;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Sometimes the websocket has already been closed but the browser didn't\r\n        // have a chance of informing us about it yet, in that case send will\r\n        // throw an error\r\n        try {\r\n          if (self.usingBrowserWebSocket) {\r\n            // TypeError is thrown when passing the second argument on Safari\r\n            self.ws.send(data);\r\n          } else {\r\n            self.ws.send(data, opts);\r\n          }\r\n        } catch (e) {\r\n          debug('websocket closed before onclose event');\r\n        }\r\n\r\n        --total || done();\r\n      });\r\n    })(packets[i]);\r\n  }\r\n\r\n  function done () {\r\n    self.emit('flush');\r\n\r\n    // fake drain\r\n    // defer to next tick to allow Socket to clear writeBuffer\r\n    setTimeout(function () {\r\n      self.writable = true;\r\n      self.emit('drain');\r\n    }, 0);\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon close\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.onClose = function () {\r\n  Transport.prototype.onClose.call(this);\r\n};\r\n\r\n/**\r\n * Closes socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.doClose = function () {\r\n  if (typeof this.ws !== 'undefined') {\r\n    this.ws.close();\r\n  }\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.uri = function () {\r\n  var query = this.query || {};\r\n  var schema = this.secure ? 'wss' : 'ws';\r\n  var port = '';\r\n\r\n  // avoid port if default for schema\r\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\r\n    ('ws' === schema && Number(this.port) !== 80))) {\r\n    port = ':' + this.port;\r\n  }\r\n\r\n  // append timestamp to URI\r\n  if (this.timestampRequests) {\r\n    query[this.timestampParam] = yeast();\r\n  }\r\n\r\n  // communicate binary support capabilities\r\n  if (!this.supportsBinary) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\r\n};\r\n\r\n/**\r\n * Feature detection for WebSocket.\r\n *\r\n * @return {Boolean} whether this transport is available.\r\n * @api public\r\n */\r\n\r\nWS.prototype.check = function () {\r\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/transports/websocket.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/lib/xmlhttprequest.js":
/*!*************************************************************!*\
  !*** ./node_modules/engine.io-client/lib/xmlhttprequest.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// browser shim for xmlhttprequest module\r\n\r\nvar hasCORS = __webpack_require__(/*! has-cors */ \"./node_modules/has-cors/index.js\");\r\nvar globalThis = __webpack_require__(/*! ./globalThis */ \"./node_modules/engine.io-client/lib/globalThis.browser.js\");\r\n\r\nmodule.exports = function (opts) {\r\n  var xdomain = opts.xdomain;\r\n\r\n  // scheme must be same when usign XDomainRequest\r\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\r\n  var xscheme = opts.xscheme;\r\n\r\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\r\n  // https://github.com/Automattic/engine.io-client/pull/217\r\n  var enablesXDR = opts.enablesXDR;\r\n\r\n  // XMLHttpRequest can be disabled on IE\r\n  try {\r\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  // Use XDomainRequest for IE8 if enablesXDR is true\r\n  // because loading bar keeps flashing when using jsonp-polling\r\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\r\n  try {\r\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\r\n      return new XDomainRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  if (!xdomain) {\r\n    try {\r\n      return new globalThis[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\r\n    } catch (e) { }\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/node_modules/debug/src/browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-client/node_modules/debug/src/browser.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */\r\n\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n */\r\n\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n\t'#0000CC',\r\n\t'#0000FF',\r\n\t'#0033CC',\r\n\t'#0033FF',\r\n\t'#0066CC',\r\n\t'#0066FF',\r\n\t'#0099CC',\r\n\t'#0099FF',\r\n\t'#00CC00',\r\n\t'#00CC33',\r\n\t'#00CC66',\r\n\t'#00CC99',\r\n\t'#00CCCC',\r\n\t'#00CCFF',\r\n\t'#3300CC',\r\n\t'#3300FF',\r\n\t'#3333CC',\r\n\t'#3333FF',\r\n\t'#3366CC',\r\n\t'#3366FF',\r\n\t'#3399CC',\r\n\t'#3399FF',\r\n\t'#33CC00',\r\n\t'#33CC33',\r\n\t'#33CC66',\r\n\t'#33CC99',\r\n\t'#33CCCC',\r\n\t'#33CCFF',\r\n\t'#6600CC',\r\n\t'#6600FF',\r\n\t'#6633CC',\r\n\t'#6633FF',\r\n\t'#66CC00',\r\n\t'#66CC33',\r\n\t'#9900CC',\r\n\t'#9900FF',\r\n\t'#9933CC',\r\n\t'#9933FF',\r\n\t'#99CC00',\r\n\t'#99CC33',\r\n\t'#CC0000',\r\n\t'#CC0033',\r\n\t'#CC0066',\r\n\t'#CC0099',\r\n\t'#CC00CC',\r\n\t'#CC00FF',\r\n\t'#CC3300',\r\n\t'#CC3333',\r\n\t'#CC3366',\r\n\t'#CC3399',\r\n\t'#CC33CC',\r\n\t'#CC33FF',\r\n\t'#CC6600',\r\n\t'#CC6633',\r\n\t'#CC9900',\r\n\t'#CC9933',\r\n\t'#CCCC00',\r\n\t'#CCCC33',\r\n\t'#FF0000',\r\n\t'#FF0033',\r\n\t'#FF0066',\r\n\t'#FF0099',\r\n\t'#FF00CC',\r\n\t'#FF00FF',\r\n\t'#FF3300',\r\n\t'#FF3333',\r\n\t'#FF3366',\r\n\t'#FF3399',\r\n\t'#FF33CC',\r\n\t'#FF33FF',\r\n\t'#FF6600',\r\n\t'#FF6633',\r\n\t'#FF9900',\r\n\t'#FF9933',\r\n\t'#FFCC00',\r\n\t'#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\n// eslint-disable-next-line complexity\r\nfunction useColors() {\r\n\t// NB: In an Electron preload script, document will be defined but not fully\r\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\r\n\t// explicitly\r\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Internet Explorer and Edge do not support colors.\r\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\r\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\r\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n\t\t// Is firefox >= v31?\r\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n\t\t// Double check webkit in userAgent just in case we are in a worker\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n\targs[0] = (this.useColors ? '%c' : '') +\r\n\t\tthis.namespace +\r\n\t\t(this.useColors ? ' %c' : ' ') +\r\n\t\targs[0] +\r\n\t\t(this.useColors ? '%c ' : ' ') +\r\n\t\t'+' + module.exports.humanize(this.diff);\r\n\r\n\tif (!this.useColors) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst c = 'color: ' + this.color;\r\n\targs.splice(1, 0, c, 'color: inherit');\r\n\r\n\t// The final \"%c\" is somewhat tricky, because there could be other\r\n\t// arguments passed either before or after the %c, so we need to\r\n\t// figure out the correct index to insert the CSS into\r\n\tlet index = 0;\r\n\tlet lastC = 0;\r\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\r\n\t\tif (match === '%%') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tindex++;\r\n\t\tif (match === '%c') {\r\n\t\t\t// We only are interested in the *last* %c\r\n\t\t\t// (the user may have provided their own)\r\n\t\t\tlastC = index;\r\n\t\t}\r\n\t});\r\n\r\n\targs.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\nfunction log(...args) {\r\n\t// This hackery is required for IE8/9, where\r\n\t// the `console.log` function doesn't have 'apply'\r\n\treturn typeof console === 'object' &&\r\n\t\tconsole.log &&\r\n\t\tconsole.log(...args);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\nfunction save(namespaces) {\r\n\ttry {\r\n\t\tif (namespaces) {\r\n\t\t\texports.storage.setItem('debug', namespaces);\r\n\t\t} else {\r\n\t\t\texports.storage.removeItem('debug');\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\nfunction load() {\r\n\tlet r;\r\n\ttry {\r\n\t\tr = exports.storage.getItem('debug');\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n\r\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\r\n\t\tr = process.env.DEBUG;\r\n\t}\r\n\r\n\treturn r;\r\n}\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n\ttry {\r\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\r\n\t\t// The Browser also has localStorage in the global context.\r\n\t\treturn localStorage;\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/engine.io-client/node_modules/debug/src/common.js\")(exports);\r\n\r\nconst {formatters} = module.exports;\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nformatters.j = function (v) {\r\n\ttry {\r\n\t\treturn JSON.stringify(v);\r\n\t} catch (error) {\r\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\r\n\t}\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/node_modules/debug/src/common.js":
/*!************************************************************************!*\
  !*** ./node_modules/engine.io-client/node_modules/debug/src/common.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n */\r\n\r\nfunction setup(env) {\r\n\tcreateDebug.debug = createDebug;\r\n\tcreateDebug.default = createDebug;\r\n\tcreateDebug.coerce = coerce;\r\n\tcreateDebug.disable = disable;\r\n\tcreateDebug.enable = enable;\r\n\tcreateDebug.enabled = enabled;\r\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/engine.io-client/node_modules/ms/index.js\");\r\n\r\n\tObject.keys(env).forEach(key => {\r\n\t\tcreateDebug[key] = env[key];\r\n\t});\r\n\r\n\t/**\r\n\t* Active `debug` instances.\r\n\t*/\r\n\tcreateDebug.instances = [];\r\n\r\n\t/**\r\n\t* The currently active debug mode names, and names to skip.\r\n\t*/\r\n\r\n\tcreateDebug.names = [];\r\n\tcreateDebug.skips = [];\r\n\r\n\t/**\r\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n\t*\r\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n\t*/\r\n\tcreateDebug.formatters = {};\r\n\r\n\t/**\r\n\t* Selects a color for a debug namespace\r\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\r\n\t* @return {Number|String} An ANSI color code for the given namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction selectColor(namespace) {\r\n\t\tlet hash = 0;\r\n\r\n\t\tfor (let i = 0; i < namespace.length; i++) {\r\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t}\r\n\r\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\r\n\t}\r\n\tcreateDebug.selectColor = selectColor;\r\n\r\n\t/**\r\n\t* Create a debugger with the given `namespace`.\r\n\t*\r\n\t* @param {String} namespace\r\n\t* @return {Function}\r\n\t* @api public\r\n\t*/\r\n\tfunction createDebug(namespace) {\r\n\t\tlet prevTime;\r\n\r\n\t\tfunction debug(...args) {\r\n\t\t\t// Disabled?\r\n\t\t\tif (!debug.enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst self = debug;\r\n\r\n\t\t\t// Set `diff` timestamp\r\n\t\t\tconst curr = Number(new Date());\r\n\t\t\tconst ms = curr - (prevTime || curr);\r\n\t\t\tself.diff = ms;\r\n\t\t\tself.prev = prevTime;\r\n\t\t\tself.curr = curr;\r\n\t\t\tprevTime = curr;\r\n\r\n\t\t\targs[0] = createDebug.coerce(args[0]);\r\n\r\n\t\t\tif (typeof args[0] !== 'string') {\r\n\t\t\t\t// Anything else let's inspect with %O\r\n\t\t\t\targs.unshift('%O');\r\n\t\t\t}\r\n\r\n\t\t\t// Apply any `formatters` transformations\r\n\t\t\tlet index = 0;\r\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\r\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\r\n\t\t\t\tif (match === '%%') {\r\n\t\t\t\t\treturn match;\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t\tconst formatter = createDebug.formatters[format];\r\n\t\t\t\tif (typeof formatter === 'function') {\r\n\t\t\t\t\tconst val = args[index];\r\n\t\t\t\t\tmatch = formatter.call(self, val);\r\n\r\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\r\n\t\t\t\t\targs.splice(index, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t\treturn match;\r\n\t\t\t});\r\n\r\n\t\t\t// Apply env-specific formatting (colors, etc.)\r\n\t\t\tcreateDebug.formatArgs.call(self, args);\r\n\r\n\t\t\tconst logFn = self.log || createDebug.log;\r\n\t\t\tlogFn.apply(self, args);\r\n\t\t}\r\n\r\n\t\tdebug.namespace = namespace;\r\n\t\tdebug.enabled = createDebug.enabled(namespace);\r\n\t\tdebug.useColors = createDebug.useColors();\r\n\t\tdebug.color = selectColor(namespace);\r\n\t\tdebug.destroy = destroy;\r\n\t\tdebug.extend = extend;\r\n\t\t// Debug.formatArgs = formatArgs;\r\n\t\t// debug.rawLog = rawLog;\r\n\r\n\t\t// env-specific initialization logic for debug instances\r\n\t\tif (typeof createDebug.init === 'function') {\r\n\t\t\tcreateDebug.init(debug);\r\n\t\t}\r\n\r\n\t\tcreateDebug.instances.push(debug);\r\n\r\n\t\treturn debug;\r\n\t}\r\n\r\n\tfunction destroy() {\r\n\t\tconst index = createDebug.instances.indexOf(this);\r\n\t\tif (index !== -1) {\r\n\t\t\tcreateDebug.instances.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction extend(namespace, delimiter) {\r\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\r\n\t\tnewDebug.log = this.log;\r\n\t\treturn newDebug;\r\n\t}\r\n\r\n\t/**\r\n\t* Enables a debug mode by namespaces. This can include modes\r\n\t* separated by a colon and wildcards.\r\n\t*\r\n\t* @param {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction enable(namespaces) {\r\n\t\tcreateDebug.save(namespaces);\r\n\r\n\t\tcreateDebug.names = [];\r\n\t\tcreateDebug.skips = [];\r\n\r\n\t\tlet i;\r\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n\t\tconst len = split.length;\r\n\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tif (!split[i]) {\r\n\t\t\t\t// ignore empty strings\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\r\n\r\n\t\t\tif (namespaces[0] === '-') {\r\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n\t\t\t} else {\r\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\r\n\t\t\tconst instance = createDebug.instances[i];\r\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Disable debug output.\r\n\t*\r\n\t* @return {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction disable() {\r\n\t\tconst namespaces = [\r\n\t\t\t...createDebug.names.map(toNamespace),\r\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\r\n\t\t].join(',');\r\n\t\tcreateDebug.enable('');\r\n\t\treturn namespaces;\r\n\t}\r\n\r\n\t/**\r\n\t* Returns true if the given mode name is enabled, false otherwise.\r\n\t*\r\n\t* @param {String} name\r\n\t* @return {Boolean}\r\n\t* @api public\r\n\t*/\r\n\tfunction enabled(name) {\r\n\t\tif (name[name.length - 1] === '*') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet i;\r\n\t\tlet len;\r\n\r\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\r\n\t\t\tif (createDebug.skips[i].test(name)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\r\n\t\t\tif (createDebug.names[i].test(name)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t* Convert regexp to namespace\r\n\t*\r\n\t* @param {RegExp} regxep\r\n\t* @return {String} namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction toNamespace(regexp) {\r\n\t\treturn regexp.toString()\r\n\t\t\t.substring(2, regexp.toString().length - 2)\r\n\t\t\t.replace(/\\.\\*\\?$/, '*');\r\n\t}\r\n\r\n\t/**\r\n\t* Coerce `val`.\r\n\t*\r\n\t* @param {Mixed} val\r\n\t* @return {Mixed}\r\n\t* @api private\r\n\t*/\r\n\tfunction coerce(val) {\r\n\t\tif (val instanceof Error) {\r\n\t\t\treturn val.stack || val.message;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\tcreateDebug.enable(createDebug.load());\r\n\r\n\treturn createDebug;\r\n}\r\n\r\nmodule.exports = setup;\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/node_modules/debug/src/common.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/node_modules/ms/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/engine.io-client/node_modules/ms/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar w = d * 7;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isFinite(val)) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'weeks':\r\n    case 'week':\r\n    case 'w':\r\n      return n * w;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (msAbs >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (msAbs >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (msAbs >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return plural(ms, msAbs, d, 'day');\r\n  }\r\n  if (msAbs >= h) {\r\n    return plural(ms, msAbs, h, 'hour');\r\n  }\r\n  if (msAbs >= m) {\r\n    return plural(ms, msAbs, m, 'minute');\r\n  }\r\n  if (msAbs >= s) {\r\n    return plural(ms, msAbs, s, 'second');\r\n  }\r\n  return ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, msAbs, n, name) {\r\n  var isPlural = msAbs >= n * 1.5;\r\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-client/node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/lib/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/browser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\r\n * Module dependencies.\r\n */\r\n\r\nvar keys = __webpack_require__(/*! ./keys */ \"./node_modules/engine.io-parser/lib/keys.js\");\r\nvar hasBinary = __webpack_require__(/*! has-binary2 */ \"./node_modules/has-binary2/index.js\");\r\nvar sliceBuffer = __webpack_require__(/*! arraybuffer.slice */ \"./node_modules/arraybuffer.slice/index.js\");\r\nvar after = __webpack_require__(/*! after */ \"./node_modules/after/index.js\");\r\nvar utf8 = __webpack_require__(/*! ./utf8 */ \"./node_modules/engine.io-parser/lib/utf8.js\");\r\n\r\nvar base64encoder;\r\nif (typeof ArrayBuffer !== 'undefined') {\r\n  base64encoder = __webpack_require__(/*! base64-arraybuffer */ \"./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js\");\r\n}\r\n\r\n/**\r\n * Check if we are running an android browser. That requires us to use\r\n * ArrayBuffer with polling transports...\r\n *\r\n * http://ghinda.net/jpeg-blob-ajax-android/\r\n */\r\n\r\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\r\n\r\n/**\r\n * Check if we are running in PhantomJS.\r\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\r\n * https://github.com/ariya/phantomjs/issues/11395\r\n * @type boolean\r\n */\r\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\r\n\r\n/**\r\n * When true, avoids using Blobs to encode payloads.\r\n * @type boolean\r\n */\r\nvar dontSendBlobs = isAndroid || isPhantomJS;\r\n\r\n/**\r\n * Current protocol version.\r\n */\r\n\r\nexports.protocol = 3;\r\n\r\n/**\r\n * Packet types.\r\n */\r\n\r\nvar packets = exports.packets = {\r\n    open:     0    // non-ws\r\n  , close:    1    // non-ws\r\n  , ping:     2\r\n  , pong:     3\r\n  , message:  4\r\n  , upgrade:  5\r\n  , noop:     6\r\n};\r\n\r\nvar packetslist = keys(packets);\r\n\r\n/**\r\n * Premade error packet.\r\n */\r\n\r\nvar err = { type: 'error', data: 'parser error' };\r\n\r\n/**\r\n * Create a blob api even for blob builder when vendor prefixes exist\r\n */\r\n\r\nvar Blob = __webpack_require__(/*! blob */ \"./node_modules/blob/index.js\");\r\n\r\n/**\r\n * Encodes a packet.\r\n *\r\n *     <packet type id> [ <data> ]\r\n *\r\n * Example:\r\n *\r\n *     5hello world\r\n *     3\r\n *     4\r\n *\r\n * Binary is encoded in an identical principle\r\n *\r\n * @api private\r\n */\r\n\r\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\r\n  if (typeof supportsBinary === 'function') {\r\n    callback = supportsBinary;\r\n    supportsBinary = false;\r\n  }\r\n\r\n  if (typeof utf8encode === 'function') {\r\n    callback = utf8encode;\r\n    utf8encode = null;\r\n  }\r\n\r\n  var data = (packet.data === undefined)\r\n    ? undefined\r\n    : packet.data.buffer || packet.data;\r\n\r\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\r\n    return encodeArrayBuffer(packet, supportsBinary, callback);\r\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\r\n    return encodeBlob(packet, supportsBinary, callback);\r\n  }\r\n\r\n  // might be an object with { base64: true, data: dataAsBase64String }\r\n  if (data && data.base64) {\r\n    return encodeBase64Object(packet, callback);\r\n  }\r\n\r\n  // Sending data as a utf-8 string\r\n  var encoded = packets[packet.type];\r\n\r\n  // data fragment is optional\r\n  if (undefined !== packet.data) {\r\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\r\n  }\r\n\r\n  return callback('' + encoded);\r\n\r\n};\r\n\r\nfunction encodeBase64Object(packet, callback) {\r\n  // packet data is an object { base64: true, data: dataAsBase64String }\r\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\r\n  return callback(message);\r\n}\r\n\r\n/**\r\n * Encode packet helpers for binary types\r\n */\r\n\r\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\r\n  if (!supportsBinary) {\r\n    return exports.encodeBase64Packet(packet, callback);\r\n  }\r\n\r\n  var data = packet.data;\r\n  var contentArray = new Uint8Array(data);\r\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\r\n\r\n  resultBuffer[0] = packets[packet.type];\r\n  for (var i = 0; i < contentArray.length; i++) {\r\n    resultBuffer[i+1] = contentArray[i];\r\n  }\r\n\r\n  return callback(resultBuffer.buffer);\r\n}\r\n\r\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\r\n  if (!supportsBinary) {\r\n    return exports.encodeBase64Packet(packet, callback);\r\n  }\r\n\r\n  var fr = new FileReader();\r\n  fr.onload = function() {\r\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\r\n  };\r\n  return fr.readAsArrayBuffer(packet.data);\r\n}\r\n\r\nfunction encodeBlob(packet, supportsBinary, callback) {\r\n  if (!supportsBinary) {\r\n    return exports.encodeBase64Packet(packet, callback);\r\n  }\r\n\r\n  if (dontSendBlobs) {\r\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\r\n  }\r\n\r\n  var length = new Uint8Array(1);\r\n  length[0] = packets[packet.type];\r\n  var blob = new Blob([length.buffer, packet.data]);\r\n\r\n  return callback(blob);\r\n}\r\n\r\n/**\r\n * Encodes a packet with binary data in a base64 string\r\n *\r\n * @param {Object} packet, has `type` and `data`\r\n * @return {String} base64 encoded message\r\n */\r\n\r\nexports.encodeBase64Packet = function(packet, callback) {\r\n  var message = 'b' + exports.packets[packet.type];\r\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\r\n    var fr = new FileReader();\r\n    fr.onload = function() {\r\n      var b64 = fr.result.split(',')[1];\r\n      callback(message + b64);\r\n    };\r\n    return fr.readAsDataURL(packet.data);\r\n  }\r\n\r\n  var b64data;\r\n  try {\r\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\r\n  } catch (e) {\r\n    // iPhone Safari doesn't let you apply with typed arrays\r\n    var typed = new Uint8Array(packet.data);\r\n    var basic = new Array(typed.length);\r\n    for (var i = 0; i < typed.length; i++) {\r\n      basic[i] = typed[i];\r\n    }\r\n    b64data = String.fromCharCode.apply(null, basic);\r\n  }\r\n  message += btoa(b64data);\r\n  return callback(message);\r\n};\r\n\r\n/**\r\n * Decodes a packet. Changes format to Blob if requested.\r\n *\r\n * @return {Object} with `type` and `data` (if any)\r\n * @api private\r\n */\r\n\r\nexports.decodePacket = function (data, binaryType, utf8decode) {\r\n  if (data === undefined) {\r\n    return err;\r\n  }\r\n  // String data\r\n  if (typeof data === 'string') {\r\n    if (data.charAt(0) === 'b') {\r\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\r\n    }\r\n\r\n    if (utf8decode) {\r\n      data = tryDecode(data);\r\n      if (data === false) {\r\n        return err;\r\n      }\r\n    }\r\n    var type = data.charAt(0);\r\n\r\n    if (Number(type) != type || !packetslist[type]) {\r\n      return err;\r\n    }\r\n\r\n    if (data.length > 1) {\r\n      return { type: packetslist[type], data: data.substring(1) };\r\n    } else {\r\n      return { type: packetslist[type] };\r\n    }\r\n  }\r\n\r\n  var asArray = new Uint8Array(data);\r\n  var type = asArray[0];\r\n  var rest = sliceBuffer(data, 1);\r\n  if (Blob && binaryType === 'blob') {\r\n    rest = new Blob([rest]);\r\n  }\r\n  return { type: packetslist[type], data: rest };\r\n};\r\n\r\nfunction tryDecode(data) {\r\n  try {\r\n    data = utf8.decode(data, { strict: false });\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return data;\r\n}\r\n\r\n/**\r\n * Decodes a packet encoded in a base64 string\r\n *\r\n * @param {String} base64 encoded message\r\n * @return {Object} with `type` and `data` (if any)\r\n */\r\n\r\nexports.decodeBase64Packet = function(msg, binaryType) {\r\n  var type = packetslist[msg.charAt(0)];\r\n  if (!base64encoder) {\r\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\r\n  }\r\n\r\n  var data = base64encoder.decode(msg.substr(1));\r\n\r\n  if (binaryType === 'blob' && Blob) {\r\n    data = new Blob([data]);\r\n  }\r\n\r\n  return { type: type, data: data };\r\n};\r\n\r\n/**\r\n * Encodes multiple messages (payload).\r\n *\r\n *     <length>:data\r\n *\r\n * Example:\r\n *\r\n *     11:hello world2:hi\r\n *\r\n * If any contents are binary, they will be encoded as base64 strings. Base64\r\n * encoded strings are marked with a b before the length specifier\r\n *\r\n * @param {Array} packets\r\n * @api private\r\n */\r\n\r\nexports.encodePayload = function (packets, supportsBinary, callback) {\r\n  if (typeof supportsBinary === 'function') {\r\n    callback = supportsBinary;\r\n    supportsBinary = null;\r\n  }\r\n\r\n  var isBinary = hasBinary(packets);\r\n\r\n  if (supportsBinary && isBinary) {\r\n    if (Blob && !dontSendBlobs) {\r\n      return exports.encodePayloadAsBlob(packets, callback);\r\n    }\r\n\r\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\r\n  }\r\n\r\n  if (!packets.length) {\r\n    return callback('0:');\r\n  }\r\n\r\n  function setLengthHeader(message) {\r\n    return message.length + ':' + message;\r\n  }\r\n\r\n  function encodeOne(packet, doneCallback) {\r\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\r\n      doneCallback(null, setLengthHeader(message));\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne, function(err, results) {\r\n    return callback(results.join(''));\r\n  });\r\n};\r\n\r\n/**\r\n * Async array map using after\r\n */\r\n\r\nfunction map(ary, each, done) {\r\n  var result = new Array(ary.length);\r\n  var next = after(ary.length, done);\r\n\r\n  var eachWithIndex = function(i, el, cb) {\r\n    each(el, function(error, msg) {\r\n      result[i] = msg;\r\n      cb(error, result);\r\n    });\r\n  };\r\n\r\n  for (var i = 0; i < ary.length; i++) {\r\n    eachWithIndex(i, ary[i], next);\r\n  }\r\n}\r\n\r\n/*\r\n * Decodes data when a payload is maybe expected. Possible binary contents are\r\n * decoded from their base64 representation\r\n *\r\n * @param {String} data, callback method\r\n * @api public\r\n */\r\n\r\nexports.decodePayload = function (data, binaryType, callback) {\r\n  if (typeof data !== 'string') {\r\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\r\n  }\r\n\r\n  if (typeof binaryType === 'function') {\r\n    callback = binaryType;\r\n    binaryType = null;\r\n  }\r\n\r\n  var packet;\r\n  if (data === '') {\r\n    // parser error - ignoring payload\r\n    return callback(err, 0, 1);\r\n  }\r\n\r\n  var length = '', n, msg;\r\n\r\n  for (var i = 0, l = data.length; i < l; i++) {\r\n    var chr = data.charAt(i);\r\n\r\n    if (chr !== ':') {\r\n      length += chr;\r\n      continue;\r\n    }\r\n\r\n    if (length === '' || (length != (n = Number(length)))) {\r\n      // parser error - ignoring payload\r\n      return callback(err, 0, 1);\r\n    }\r\n\r\n    msg = data.substr(i + 1, n);\r\n\r\n    if (length != msg.length) {\r\n      // parser error - ignoring payload\r\n      return callback(err, 0, 1);\r\n    }\r\n\r\n    if (msg.length) {\r\n      packet = exports.decodePacket(msg, binaryType, false);\r\n\r\n      if (err.type === packet.type && err.data === packet.data) {\r\n        // parser error in individual packet - ignoring payload\r\n        return callback(err, 0, 1);\r\n      }\r\n\r\n      var ret = callback(packet, i + n, l);\r\n      if (false === ret) return;\r\n    }\r\n\r\n    // advance cursor\r\n    i += n;\r\n    length = '';\r\n  }\r\n\r\n  if (length !== '') {\r\n    // parser error - ignoring payload\r\n    return callback(err, 0, 1);\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Encodes multiple messages (payload) as binary.\r\n *\r\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\r\n * 255><data>\r\n *\r\n * Example:\r\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\r\n *\r\n * @param {Array} packets\r\n * @return {ArrayBuffer} encoded payload\r\n * @api private\r\n */\r\n\r\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\r\n  if (!packets.length) {\r\n    return callback(new ArrayBuffer(0));\r\n  }\r\n\r\n  function encodeOne(packet, doneCallback) {\r\n    exports.encodePacket(packet, true, true, function(data) {\r\n      return doneCallback(null, data);\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne, function(err, encodedPackets) {\r\n    var totalLength = encodedPackets.reduce(function(acc, p) {\r\n      var len;\r\n      if (typeof p === 'string'){\r\n        len = p.length;\r\n      } else {\r\n        len = p.byteLength;\r\n      }\r\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\r\n    }, 0);\r\n\r\n    var resultArray = new Uint8Array(totalLength);\r\n\r\n    var bufferIndex = 0;\r\n    encodedPackets.forEach(function(p) {\r\n      var isString = typeof p === 'string';\r\n      var ab = p;\r\n      if (isString) {\r\n        var view = new Uint8Array(p.length);\r\n        for (var i = 0; i < p.length; i++) {\r\n          view[i] = p.charCodeAt(i);\r\n        }\r\n        ab = view.buffer;\r\n      }\r\n\r\n      if (isString) { // not true binary\r\n        resultArray[bufferIndex++] = 0;\r\n      } else { // true binary\r\n        resultArray[bufferIndex++] = 1;\r\n      }\r\n\r\n      var lenStr = ab.byteLength.toString();\r\n      for (var i = 0; i < lenStr.length; i++) {\r\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\r\n      }\r\n      resultArray[bufferIndex++] = 255;\r\n\r\n      var view = new Uint8Array(ab);\r\n      for (var i = 0; i < view.length; i++) {\r\n        resultArray[bufferIndex++] = view[i];\r\n      }\r\n    });\r\n\r\n    return callback(resultArray.buffer);\r\n  });\r\n};\r\n\r\n/**\r\n * Encode as Blob\r\n */\r\n\r\nexports.encodePayloadAsBlob = function(packets, callback) {\r\n  function encodeOne(packet, doneCallback) {\r\n    exports.encodePacket(packet, true, true, function(encoded) {\r\n      var binaryIdentifier = new Uint8Array(1);\r\n      binaryIdentifier[0] = 1;\r\n      if (typeof encoded === 'string') {\r\n        var view = new Uint8Array(encoded.length);\r\n        for (var i = 0; i < encoded.length; i++) {\r\n          view[i] = encoded.charCodeAt(i);\r\n        }\r\n        encoded = view.buffer;\r\n        binaryIdentifier[0] = 0;\r\n      }\r\n\r\n      var len = (encoded instanceof ArrayBuffer)\r\n        ? encoded.byteLength\r\n        : encoded.size;\r\n\r\n      var lenStr = len.toString();\r\n      var lengthAry = new Uint8Array(lenStr.length + 1);\r\n      for (var i = 0; i < lenStr.length; i++) {\r\n        lengthAry[i] = parseInt(lenStr[i]);\r\n      }\r\n      lengthAry[lenStr.length] = 255;\r\n\r\n      if (Blob) {\r\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\r\n        doneCallback(null, blob);\r\n      }\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne, function(err, results) {\r\n    return callback(new Blob(results));\r\n  });\r\n};\r\n\r\n/*\r\n * Decodes data when a payload is maybe expected. Strings are decoded by\r\n * interpreting each byte as a key code for entries marked to start with 0. See\r\n * description of encodePayloadAsBinary\r\n *\r\n * @param {ArrayBuffer} data, callback method\r\n * @api public\r\n */\r\n\r\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\r\n  if (typeof binaryType === 'function') {\r\n    callback = binaryType;\r\n    binaryType = null;\r\n  }\r\n\r\n  var bufferTail = data;\r\n  var buffers = [];\r\n\r\n  while (bufferTail.byteLength > 0) {\r\n    var tailArray = new Uint8Array(bufferTail);\r\n    var isString = tailArray[0] === 0;\r\n    var msgLength = '';\r\n\r\n    for (var i = 1; ; i++) {\r\n      if (tailArray[i] === 255) break;\r\n\r\n      // 310 = char length of Number.MAX_VALUE\r\n      if (msgLength.length > 310) {\r\n        return callback(err, 0, 1);\r\n      }\r\n\r\n      msgLength += tailArray[i];\r\n    }\r\n\r\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\r\n    msgLength = parseInt(msgLength);\r\n\r\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\r\n    if (isString) {\r\n      try {\r\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\r\n      } catch (e) {\r\n        // iPhone Safari doesn't let you apply to typed arrays\r\n        var typed = new Uint8Array(msg);\r\n        msg = '';\r\n        for (var i = 0; i < typed.length; i++) {\r\n          msg += String.fromCharCode(typed[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    buffers.push(msg);\r\n    bufferTail = sliceBuffer(bufferTail, msgLength);\r\n  }\r\n\r\n  var total = buffers.length;\r\n  buffers.forEach(function(buffer, i) {\r\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\r\n  });\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/lib/keys.js":
/*!***************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/keys.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\n/**\r\n * Gets the keys for an object.\r\n *\r\n * @return {Array} keys\r\n * @api private\r\n */\r\n\r\nmodule.exports = Object.keys || function keys (obj){\r\n  var arr = [];\r\n  var has = Object.prototype.hasOwnProperty;\r\n\r\n  for (var i in obj) {\r\n    if (has.call(obj, i)) {\r\n      arr.push(i);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/keys.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/lib/utf8.js":
/*!***************************************************!*\
  !*** ./node_modules/engine.io-parser/lib/utf8.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! https://mths.be/utf8js v2.1.2 by @mathias */\r\n\r\nvar stringFromCharCode = String.fromCharCode;\r\n\r\n// Taken from https://mths.be/punycode\r\nfunction ucs2decode(string) {\r\n\tvar output = [];\r\n\tvar counter = 0;\r\n\tvar length = string.length;\r\n\tvar value;\r\n\tvar extra;\r\n\twhile (counter < length) {\r\n\t\tvalue = string.charCodeAt(counter++);\r\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\r\n\t\t\t// high surrogate, and there is a next character\r\n\t\t\textra = string.charCodeAt(counter++);\r\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\r\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\r\n\t\t\t} else {\r\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\r\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\r\n\t\t\t\toutput.push(value);\r\n\t\t\t\tcounter--;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toutput.push(value);\r\n\t\t}\r\n\t}\r\n\treturn output;\r\n}\r\n\r\n// Taken from https://mths.be/punycode\r\nfunction ucs2encode(array) {\r\n\tvar length = array.length;\r\n\tvar index = -1;\r\n\tvar value;\r\n\tvar output = '';\r\n\twhile (++index < length) {\r\n\t\tvalue = array[index];\r\n\t\tif (value > 0xFFFF) {\r\n\t\t\tvalue -= 0x10000;\r\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\r\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\r\n\t\t}\r\n\t\toutput += stringFromCharCode(value);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction checkScalarValue(codePoint, strict) {\r\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\r\n\t\tif (strict) {\r\n\t\t\tthrow Error(\r\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\r\n\t\t\t\t' is not a scalar value'\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n/*--------------------------------------------------------------------------*/\r\n\r\nfunction createByte(codePoint, shift) {\r\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\r\n}\r\n\r\nfunction encodeCodePoint(codePoint, strict) {\r\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\r\n\t\treturn stringFromCharCode(codePoint);\r\n\t}\r\n\tvar symbol = '';\r\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\r\n\t}\r\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\r\n\t\tif (!checkScalarValue(codePoint, strict)) {\r\n\t\t\tcodePoint = 0xFFFD;\r\n\t\t}\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\r\n\t\tsymbol += createByte(codePoint, 6);\r\n\t}\r\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\r\n\t\tsymbol += createByte(codePoint, 12);\r\n\t\tsymbol += createByte(codePoint, 6);\r\n\t}\r\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\r\n\treturn symbol;\r\n}\r\n\r\nfunction utf8encode(string, opts) {\r\n\topts = opts || {};\r\n\tvar strict = false !== opts.strict;\r\n\r\n\tvar codePoints = ucs2decode(string);\r\n\tvar length = codePoints.length;\r\n\tvar index = -1;\r\n\tvar codePoint;\r\n\tvar byteString = '';\r\n\twhile (++index < length) {\r\n\t\tcodePoint = codePoints[index];\r\n\t\tbyteString += encodeCodePoint(codePoint, strict);\r\n\t}\r\n\treturn byteString;\r\n}\r\n\r\n/*--------------------------------------------------------------------------*/\r\n\r\nfunction readContinuationByte() {\r\n\tif (byteIndex >= byteCount) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\r\n\tbyteIndex++;\r\n\r\n\tif ((continuationByte & 0xC0) == 0x80) {\r\n\t\treturn continuationByte & 0x3F;\r\n\t}\r\n\r\n\t// If we end up here, it’s not a continuation byte\r\n\tthrow Error('Invalid continuation byte');\r\n}\r\n\r\nfunction decodeSymbol(strict) {\r\n\tvar byte1;\r\n\tvar byte2;\r\n\tvar byte3;\r\n\tvar byte4;\r\n\tvar codePoint;\r\n\r\n\tif (byteIndex > byteCount) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tif (byteIndex == byteCount) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Read first byte\r\n\tbyte1 = byteArray[byteIndex] & 0xFF;\r\n\tbyteIndex++;\r\n\r\n\t// 1-byte sequence (no continuation bytes)\r\n\tif ((byte1 & 0x80) == 0) {\r\n\t\treturn byte1;\r\n\t}\r\n\r\n\t// 2-byte sequence\r\n\tif ((byte1 & 0xE0) == 0xC0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\r\n\t\tif (codePoint >= 0x80) {\r\n\t\t\treturn codePoint;\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t}\r\n\t}\r\n\r\n\t// 3-byte sequence (may include unpaired surrogates)\r\n\tif ((byte1 & 0xF0) == 0xE0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tbyte3 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\r\n\t\tif (codePoint >= 0x0800) {\r\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t}\r\n\t}\r\n\r\n\t// 4-byte sequence\r\n\tif ((byte1 & 0xF8) == 0xF0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tbyte3 = readContinuationByte();\r\n\t\tbyte4 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\r\n\t\t\t(byte3 << 0x06) | byte4;\r\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\r\n\t\t\treturn codePoint;\r\n\t\t}\r\n\t}\r\n\r\n\tthrow Error('Invalid UTF-8 detected');\r\n}\r\n\r\nvar byteArray;\r\nvar byteCount;\r\nvar byteIndex;\r\nfunction utf8decode(byteString, opts) {\r\n\topts = opts || {};\r\n\tvar strict = false !== opts.strict;\r\n\r\n\tbyteArray = ucs2decode(byteString);\r\n\tbyteCount = byteArray.length;\r\n\tbyteIndex = 0;\r\n\tvar codePoints = [];\r\n\tvar tmp;\r\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\r\n\t\tcodePoints.push(tmp);\r\n\t}\r\n\treturn ucs2encode(codePoints);\r\n}\r\n\r\nmodule.exports = {\r\n\tversion: '2.1.2',\r\n\tencode: utf8encode,\r\n\tdecode: utf8decode\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/engine.io-parser/lib/utf8.js?");

/***/ }),

/***/ "./node_modules/has-binary2/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-binary2/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/* global Blob File */\r\n\r\n/*\r\n * Module requirements.\r\n */\r\n\r\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/has-binary2/node_modules/isarray/index.js\");\r\n\r\nvar toString = Object.prototype.toString;\r\nvar withNativeBlob = typeof Blob === 'function' ||\r\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\r\nvar withNativeFile = typeof File === 'function' ||\r\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = hasBinary;\r\n\r\n/**\r\n * Checks for binary data.\r\n *\r\n * Supports Buffer, ArrayBuffer, Blob and File.\r\n *\r\n * @param {Object} anything\r\n * @api public\r\n */\r\n\r\nfunction hasBinary (obj) {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      if (hasBinary(obj[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\r\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\r\n    (withNativeBlob && obj instanceof Blob) ||\r\n    (withNativeFile && obj instanceof File)\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  // see: https://github.com/Automattic/has-binary/pull/4\r\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\r\n    return hasBinary(obj.toJSON(), true);\r\n  }\r\n\r\n  for (var key in obj) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/has-binary2/index.js?");

/***/ }),

/***/ "./node_modules/has-binary2/node_modules/isarray/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/has-binary2/node_modules/isarray/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\r\n\r\nmodule.exports = Array.isArray || function (arr) {\r\n  return toString.call(arr) == '[object Array]';\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/has-binary2/node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/has-cors/index.js":
/*!****************************************!*\
  !*** ./node_modules/has-cors/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\n/**\r\n * Module exports.\r\n *\r\n * Logic borrowed from Modernizr:\r\n *\r\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\r\n */\r\n\r\ntry {\r\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\r\n    'withCredentials' in new XMLHttpRequest();\r\n} catch (err) {\r\n  // if XMLHttp support is disabled in IE then it will throw\r\n  // when trying to create\r\n  module.exports = false;\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/has-cors/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var nBits = -7\r\n  var i = isLE ? (nBytes - 1) : 0\r\n  var d = isLE ? -1 : 1\r\n  var s = buffer[offset + i]\r\n\r\n  i += d\r\n\r\n  e = s & ((1 << (-nBits)) - 1)\r\n  s >>= (-nBits)\r\n  nBits += eLen\r\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1)\r\n  e >>= (-nBits)\r\n  nBits += mLen\r\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen)\r\n    e = e - eBias\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\r\n  var i = isLE ? 0 : (nBytes - 1)\r\n  var d = isLE ? 1 : -1\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\r\n\r\n  value = Math.abs(value)\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0\r\n    e = eMax\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2)\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--\r\n      c *= 2\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias)\r\n    }\r\n    if (value * c >= 2) {\r\n      e++\r\n      c /= 2\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0\r\n      e = eMax\r\n    } else if (e + eBias >= 1) {\r\n      m = ((value * c) - 1) * Math.pow(2, mLen)\r\n      e = e + eBias\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\r\n      e = 0\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m\r\n  eLen += mLen\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/indexof/index.js":
/*!***************************************!*\
  !*** ./node_modules/indexof/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\nvar indexOf = [].indexOf;\r\n\r\nmodule.exports = function(arr, obj){\r\n  if (indexOf) return arr.indexOf(obj);\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) return i;\r\n  }\r\n  return -1;\r\n};\n\n//# sourceURL=webpack:///./node_modules/indexof/index.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\r\n\r\nmodule.exports = Array.isArray || function (arr) {\r\n  return toString.call(arr) == '[object Array]';\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isNaN(val) === false) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  if (ms >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (ms >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (ms >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (ms >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  return plural(ms, d, 'day') ||\r\n    plural(ms, h, 'hour') ||\r\n    plural(ms, m, 'minute') ||\r\n    plural(ms, s, 'second') ||\r\n    ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, n, name) {\r\n  if (ms < n) {\r\n    return;\r\n  }\r\n  if (ms < n * 1.5) {\r\n    return Math.floor(ms / n) + ' ' + name;\r\n  }\r\n  return Math.ceil(ms / n) + ' ' + name + 's';\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/parseqs/index.js":
/*!***************************************!*\
  !*** ./node_modules/parseqs/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/parseqs/index.js?");

/***/ }),

/***/ "./node_modules/parseuri/index.js":
/*!****************************************!*\
  !*** ./node_modules/parseuri/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/parseuri/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\r\nvar process = module.exports = {};\r\n\r\n// cached from whatever global is present so that test runners that stub it\r\n// don't break things.  But we need to wrap it in a try catch in case it is\r\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\r\n// function because try/catches deoptimize in certain engines.\r\n\r\nvar cachedSetTimeout;\r\nvar cachedClearTimeout;\r\n\r\nfunction defaultSetTimout() {\r\n    throw new Error('setTimeout has not been defined');\r\n}\r\nfunction defaultClearTimeout () {\r\n    throw new Error('clearTimeout has not been defined');\r\n}\r\n(function () {\r\n    try {\r\n        if (typeof setTimeout === 'function') {\r\n            cachedSetTimeout = setTimeout;\r\n        } else {\r\n            cachedSetTimeout = defaultSetTimout;\r\n        }\r\n    } catch (e) {\r\n        cachedSetTimeout = defaultSetTimout;\r\n    }\r\n    try {\r\n        if (typeof clearTimeout === 'function') {\r\n            cachedClearTimeout = clearTimeout;\r\n        } else {\r\n            cachedClearTimeout = defaultClearTimeout;\r\n        }\r\n    } catch (e) {\r\n        cachedClearTimeout = defaultClearTimeout;\r\n    }\r\n} ())\r\nfunction runTimeout(fun) {\r\n    if (cachedSetTimeout === setTimeout) {\r\n        //normal enviroments in sane situations\r\n        return setTimeout(fun, 0);\r\n    }\r\n    // if setTimeout wasn't available but was latter defined\r\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\r\n        cachedSetTimeout = setTimeout;\r\n        return setTimeout(fun, 0);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedSetTimeout(fun, 0);\r\n    } catch(e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n            return cachedSetTimeout.call(null, fun, 0);\r\n        } catch(e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n            return cachedSetTimeout.call(this, fun, 0);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction runClearTimeout(marker) {\r\n    if (cachedClearTimeout === clearTimeout) {\r\n        //normal enviroments in sane situations\r\n        return clearTimeout(marker);\r\n    }\r\n    // if clearTimeout wasn't available but was latter defined\r\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\r\n        cachedClearTimeout = clearTimeout;\r\n        return clearTimeout(marker);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedClearTimeout(marker);\r\n    } catch (e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n            return cachedClearTimeout.call(null, marker);\r\n        } catch (e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n            return cachedClearTimeout.call(this, marker);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n    if (!draining || !currentQueue) {\r\n        return;\r\n    }\r\n    draining = false;\r\n    if (currentQueue.length) {\r\n        queue = currentQueue.concat(queue);\r\n    } else {\r\n        queueIndex = -1;\r\n    }\r\n    if (queue.length) {\r\n        drainQueue();\r\n    }\r\n}\r\n\r\nfunction drainQueue() {\r\n    if (draining) {\r\n        return;\r\n    }\r\n    var timeout = runTimeout(cleanUpNextTick);\r\n    draining = true;\r\n\r\n    var len = queue.length;\r\n    while(len) {\r\n        currentQueue = queue;\r\n        queue = [];\r\n        while (++queueIndex < len) {\r\n            if (currentQueue) {\r\n                currentQueue[queueIndex].run();\r\n            }\r\n        }\r\n        queueIndex = -1;\r\n        len = queue.length;\r\n    }\r\n    currentQueue = null;\r\n    draining = false;\r\n    runClearTimeout(timeout);\r\n}\r\n\r\nprocess.nextTick = function (fun) {\r\n    var args = new Array(arguments.length - 1);\r\n    if (arguments.length > 1) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            args[i - 1] = arguments[i];\r\n        }\r\n    }\r\n    queue.push(new Item(fun, args));\r\n    if (queue.length === 1 && !draining) {\r\n        runTimeout(drainQueue);\r\n    }\r\n};\r\n\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n    this.fun = fun;\r\n    this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n    this.fun.apply(null, this.array);\r\n};\r\nprocess.title = 'browser';\r\nprocess.browser = true;\r\nprocess.env = {};\r\nprocess.argv = [];\r\nprocess.version = ''; // empty string to avoid regexp issues\r\nprocess.versions = {};\r\n\r\nfunction noop() {}\r\n\r\nprocess.on = noop;\r\nprocess.addListener = noop;\r\nprocess.once = noop;\r\nprocess.off = noop;\r\nprocess.removeListener = noop;\r\nprocess.removeAllListeners = noop;\r\nprocess.emit = noop;\r\nprocess.prependListener = noop;\r\nprocess.prependOnceListener = noop;\r\n\r\nprocess.listeners = function (name) { return [] }\r\n\r\nprocess.binding = function (name) {\r\n    throw new Error('process.binding is not supported');\r\n};\r\n\r\nprocess.cwd = function () { return '/' };\r\nprocess.chdir = function (dir) {\r\n    throw new Error('process.chdir is not supported');\r\n};\r\nprocess.umask = function() { return 0; };\r\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/skyway-js/dist/skyway.js":
/*!***********************************************!*\
  !*** ./node_modules/skyway-js/dist/skyway.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\r\n * SkyWay Copyright(c) 2020 NTT Communications Corporation\r\n * peerjs Copyright(c) 2013 Michelle Bu <michelle@michellebu.com>\r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(true)\r\n\t\tmodule.exports = factory();\r\n\telse {}\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/peer.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./node_modules/after/index.js\":\r\n/*!*************************************!*\\\r\n  !*** ./node_modules/after/index.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = after\r\n\r\nfunction after(count, callback, err_cb) {\r\n    var bail = false\r\n    err_cb = err_cb || noop\r\n    proxy.count = count\r\n\r\n    return (count === 0) ? callback() : proxy\r\n\r\n    function proxy(err, result) {\r\n        if (proxy.count <= 0) {\r\n            throw new Error('after called too many times')\r\n        }\r\n        --proxy.count\r\n\r\n        // after first error, rest are passed to err_cb\r\n        if (err) {\r\n            bail = true\r\n            callback(err)\r\n            // future error callbacks will go to error handler\r\n            callback = err_cb\r\n        } else if (proxy.count === 0 && !bail) {\r\n            callback(null, result)\r\n        }\r\n    }\r\n}\r\n\r\nfunction noop() {}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/arraybuffer.slice/index.js\":\r\n/*!*************************************************!*\\\r\n  !*** ./node_modules/arraybuffer.slice/index.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * An abstraction for slicing an arraybuffer even when\r\n * ArrayBuffer.prototype.slice is not supported\r\n *\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(arraybuffer, start, end) {\r\n  var bytes = arraybuffer.byteLength;\r\n  start = start || 0;\r\n  end = end || bytes;\r\n\r\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\r\n\r\n  if (start < 0) { start += bytes; }\r\n  if (end < 0) { end += bytes; }\r\n  if (end > bytes) { end = bytes; }\r\n\r\n  if (start >= bytes || start >= end || bytes === 0) {\r\n    return new ArrayBuffer(0);\r\n  }\r\n\r\n  var abv = new Uint8Array(arraybuffer);\r\n  var result = new Uint8Array(end - start);\r\n  for (var i = start, ii = 0; i < end; i++, ii++) {\r\n    result[ii] = abv[i];\r\n  }\r\n  return result.buffer;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/backo2/index.js\":\r\n/*!**************************************!*\\\r\n  !*** ./node_modules/backo2/index.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n\r\n/**\r\n * Expose `Backoff`.\r\n */\r\n\r\nmodule.exports = Backoff;\r\n\r\n/**\r\n * Initialize backoff timer with `opts`.\r\n *\r\n * - `min` initial timeout in milliseconds [100]\r\n * - `max` max timeout [10000]\r\n * - `jitter` [0]\r\n * - `factor` [2]\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\n\r\nfunction Backoff(opts) {\r\n  opts = opts || {};\r\n  this.ms = opts.min || 100;\r\n  this.max = opts.max || 10000;\r\n  this.factor = opts.factor || 2;\r\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\r\n  this.attempts = 0;\r\n}\r\n\r\n/**\r\n * Return the backoff duration.\r\n *\r\n * @return {Number}\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.duration = function(){\r\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\r\n  if (this.jitter) {\r\n    var rand =  Math.random();\r\n    var deviation = Math.floor(rand * this.jitter * ms);\r\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\r\n  }\r\n  return Math.min(ms, this.max) | 0;\r\n};\r\n\r\n/**\r\n * Reset the number of attempts.\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.reset = function(){\r\n  this.attempts = 0;\r\n};\r\n\r\n/**\r\n * Set the minimum duration\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.setMin = function(min){\r\n  this.ms = min;\r\n};\r\n\r\n/**\r\n * Set the maximum duration\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.setMax = function(max){\r\n  this.max = max;\r\n};\r\n\r\n/**\r\n * Set the jitter\r\n *\r\n * @api public\r\n */\r\n\r\nBackoff.prototype.setJitter = function(jitter){\r\n  this.jitter = jitter;\r\n};\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js\":\r\n/*!*******************************************************************!*\\\r\n  !*** ./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js ***!\r\n  \\*******************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/*\r\n * base64-arraybuffer\r\n * https://github.com/niklasvh/base64-arraybuffer\r\n *\r\n * Copyright (c) 2012 Niklas von Hertzen\r\n * Licensed under the MIT license.\r\n */\r\n(function(){\r\n  \"use strict\";\r\n\r\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n  // Use a lookup table to find the index.\r\n  var lookup = new Uint8Array(256);\r\n  for (var i = 0; i < chars.length; i++) {\r\n    lookup[chars.charCodeAt(i)] = i;\r\n  }\r\n\r\n  exports.encode = function(arraybuffer) {\r\n    var bytes = new Uint8Array(arraybuffer),\r\n    i, len = bytes.length, base64 = \"\";\r\n\r\n    for (i = 0; i < len; i+=3) {\r\n      base64 += chars[bytes[i] >> 2];\r\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n      base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if ((len % 3) === 2) {\r\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n    } else if (len % 3 === 1) {\r\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n    }\r\n\r\n    return base64;\r\n  };\r\n\r\n  exports.decode =  function(base64) {\r\n    var bufferLength = base64.length * 0.75,\r\n    len = base64.length, i, p = 0,\r\n    encoded1, encoded2, encoded3, encoded4;\r\n\r\n    if (base64[base64.length - 1] === \"=\") {\r\n      bufferLength--;\r\n      if (base64[base64.length - 2] === \"=\") {\r\n        bufferLength--;\r\n      }\r\n    }\r\n\r\n    var arraybuffer = new ArrayBuffer(bufferLength),\r\n    bytes = new Uint8Array(arraybuffer);\r\n\r\n    for (i = 0; i < len; i+=4) {\r\n      encoded1 = lookup[base64.charCodeAt(i)];\r\n      encoded2 = lookup[base64.charCodeAt(i+1)];\r\n      encoded3 = lookup[base64.charCodeAt(i+2)];\r\n      encoded4 = lookup[base64.charCodeAt(i+3)];\r\n\r\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n\r\n    return arraybuffer;\r\n  };\r\n})();\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/base64-js/index.js\":\r\n/*!*****************************************!*\\\r\n  !*** ./node_modules/base64-js/index.js ***!\r\n  \\*****************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nexports.byteLength = byteLength\r\nexports.toByteArray = toByteArray\r\nexports.fromByteArray = fromByteArray\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\n\r\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nfor (var i = 0, len = code.length; i < len; ++i) {\r\n  lookup[i] = code[i]\r\n  revLookup[code.charCodeAt(i)] = i\r\n}\r\n\r\n// Support decoding URL-safe base64 strings, as Node.js does.\r\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\r\nrevLookup['-'.charCodeAt(0)] = 62\r\nrevLookup['_'.charCodeAt(0)] = 63\r\n\r\nfunction getLens (b64) {\r\n  var len = b64.length\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // Trim off extra bytes after placeholder bytes are found\r\n  // See: https://github.com/beatgammit/base64-js/issues/42\r\n  var validLen = b64.indexOf('=')\r\n  if (validLen === -1) validLen = len\r\n\r\n  var placeHoldersLen = validLen === len\r\n    ? 0\r\n    : 4 - (validLen % 4)\r\n\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\n// base64 is 4/3 + up to two characters of the original data\r\nfunction byteLength (b64) {\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction _byteLength (b64, validLen, placeHoldersLen) {\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0\r\n    ? validLen - 4\r\n    : validLen\r\n\r\n  var i\r\n  for (i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 18) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n      revLookup[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xFF\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 2) |\r\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 10) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] +\r\n    lookup[num >> 12 & 0x3F] +\r\n    lookup[num >> 6 & 0x3F] +\r\n    lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp\r\n  var output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xFF0000) +\r\n      ((uint8[i + 1] << 8) & 0xFF00) +\r\n      (uint8[i + 2] & 0xFF)\r\n    output.push(tripletToBase64(tmp))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  var tmp\r\n  var len = uint8.length\r\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  var parts = []\r\n  var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(\r\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\r\n    ))\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 2] +\r\n      lookup[(tmp << 4) & 0x3F] +\r\n      '=='\r\n    )\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 10] +\r\n      lookup[(tmp >> 4) & 0x3F] +\r\n      lookup[(tmp << 2) & 0x3F] +\r\n      '='\r\n    )\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/blob/index.js\":\r\n/*!************************************!*\\\r\n  !*** ./node_modules/blob/index.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/component-bind/index.js\":\r\n/*!**********************************************!*\\\r\n  !*** ./node_modules/component-bind/index.js ***!\r\n  \\**********************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Slice reference.\r\n */\r\n\r\nvar slice = [].slice;\r\n\r\n/**\r\n * Bind `obj` to `fn`.\r\n *\r\n * @param {Object} obj\r\n * @param {Function|String} fn or string\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(obj, fn){\r\n  if ('string' == typeof fn) fn = obj[fn];\r\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\r\n  var args = slice.call(arguments, 2);\r\n  return function(){\r\n    return fn.apply(obj, args.concat(slice.call(arguments)));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/component-emitter/index.js\":\r\n/*!*************************************************!*\\\r\n  !*** ./node_modules/component-emitter/index.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/component-inherit/index.js\":\r\n/*!*************************************************!*\\\r\n  !*** ./node_modules/component-inherit/index.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n\r\nmodule.exports = function(a, b){\r\n  var fn = function(){};\r\n  fn.prototype = b.prototype;\r\n  a.prototype = new fn;\r\n  a.prototype.constructor = a;\r\n};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/debug/src/browser.js\":\r\n/*!*******************************************!*\\\r\n  !*** ./node_modules/debug/src/browser.js ***!\r\n  \\*******************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */\r\n\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n */\r\n\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n\t'#0000CC',\r\n\t'#0000FF',\r\n\t'#0033CC',\r\n\t'#0033FF',\r\n\t'#0066CC',\r\n\t'#0066FF',\r\n\t'#0099CC',\r\n\t'#0099FF',\r\n\t'#00CC00',\r\n\t'#00CC33',\r\n\t'#00CC66',\r\n\t'#00CC99',\r\n\t'#00CCCC',\r\n\t'#00CCFF',\r\n\t'#3300CC',\r\n\t'#3300FF',\r\n\t'#3333CC',\r\n\t'#3333FF',\r\n\t'#3366CC',\r\n\t'#3366FF',\r\n\t'#3399CC',\r\n\t'#3399FF',\r\n\t'#33CC00',\r\n\t'#33CC33',\r\n\t'#33CC66',\r\n\t'#33CC99',\r\n\t'#33CCCC',\r\n\t'#33CCFF',\r\n\t'#6600CC',\r\n\t'#6600FF',\r\n\t'#6633CC',\r\n\t'#6633FF',\r\n\t'#66CC00',\r\n\t'#66CC33',\r\n\t'#9900CC',\r\n\t'#9900FF',\r\n\t'#9933CC',\r\n\t'#9933FF',\r\n\t'#99CC00',\r\n\t'#99CC33',\r\n\t'#CC0000',\r\n\t'#CC0033',\r\n\t'#CC0066',\r\n\t'#CC0099',\r\n\t'#CC00CC',\r\n\t'#CC00FF',\r\n\t'#CC3300',\r\n\t'#CC3333',\r\n\t'#CC3366',\r\n\t'#CC3399',\r\n\t'#CC33CC',\r\n\t'#CC33FF',\r\n\t'#CC6600',\r\n\t'#CC6633',\r\n\t'#CC9900',\r\n\t'#CC9933',\r\n\t'#CCCC00',\r\n\t'#CCCC33',\r\n\t'#FF0000',\r\n\t'#FF0033',\r\n\t'#FF0066',\r\n\t'#FF0099',\r\n\t'#FF00CC',\r\n\t'#FF00FF',\r\n\t'#FF3300',\r\n\t'#FF3333',\r\n\t'#FF3366',\r\n\t'#FF3399',\r\n\t'#FF33CC',\r\n\t'#FF33FF',\r\n\t'#FF6600',\r\n\t'#FF6633',\r\n\t'#FF9900',\r\n\t'#FF9933',\r\n\t'#FFCC00',\r\n\t'#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\n// eslint-disable-next-line complexity\r\nfunction useColors() {\r\n\t// NB: In an Electron preload script, document will be defined but not fully\r\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\r\n\t// explicitly\r\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Internet Explorer and Edge do not support colors.\r\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\r\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\r\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n\t\t// Is firefox >= v31?\r\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n\t\t// Double check webkit in userAgent just in case we are in a worker\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n\targs[0] = (this.useColors ? '%c' : '') +\r\n\t\tthis.namespace +\r\n\t\t(this.useColors ? ' %c' : ' ') +\r\n\t\targs[0] +\r\n\t\t(this.useColors ? '%c ' : ' ') +\r\n\t\t'+' + module.exports.humanize(this.diff);\r\n\r\n\tif (!this.useColors) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst c = 'color: ' + this.color;\r\n\targs.splice(1, 0, c, 'color: inherit');\r\n\r\n\t// The final \"%c\" is somewhat tricky, because there could be other\r\n\t// arguments passed either before or after the %c, so we need to\r\n\t// figure out the correct index to insert the CSS into\r\n\tlet index = 0;\r\n\tlet lastC = 0;\r\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\r\n\t\tif (match === '%%') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tindex++;\r\n\t\tif (match === '%c') {\r\n\t\t\t// We only are interested in the *last* %c\r\n\t\t\t// (the user may have provided their own)\r\n\t\t\tlastC = index;\r\n\t\t}\r\n\t});\r\n\r\n\targs.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\nfunction log(...args) {\r\n\t// This hackery is required for IE8/9, where\r\n\t// the `console.log` function doesn't have 'apply'\r\n\treturn typeof console === 'object' &&\r\n\t\tconsole.log &&\r\n\t\tconsole.log(...args);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\nfunction save(namespaces) {\r\n\ttry {\r\n\t\tif (namespaces) {\r\n\t\t\texports.storage.setItem('debug', namespaces);\r\n\t\t} else {\r\n\t\t\texports.storage.removeItem('debug');\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\nfunction load() {\r\n\tlet r;\r\n\ttry {\r\n\t\tr = exports.storage.getItem('debug');\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n\r\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\r\n\t\tr = process.env.DEBUG;\r\n\t}\r\n\r\n\treturn r;\r\n}\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n\ttry {\r\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\r\n\t\t// The Browser also has localStorage in the global context.\r\n\t\treturn localStorage;\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/debug/src/common.js\")(exports);\r\n\r\nconst {formatters} = module.exports;\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nformatters.j = function (v) {\r\n\ttry {\r\n\t\treturn JSON.stringify(v);\r\n\t} catch (error) {\r\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\r\n\t}\r\n};\r\n\r\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/debug/src/common.js\":\r\n/*!******************************************!*\\\r\n  !*** ./node_modules/debug/src/common.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n */\r\n\r\nfunction setup(env) {\r\n\tcreateDebug.debug = createDebug;\r\n\tcreateDebug.default = createDebug;\r\n\tcreateDebug.coerce = coerce;\r\n\tcreateDebug.disable = disable;\r\n\tcreateDebug.enable = enable;\r\n\tcreateDebug.enabled = enabled;\r\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\r\n\r\n\tObject.keys(env).forEach(key => {\r\n\t\tcreateDebug[key] = env[key];\r\n\t});\r\n\r\n\t/**\r\n\t* Active `debug` instances.\r\n\t*/\r\n\tcreateDebug.instances = [];\r\n\r\n\t/**\r\n\t* The currently active debug mode names, and names to skip.\r\n\t*/\r\n\r\n\tcreateDebug.names = [];\r\n\tcreateDebug.skips = [];\r\n\r\n\t/**\r\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n\t*\r\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n\t*/\r\n\tcreateDebug.formatters = {};\r\n\r\n\t/**\r\n\t* Selects a color for a debug namespace\r\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\r\n\t* @return {Number|String} An ANSI color code for the given namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction selectColor(namespace) {\r\n\t\tlet hash = 0;\r\n\r\n\t\tfor (let i = 0; i < namespace.length; i++) {\r\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t}\r\n\r\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\r\n\t}\r\n\tcreateDebug.selectColor = selectColor;\r\n\r\n\t/**\r\n\t* Create a debugger with the given `namespace`.\r\n\t*\r\n\t* @param {String} namespace\r\n\t* @return {Function}\r\n\t* @api public\r\n\t*/\r\n\tfunction createDebug(namespace) {\r\n\t\tlet prevTime;\r\n\r\n\t\tfunction debug(...args) {\r\n\t\t\t// Disabled?\r\n\t\t\tif (!debug.enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst self = debug;\r\n\r\n\t\t\t// Set `diff` timestamp\r\n\t\t\tconst curr = Number(new Date());\r\n\t\t\tconst ms = curr - (prevTime || curr);\r\n\t\t\tself.diff = ms;\r\n\t\t\tself.prev = prevTime;\r\n\t\t\tself.curr = curr;\r\n\t\t\tprevTime = curr;\r\n\r\n\t\t\targs[0] = createDebug.coerce(args[0]);\r\n\r\n\t\t\tif (typeof args[0] !== 'string') {\r\n\t\t\t\t// Anything else let's inspect with %O\r\n\t\t\t\targs.unshift('%O');\r\n\t\t\t}\r\n\r\n\t\t\t// Apply any `formatters` transformations\r\n\t\t\tlet index = 0;\r\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\r\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\r\n\t\t\t\tif (match === '%%') {\r\n\t\t\t\t\treturn match;\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t\tconst formatter = createDebug.formatters[format];\r\n\t\t\t\tif (typeof formatter === 'function') {\r\n\t\t\t\t\tconst val = args[index];\r\n\t\t\t\t\tmatch = formatter.call(self, val);\r\n\r\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\r\n\t\t\t\t\targs.splice(index, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t\treturn match;\r\n\t\t\t});\r\n\r\n\t\t\t// Apply env-specific formatting (colors, etc.)\r\n\t\t\tcreateDebug.formatArgs.call(self, args);\r\n\r\n\t\t\tconst logFn = self.log || createDebug.log;\r\n\t\t\tlogFn.apply(self, args);\r\n\t\t}\r\n\r\n\t\tdebug.namespace = namespace;\r\n\t\tdebug.enabled = createDebug.enabled(namespace);\r\n\t\tdebug.useColors = createDebug.useColors();\r\n\t\tdebug.color = selectColor(namespace);\r\n\t\tdebug.destroy = destroy;\r\n\t\tdebug.extend = extend;\r\n\t\t// Debug.formatArgs = formatArgs;\r\n\t\t// debug.rawLog = rawLog;\r\n\r\n\t\t// env-specific initialization logic for debug instances\r\n\t\tif (typeof createDebug.init === 'function') {\r\n\t\t\tcreateDebug.init(debug);\r\n\t\t}\r\n\r\n\t\tcreateDebug.instances.push(debug);\r\n\r\n\t\treturn debug;\r\n\t}\r\n\r\n\tfunction destroy() {\r\n\t\tconst index = createDebug.instances.indexOf(this);\r\n\t\tif (index !== -1) {\r\n\t\t\tcreateDebug.instances.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction extend(namespace, delimiter) {\r\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\r\n\t\tnewDebug.log = this.log;\r\n\t\treturn newDebug;\r\n\t}\r\n\r\n\t/**\r\n\t* Enables a debug mode by namespaces. This can include modes\r\n\t* separated by a colon and wildcards.\r\n\t*\r\n\t* @param {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction enable(namespaces) {\r\n\t\tcreateDebug.save(namespaces);\r\n\r\n\t\tcreateDebug.names = [];\r\n\t\tcreateDebug.skips = [];\r\n\r\n\t\tlet i;\r\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n\t\tconst len = split.length;\r\n\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tif (!split[i]) {\r\n\t\t\t\t// ignore empty strings\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\r\n\r\n\t\t\tif (namespaces[0] === '-') {\r\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n\t\t\t} else {\r\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\r\n\t\t\tconst instance = createDebug.instances[i];\r\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Disable debug output.\r\n\t*\r\n\t* @return {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction disable() {\r\n\t\tconst namespaces = [\r\n\t\t\t...createDebug.names.map(toNamespace),\r\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\r\n\t\t].join(',');\r\n\t\tcreateDebug.enable('');\r\n\t\treturn namespaces;\r\n\t}\r\n\r\n\t/**\r\n\t* Returns true if the given mode name is enabled, false otherwise.\r\n\t*\r\n\t* @param {String} name\r\n\t* @return {Boolean}\r\n\t* @api public\r\n\t*/\r\n\tfunction enabled(name) {\r\n\t\tif (name[name.length - 1] === '*') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet i;\r\n\t\tlet len;\r\n\r\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\r\n\t\t\tif (createDebug.skips[i].test(name)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\r\n\t\t\tif (createDebug.names[i].test(name)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t* Convert regexp to namespace\r\n\t*\r\n\t* @param {RegExp} regxep\r\n\t* @return {String} namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction toNamespace(regexp) {\r\n\t\treturn regexp.toString()\r\n\t\t\t.substring(2, regexp.toString().length - 2)\r\n\t\t\t.replace(/\\.\\*\\?$/, '*');\r\n\t}\r\n\r\n\t/**\r\n\t* Coerce `val`.\r\n\t*\r\n\t* @param {Mixed} val\r\n\t* @return {Mixed}\r\n\t* @api private\r\n\t*/\r\n\tfunction coerce(val) {\r\n\t\tif (val instanceof Error) {\r\n\t\t\treturn val.stack || val.message;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\tcreateDebug.enable(createDebug.load());\r\n\r\n\treturn createDebug;\r\n}\r\n\r\nmodule.exports = setup;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/decode-uri-component/index.js\":\r\n/*!****************************************************!*\\\r\n  !*** ./node_modules/decode-uri-component/index.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nvar token = '%[a-f0-9]{2}';\r\nvar singleMatcher = new RegExp(token, 'gi');\r\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\r\n\r\nfunction decodeComponents(components, split) {\r\n\ttry {\r\n\t\t// Try to decode the entire string first\r\n\t\treturn decodeURIComponent(components.join(''));\r\n\t} catch (err) {\r\n\t\t// Do nothing\r\n\t}\r\n\r\n\tif (components.length === 1) {\r\n\t\treturn components;\r\n\t}\r\n\r\n\tsplit = split || 1;\r\n\r\n\t// Split the array in 2 parts\r\n\tvar left = components.slice(0, split);\r\n\tvar right = components.slice(split);\r\n\r\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\r\n}\r\n\r\nfunction decode(input) {\r\n\ttry {\r\n\t\treturn decodeURIComponent(input);\r\n\t} catch (err) {\r\n\t\tvar tokens = input.match(singleMatcher);\r\n\r\n\t\tfor (var i = 1; i < tokens.length; i++) {\r\n\t\t\tinput = decodeComponents(tokens, i).join('');\r\n\r\n\t\t\ttokens = input.match(singleMatcher);\r\n\t\t}\r\n\r\n\t\treturn input;\r\n\t}\r\n}\r\n\r\nfunction customDecodeURIComponent(input) {\r\n\t// Keep track of all the replacements and prefill the map with the `BOM`\r\n\tvar replaceMap = {\r\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\r\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\r\n\t};\r\n\r\n\tvar match = multiMatcher.exec(input);\r\n\twhile (match) {\r\n\t\ttry {\r\n\t\t\t// Decode as big chunks as possible\r\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\r\n\t\t} catch (err) {\r\n\t\t\tvar result = decode(match[0]);\r\n\r\n\t\t\tif (result !== match[0]) {\r\n\t\t\t\treplaceMap[match[0]] = result;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmatch = multiMatcher.exec(input);\r\n\t}\r\n\r\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\r\n\treplaceMap['%C2'] = '\\uFFFD';\r\n\r\n\tvar entries = Object.keys(replaceMap);\r\n\r\n\tfor (var i = 0; i < entries.length; i++) {\r\n\t\t// Replace all decoded components\r\n\t\tvar key = entries[i];\r\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nmodule.exports = function (encodedURI) {\r\n\tif (typeof encodedURI !== 'string') {\r\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\r\n\t}\r\n\r\n\ttry {\r\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\r\n\r\n\t\t// Try the built in decoder first\r\n\t\treturn decodeURIComponent(encodedURI);\r\n\t} catch (err) {\r\n\t\t// Fallback to a more advanced decoder\r\n\t\treturn customDecodeURIComponent(encodedURI);\r\n\t}\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/detect-browser/index.js\":\r\n/*!**********************************************!*\\\r\n  !*** ./node_modules/detect-browser/index.js ***!\r\n  \\**********************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n/* WEBPACK VAR INJECTION */(function(process) {\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BrowserInfo = /** @class */ (function () {\r\n    function BrowserInfo(name, version, os) {\r\n        this.name = name;\r\n        this.version = version;\r\n        this.os = os;\r\n    }\r\n    return BrowserInfo;\r\n}());\r\nexports.BrowserInfo = BrowserInfo;\r\nvar NodeInfo = /** @class */ (function () {\r\n    function NodeInfo(version) {\r\n        this.version = version;\r\n        this.name = 'node';\r\n        this.os = process.platform;\r\n    }\r\n    return NodeInfo;\r\n}());\r\nexports.NodeInfo = NodeInfo;\r\nvar BotInfo = /** @class */ (function () {\r\n    function BotInfo() {\r\n        this.bot = true; // NOTE: deprecated test name instead\r\n        this.name = 'bot';\r\n        this.version = null;\r\n        this.os = null;\r\n    }\r\n    return BotInfo;\r\n}());\r\nexports.BotInfo = BotInfo;\r\n// tslint:disable-next-line:max-line-length\r\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\r\nvar SEARCHBOT_OS_REGEX = /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/;\r\nvar REQUIRED_VERSION_PARTS = 3;\r\nvar userAgentRules = [\r\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\r\n    ['edge', /Edge\\/([0-9\\._]+)/],\r\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\r\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\r\n    ['vivaldi', /Vivaldi\\/([0-9\\.]+)/],\r\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\r\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\r\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\r\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\r\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\r\n    ['edge-chromium', /Edg\\/([0-9\\.]+)/],\r\n    [\r\n        'chromium-webview',\r\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\r\n    ],\r\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\r\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\r\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\r\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\r\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\r\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\r\n    ['ie', /MSIE\\s(7\\.0)/],\r\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\r\n    ['android', /Android\\s([0-9\\.]+)/],\r\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\r\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\r\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\r\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\r\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\r\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\r\n    ['searchbot', SEARCHBOX_UA_REGEX],\r\n];\r\nvar operatingSystemRules = [\r\n    ['iOS', /iP(hone|od|ad)/],\r\n    ['Android OS', /Android/],\r\n    ['BlackBerry OS', /BlackBerry|BB10/],\r\n    ['Windows Mobile', /IEMobile/],\r\n    ['Amazon OS', /Kindle/],\r\n    ['Windows 3.11', /Win16/],\r\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\r\n    ['Windows 98', /(Windows 98)|(Win98)/],\r\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\r\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\r\n    ['Windows Server 2003', /(Windows NT 5.2)/],\r\n    ['Windows Vista', /(Windows NT 6.0)/],\r\n    ['Windows 7', /(Windows NT 6.1)/],\r\n    ['Windows 8', /(Windows NT 6.2)/],\r\n    ['Windows 8.1', /(Windows NT 6.3)/],\r\n    ['Windows 10', /(Windows NT 10.0)/],\r\n    ['Windows ME', /Windows ME/],\r\n    ['Open BSD', /OpenBSD/],\r\n    ['Sun OS', /SunOS/],\r\n    ['Chrome OS', /CrOS/],\r\n    ['Linux', /(Linux)|(X11)/],\r\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\r\n    ['QNX', /QNX/],\r\n    ['BeOS', /BeOS/],\r\n    ['OS/2', /OS\\/2/],\r\n    ['Search Bot', SEARCHBOT_OS_REGEX],\r\n];\r\nfunction detect(userAgent) {\r\n    if (!!userAgent) {\r\n        return parseUserAgent(userAgent);\r\n    }\r\n    if (typeof navigator !== 'undefined') {\r\n        return parseUserAgent(navigator.userAgent);\r\n    }\r\n    return getNodeVersion();\r\n}\r\nexports.detect = detect;\r\nfunction parseUserAgent(ua) {\r\n    // opted for using reduce here rather than Array#first with a regex.test call\r\n    // this is primarily because using the reduce we only perform the regex\r\n    // execution once rather than once for the test and for the exec again below\r\n    // probably something that needs to be benchmarked though\r\n    var matchedRule = ua !== '' &&\r\n        userAgentRules.reduce(function (matched, _a) {\r\n            var browser = _a[0], regex = _a[1];\r\n            if (matched) {\r\n                return matched;\r\n            }\r\n            var uaMatch = regex.exec(ua);\r\n            return !!uaMatch && [browser, uaMatch];\r\n        }, false);\r\n    if (!matchedRule) {\r\n        return null;\r\n    }\r\n    var name = matchedRule[0], match = matchedRule[1];\r\n    if (name === 'searchbot') {\r\n        return new BotInfo();\r\n    }\r\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\r\n    if (versionParts) {\r\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\r\n            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\r\n        }\r\n    }\r\n    else {\r\n        versionParts = [];\r\n    }\r\n    return new BrowserInfo(name, versionParts.join('.'), detectOS(ua));\r\n}\r\nexports.parseUserAgent = parseUserAgent;\r\nfunction detectOS(ua) {\r\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\r\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\r\n        var match = regex.test(ua);\r\n        if (match) {\r\n            return os;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.detectOS = detectOS;\r\nfunction getNodeVersion() {\r\n    var isNode = typeof process !== 'undefined' && process.version;\r\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\r\n}\r\nexports.getNodeVersion = getNodeVersion;\r\nfunction createVersionParts(count) {\r\n    var output = [];\r\n    for (var ii = 0; ii < count; ii++) {\r\n        output.push('0');\r\n    }\r\n    return output;\r\n}\r\n\r\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/globalThis.browser.js\":\r\n/*!*****************************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/globalThis.browser.js ***!\r\n  \\*****************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = (function () {\r\n  if (typeof self !== 'undefined') {\r\n    return self;\r\n  } else if (typeof window !== 'undefined') {\r\n    return window;\r\n  } else {\r\n    return Function('return this')(); // eslint-disable-line no-new-func\r\n  }\r\n})();\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/index.js\":\r\n/*!****************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/index.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\nmodule.exports = __webpack_require__(/*! ./socket */ \"./node_modules/engine.io-client/lib/socket.js\");\r\n\r\n/**\r\n * Exports parser\r\n *\r\n * @api public\r\n *\r\n */\r\nmodule.exports.parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/socket.js\":\r\n/*!*****************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/socket.js ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar transports = __webpack_require__(/*! ./transports/index */ \"./node_modules/engine.io-client/lib/transports/index.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/engine.io-client/node_modules/component-emitter/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")('engine.io-client:socket');\r\nvar index = __webpack_require__(/*! indexof */ \"./node_modules/indexof/index.js\");\r\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\nvar parseuri = __webpack_require__(/*! parseuri */ \"./node_modules/parseuri/index.js\");\r\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Socket;\r\n\r\n/**\r\n * Socket constructor.\r\n *\r\n * @param {String|Object} uri or options\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Socket (uri, opts) {\r\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\r\n\r\n  opts = opts || {};\r\n\r\n  if (uri && 'object' === typeof uri) {\r\n    opts = uri;\r\n    uri = null;\r\n  }\r\n\r\n  if (uri) {\r\n    uri = parseuri(uri);\r\n    opts.hostname = uri.host;\r\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\r\n    opts.port = uri.port;\r\n    if (uri.query) opts.query = uri.query;\r\n  } else if (opts.host) {\r\n    opts.hostname = parseuri(opts.host).host;\r\n  }\r\n\r\n  this.secure = null != opts.secure ? opts.secure\r\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\r\n\r\n  if (opts.hostname && !opts.port) {\r\n    // if no port is specified manually, use the protocol default\r\n    opts.port = this.secure ? '443' : '80';\r\n  }\r\n\r\n  this.agent = opts.agent || false;\r\n  this.hostname = opts.hostname ||\r\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\r\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\r\n      ? location.port\r\n      : (this.secure ? 443 : 80));\r\n  this.query = opts.query || {};\r\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\r\n  this.upgrade = false !== opts.upgrade;\r\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\r\n  this.forceJSONP = !!opts.forceJSONP;\r\n  this.jsonp = false !== opts.jsonp;\r\n  this.forceBase64 = !!opts.forceBase64;\r\n  this.enablesXDR = !!opts.enablesXDR;\r\n  this.withCredentials = false !== opts.withCredentials;\r\n  this.timestampParam = opts.timestampParam || 't';\r\n  this.timestampRequests = opts.timestampRequests;\r\n  this.transports = opts.transports || ['polling', 'websocket'];\r\n  this.transportOptions = opts.transportOptions || {};\r\n  this.readyState = '';\r\n  this.writeBuffer = [];\r\n  this.prevBufferLen = 0;\r\n  this.policyPort = opts.policyPort || 843;\r\n  this.rememberUpgrade = opts.rememberUpgrade || false;\r\n  this.binaryType = null;\r\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\r\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\r\n\r\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\r\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\r\n    this.perMessageDeflate.threshold = 1024;\r\n  }\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx || null;\r\n  this.key = opts.key || null;\r\n  this.passphrase = opts.passphrase || null;\r\n  this.cert = opts.cert || null;\r\n  this.ca = opts.ca || null;\r\n  this.ciphers = opts.ciphers || null;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\r\n  this.forceNode = !!opts.forceNode;\r\n\r\n  // detect ReactNative environment\r\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\r\n\r\n  // other options for Node.js or ReactNative client\r\n  if (typeof self === 'undefined' || this.isReactNative) {\r\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\r\n      this.extraHeaders = opts.extraHeaders;\r\n    }\r\n\r\n    if (opts.localAddress) {\r\n      this.localAddress = opts.localAddress;\r\n    }\r\n  }\r\n\r\n  // set on handshake\r\n  this.id = null;\r\n  this.upgrades = null;\r\n  this.pingInterval = null;\r\n  this.pingTimeout = null;\r\n\r\n  // set on heartbeat\r\n  this.pingIntervalTimer = null;\r\n  this.pingTimeoutTimer = null;\r\n\r\n  this.open();\r\n}\r\n\r\nSocket.priorWebsocketSuccess = false;\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.protocol = parser.protocol; // this is an int\r\n\r\n/**\r\n * Expose deps for legacy compatibility\r\n * and standalone browser access.\r\n */\r\n\r\nSocket.Socket = Socket;\r\nSocket.Transport = __webpack_require__(/*! ./transport */ \"./node_modules/engine.io-client/lib/transport.js\");\r\nSocket.transports = __webpack_require__(/*! ./transports/index */ \"./node_modules/engine.io-client/lib/transports/index.js\");\r\nSocket.parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\n\r\n/**\r\n * Creates transport of the given type.\r\n *\r\n * @param {String} transport name\r\n * @return {Transport}\r\n * @api private\r\n */\r\n\r\nSocket.prototype.createTransport = function (name) {\r\n  debug('creating transport \"%s\"', name);\r\n  var query = clone(this.query);\r\n\r\n  // append engine.io protocol identifier\r\n  query.EIO = parser.protocol;\r\n\r\n  // transport name\r\n  query.transport = name;\r\n\r\n  // per-transport options\r\n  var options = this.transportOptions[name] || {};\r\n\r\n  // session id if we already have one\r\n  if (this.id) query.sid = this.id;\r\n\r\n  var transport = new transports[name]({\r\n    query: query,\r\n    socket: this,\r\n    agent: options.agent || this.agent,\r\n    hostname: options.hostname || this.hostname,\r\n    port: options.port || this.port,\r\n    secure: options.secure || this.secure,\r\n    path: options.path || this.path,\r\n    forceJSONP: options.forceJSONP || this.forceJSONP,\r\n    jsonp: options.jsonp || this.jsonp,\r\n    forceBase64: options.forceBase64 || this.forceBase64,\r\n    enablesXDR: options.enablesXDR || this.enablesXDR,\r\n    withCredentials: options.withCredentials || this.withCredentials,\r\n    timestampRequests: options.timestampRequests || this.timestampRequests,\r\n    timestampParam: options.timestampParam || this.timestampParam,\r\n    policyPort: options.policyPort || this.policyPort,\r\n    pfx: options.pfx || this.pfx,\r\n    key: options.key || this.key,\r\n    passphrase: options.passphrase || this.passphrase,\r\n    cert: options.cert || this.cert,\r\n    ca: options.ca || this.ca,\r\n    ciphers: options.ciphers || this.ciphers,\r\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\r\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\r\n    extraHeaders: options.extraHeaders || this.extraHeaders,\r\n    forceNode: options.forceNode || this.forceNode,\r\n    localAddress: options.localAddress || this.localAddress,\r\n    requestTimeout: options.requestTimeout || this.requestTimeout,\r\n    protocols: options.protocols || void (0),\r\n    isReactNative: this.isReactNative\r\n  });\r\n\r\n  return transport;\r\n};\r\n\r\nfunction clone (obj) {\r\n  var o = {};\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      o[i] = obj[i];\r\n    }\r\n  }\r\n  return o;\r\n}\r\n\r\n/**\r\n * Initializes transport to use and starts probe.\r\n *\r\n * @api private\r\n */\r\nSocket.prototype.open = function () {\r\n  var transport;\r\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\r\n    transport = 'websocket';\r\n  } else if (0 === this.transports.length) {\r\n    // Emit error on next tick so it can be listened to\r\n    var self = this;\r\n    setTimeout(function () {\r\n      self.emit('error', 'No transports available');\r\n    }, 0);\r\n    return;\r\n  } else {\r\n    transport = this.transports[0];\r\n  }\r\n  this.readyState = 'opening';\r\n\r\n  // Retry with the next transport if the transport is disabled (jsonp: false)\r\n  try {\r\n    transport = this.createTransport(transport);\r\n  } catch (e) {\r\n    this.transports.shift();\r\n    this.open();\r\n    return;\r\n  }\r\n\r\n  transport.open();\r\n  this.setTransport(transport);\r\n};\r\n\r\n/**\r\n * Sets the current transport. Disables the existing one (if any).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setTransport = function (transport) {\r\n  debug('setting transport %s', transport.name);\r\n  var self = this;\r\n\r\n  if (this.transport) {\r\n    debug('clearing existing transport %s', this.transport.name);\r\n    this.transport.removeAllListeners();\r\n  }\r\n\r\n  // set up transport\r\n  this.transport = transport;\r\n\r\n  // set up transport listeners\r\n  transport\r\n  .on('drain', function () {\r\n    self.onDrain();\r\n  })\r\n  .on('packet', function (packet) {\r\n    self.onPacket(packet);\r\n  })\r\n  .on('error', function (e) {\r\n    self.onError(e);\r\n  })\r\n  .on('close', function () {\r\n    self.onClose('transport close');\r\n  });\r\n};\r\n\r\n/**\r\n * Probes a transport.\r\n *\r\n * @param {String} transport name\r\n * @api private\r\n */\r\n\r\nSocket.prototype.probe = function (name) {\r\n  debug('probing transport \"%s\"', name);\r\n  var transport = this.createTransport(name, { probe: 1 });\r\n  var failed = false;\r\n  var self = this;\r\n\r\n  Socket.priorWebsocketSuccess = false;\r\n\r\n  function onTransportOpen () {\r\n    if (self.onlyBinaryUpgrades) {\r\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\r\n      failed = failed || upgradeLosesBinary;\r\n    }\r\n    if (failed) return;\r\n\r\n    debug('probe transport \"%s\" opened', name);\r\n    transport.send([{ type: 'ping', data: 'probe' }]);\r\n    transport.once('packet', function (msg) {\r\n      if (failed) return;\r\n      if ('pong' === msg.type && 'probe' === msg.data) {\r\n        debug('probe transport \"%s\" pong', name);\r\n        self.upgrading = true;\r\n        self.emit('upgrading', transport);\r\n        if (!transport) return;\r\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\r\n\r\n        debug('pausing current transport \"%s\"', self.transport.name);\r\n        self.transport.pause(function () {\r\n          if (failed) return;\r\n          if ('closed' === self.readyState) return;\r\n          debug('changing transport and sending upgrade packet');\r\n\r\n          cleanup();\r\n\r\n          self.setTransport(transport);\r\n          transport.send([{ type: 'upgrade' }]);\r\n          self.emit('upgrade', transport);\r\n          transport = null;\r\n          self.upgrading = false;\r\n          self.flush();\r\n        });\r\n      } else {\r\n        debug('probe transport \"%s\" failed', name);\r\n        var err = new Error('probe error');\r\n        err.transport = transport.name;\r\n        self.emit('upgradeError', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  function freezeTransport () {\r\n    if (failed) return;\r\n\r\n    // Any callback called by transport should be ignored since now\r\n    failed = true;\r\n\r\n    cleanup();\r\n\r\n    transport.close();\r\n    transport = null;\r\n  }\r\n\r\n  // Handle any error that happens while probing\r\n  function onerror (err) {\r\n    var error = new Error('probe error: ' + err);\r\n    error.transport = transport.name;\r\n\r\n    freezeTransport();\r\n\r\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\r\n\r\n    self.emit('upgradeError', error);\r\n  }\r\n\r\n  function onTransportClose () {\r\n    onerror('transport closed');\r\n  }\r\n\r\n  // When the socket is closed while we're probing\r\n  function onclose () {\r\n    onerror('socket closed');\r\n  }\r\n\r\n  // When the socket is upgraded while we're probing\r\n  function onupgrade (to) {\r\n    if (transport && to.name !== transport.name) {\r\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\r\n      freezeTransport();\r\n    }\r\n  }\r\n\r\n  // Remove all listeners on the transport and on self\r\n  function cleanup () {\r\n    transport.removeListener('open', onTransportOpen);\r\n    transport.removeListener('error', onerror);\r\n    transport.removeListener('close', onTransportClose);\r\n    self.removeListener('close', onclose);\r\n    self.removeListener('upgrading', onupgrade);\r\n  }\r\n\r\n  transport.once('open', onTransportOpen);\r\n  transport.once('error', onerror);\r\n  transport.once('close', onTransportClose);\r\n\r\n  this.once('close', onclose);\r\n  this.once('upgrading', onupgrade);\r\n\r\n  transport.open();\r\n};\r\n\r\n/**\r\n * Called when connection is deemed open.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.prototype.onOpen = function () {\r\n  debug('socket open');\r\n  this.readyState = 'open';\r\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\r\n  this.emit('open');\r\n  this.flush();\r\n\r\n  // we check for `readyState` in case an `open`\r\n  // listener already closed the socket\r\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\r\n    debug('starting upgrade probes');\r\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\r\n      this.probe(this.upgrades[i]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onPacket = function (packet) {\r\n  if ('opening' === this.readyState || 'open' === this.readyState ||\r\n      'closing' === this.readyState) {\r\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\r\n\r\n    this.emit('packet', packet);\r\n\r\n    // Socket is live - any packet counts\r\n    this.emit('heartbeat');\r\n\r\n    switch (packet.type) {\r\n      case 'open':\r\n        this.onHandshake(JSON.parse(packet.data));\r\n        break;\r\n\r\n      case 'pong':\r\n        this.setPing();\r\n        this.emit('pong');\r\n        break;\r\n\r\n      case 'error':\r\n        var err = new Error('server error');\r\n        err.code = packet.data;\r\n        this.onError(err);\r\n        break;\r\n\r\n      case 'message':\r\n        this.emit('data', packet.data);\r\n        this.emit('message', packet.data);\r\n        break;\r\n    }\r\n  } else {\r\n    debug('packet received with socket readyState \"%s\"', this.readyState);\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon handshake completion.\r\n *\r\n * @param {Object} handshake obj\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onHandshake = function (data) {\r\n  this.emit('handshake', data);\r\n  this.id = data.sid;\r\n  this.transport.query.sid = data.sid;\r\n  this.upgrades = this.filterUpgrades(data.upgrades);\r\n  this.pingInterval = data.pingInterval;\r\n  this.pingTimeout = data.pingTimeout;\r\n  this.onOpen();\r\n  // In case open handler closes socket\r\n  if ('closed' === this.readyState) return;\r\n  this.setPing();\r\n\r\n  // Prolong liveness of socket on heartbeat\r\n  this.removeListener('heartbeat', this.onHeartbeat);\r\n  this.on('heartbeat', this.onHeartbeat);\r\n};\r\n\r\n/**\r\n * Resets ping timeout.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onHeartbeat = function (timeout) {\r\n  clearTimeout(this.pingTimeoutTimer);\r\n  var self = this;\r\n  self.pingTimeoutTimer = setTimeout(function () {\r\n    if ('closed' === self.readyState) return;\r\n    self.onClose('ping timeout');\r\n  }, timeout || (self.pingInterval + self.pingTimeout));\r\n};\r\n\r\n/**\r\n * Pings server every `this.pingInterval` and expects response\r\n * within `this.pingTimeout` or closes connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setPing = function () {\r\n  var self = this;\r\n  clearTimeout(self.pingIntervalTimer);\r\n  self.pingIntervalTimer = setTimeout(function () {\r\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\r\n    self.ping();\r\n    self.onHeartbeat(self.pingTimeout);\r\n  }, self.pingInterval);\r\n};\r\n\r\n/**\r\n* Sends a ping packet.\r\n*\r\n* @api private\r\n*/\r\n\r\nSocket.prototype.ping = function () {\r\n  var self = this;\r\n  this.sendPacket('ping', function () {\r\n    self.emit('ping');\r\n  });\r\n};\r\n\r\n/**\r\n * Called on `drain` event\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onDrain = function () {\r\n  this.writeBuffer.splice(0, this.prevBufferLen);\r\n\r\n  // setting prevBufferLen = 0 is very important\r\n  // for example, when upgrading, upgrade packet is sent over,\r\n  // and a nonzero prevBufferLen could cause problems on `drain`\r\n  this.prevBufferLen = 0;\r\n\r\n  if (0 === this.writeBuffer.length) {\r\n    this.emit('drain');\r\n  } else {\r\n    this.flush();\r\n  }\r\n};\r\n\r\n/**\r\n * Flush write buffers.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.flush = function () {\r\n  if ('closed' !== this.readyState && this.transport.writable &&\r\n    !this.upgrading && this.writeBuffer.length) {\r\n    debug('flushing %d packets in socket', this.writeBuffer.length);\r\n    this.transport.send(this.writeBuffer);\r\n    // keep track of current length of writeBuffer\r\n    // splice writeBuffer and callbackBuffer on `drain`\r\n    this.prevBufferLen = this.writeBuffer.length;\r\n    this.emit('flush');\r\n  }\r\n};\r\n\r\n/**\r\n * Sends a message.\r\n *\r\n * @param {String} message.\r\n * @param {Function} callback function.\r\n * @param {Object} options.\r\n * @return {Socket} for chaining.\r\n * @api public\r\n */\r\n\r\nSocket.prototype.write =\r\nSocket.prototype.send = function (msg, options, fn) {\r\n  this.sendPacket('message', msg, options, fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a packet.\r\n *\r\n * @param {String} packet type.\r\n * @param {String} data.\r\n * @param {Object} options.\r\n * @param {Function} callback function.\r\n * @api private\r\n */\r\n\r\nSocket.prototype.sendPacket = function (type, data, options, fn) {\r\n  if ('function' === typeof data) {\r\n    fn = data;\r\n    data = undefined;\r\n  }\r\n\r\n  if ('function' === typeof options) {\r\n    fn = options;\r\n    options = null;\r\n  }\r\n\r\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\r\n    return;\r\n  }\r\n\r\n  options = options || {};\r\n  options.compress = false !== options.compress;\r\n\r\n  var packet = {\r\n    type: type,\r\n    data: data,\r\n    options: options\r\n  };\r\n  this.emit('packetCreate', packet);\r\n  this.writeBuffer.push(packet);\r\n  if (fn) this.once('flush', fn);\r\n  this.flush();\r\n};\r\n\r\n/**\r\n * Closes the connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.close = function () {\r\n  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n    this.readyState = 'closing';\r\n\r\n    var self = this;\r\n\r\n    if (this.writeBuffer.length) {\r\n      this.once('drain', function () {\r\n        if (this.upgrading) {\r\n          waitForUpgrade();\r\n        } else {\r\n          close();\r\n        }\r\n      });\r\n    } else if (this.upgrading) {\r\n      waitForUpgrade();\r\n    } else {\r\n      close();\r\n    }\r\n  }\r\n\r\n  function close () {\r\n    self.onClose('forced close');\r\n    debug('socket closing - telling transport to close');\r\n    self.transport.close();\r\n  }\r\n\r\n  function cleanupAndClose () {\r\n    self.removeListener('upgrade', cleanupAndClose);\r\n    self.removeListener('upgradeError', cleanupAndClose);\r\n    close();\r\n  }\r\n\r\n  function waitForUpgrade () {\r\n    // wait for upgrade to finish since we can't send packets while pausing a transport\r\n    self.once('upgrade', cleanupAndClose);\r\n    self.once('upgradeError', cleanupAndClose);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon transport error\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onError = function (err) {\r\n  debug('socket error %j', err);\r\n  Socket.priorWebsocketSuccess = false;\r\n  this.emit('error', err);\r\n  this.onClose('transport error', err);\r\n};\r\n\r\n/**\r\n * Called upon transport close.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onClose = function (reason, desc) {\r\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\r\n    debug('socket close with reason: \"%s\"', reason);\r\n    var self = this;\r\n\r\n    // clear timers\r\n    clearTimeout(this.pingIntervalTimer);\r\n    clearTimeout(this.pingTimeoutTimer);\r\n\r\n    // stop event from firing again for transport\r\n    this.transport.removeAllListeners('close');\r\n\r\n    // ensure transport won't stay open\r\n    this.transport.close();\r\n\r\n    // ignore further transport communication\r\n    this.transport.removeAllListeners();\r\n\r\n    // set ready state\r\n    this.readyState = 'closed';\r\n\r\n    // clear session id\r\n    this.id = null;\r\n\r\n    // emit close event\r\n    this.emit('close', reason, desc);\r\n\r\n    // clean buffers after, so users can still\r\n    // grab the buffers on `close` event\r\n    self.writeBuffer = [];\r\n    self.prevBufferLen = 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Filters upgrades, returning only those matching client transports.\r\n *\r\n * @param {Array} server upgrades\r\n * @api private\r\n *\r\n */\r\n\r\nSocket.prototype.filterUpgrades = function (upgrades) {\r\n  var filteredUpgrades = [];\r\n  for (var i = 0, j = upgrades.length; i < j; i++) {\r\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\r\n  }\r\n  return filteredUpgrades;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/transport.js\":\r\n/*!********************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/transport.js ***!\r\n  \\********************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/engine.io-client/node_modules/component-emitter/index.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Transport;\r\n\r\n/**\r\n * Transport abstract constructor.\r\n *\r\n * @param {Object} options.\r\n * @api private\r\n */\r\n\r\nfunction Transport (opts) {\r\n  this.path = opts.path;\r\n  this.hostname = opts.hostname;\r\n  this.port = opts.port;\r\n  this.secure = opts.secure;\r\n  this.query = opts.query;\r\n  this.timestampParam = opts.timestampParam;\r\n  this.timestampRequests = opts.timestampRequests;\r\n  this.readyState = '';\r\n  this.agent = opts.agent || false;\r\n  this.socket = opts.socket;\r\n  this.enablesXDR = opts.enablesXDR;\r\n  this.withCredentials = opts.withCredentials;\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx;\r\n  this.key = opts.key;\r\n  this.passphrase = opts.passphrase;\r\n  this.cert = opts.cert;\r\n  this.ca = opts.ca;\r\n  this.ciphers = opts.ciphers;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n  this.forceNode = opts.forceNode;\r\n\r\n  // results of ReactNative environment detection\r\n  this.isReactNative = opts.isReactNative;\r\n\r\n  // other options for Node.js client\r\n  this.extraHeaders = opts.extraHeaders;\r\n  this.localAddress = opts.localAddress;\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Transport.prototype);\r\n\r\n/**\r\n * Emits an error.\r\n *\r\n * @param {String} str\r\n * @return {Transport} for chaining\r\n * @api public\r\n */\r\n\r\nTransport.prototype.onError = function (msg, desc) {\r\n  var err = new Error(msg);\r\n  err.type = 'TransportError';\r\n  err.description = desc;\r\n  this.emit('error', err);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Opens the transport.\r\n *\r\n * @api public\r\n */\r\n\r\nTransport.prototype.open = function () {\r\n  if ('closed' === this.readyState || '' === this.readyState) {\r\n    this.readyState = 'opening';\r\n    this.doOpen();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Closes the transport.\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.close = function () {\r\n  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n    this.doClose();\r\n    this.onClose();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends multiple packets.\r\n *\r\n * @param {Array} packets\r\n * @api private\r\n */\r\n\r\nTransport.prototype.send = function (packets) {\r\n  if ('open' === this.readyState) {\r\n    this.write(packets);\r\n  } else {\r\n    throw new Error('Transport not open');\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon open\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onOpen = function () {\r\n  this.readyState = 'open';\r\n  this.writable = true;\r\n  this.emit('open');\r\n};\r\n\r\n/**\r\n * Called with data.\r\n *\r\n * @param {String} data\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onData = function (data) {\r\n  var packet = parser.decodePacket(data, this.socket.binaryType);\r\n  this.onPacket(packet);\r\n};\r\n\r\n/**\r\n * Called with a decoded packet.\r\n */\r\n\r\nTransport.prototype.onPacket = function (packet) {\r\n  this.emit('packet', packet);\r\n};\r\n\r\n/**\r\n * Called upon close.\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onClose = function () {\r\n  this.readyState = 'closed';\r\n  this.emit('close');\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/transports/index.js\":\r\n/*!***************************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/transports/index.js ***!\r\n  \\***************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Module dependencies\r\n */\r\n\r\nvar XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\");\r\nvar XHR = __webpack_require__(/*! ./polling-xhr */ \"./node_modules/engine.io-client/lib/transports/polling-xhr.js\");\r\nvar JSONP = __webpack_require__(/*! ./polling-jsonp */ \"./node_modules/engine.io-client/lib/transports/polling-jsonp.js\");\r\nvar websocket = __webpack_require__(/*! ./websocket */ \"./node_modules/engine.io-client/lib/transports/websocket.js\");\r\n\r\n/**\r\n * Export transports.\r\n */\r\n\r\nexports.polling = polling;\r\nexports.websocket = websocket;\r\n\r\n/**\r\n * Polling transport polymorphic constructor.\r\n * Decides on xhr vs jsonp based on feature detection.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction polling (opts) {\r\n  var xhr;\r\n  var xd = false;\r\n  var xs = false;\r\n  var jsonp = false !== opts.jsonp;\r\n\r\n  if (typeof location !== 'undefined') {\r\n    var isSSL = 'https:' === location.protocol;\r\n    var port = location.port;\r\n\r\n    // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    xd = opts.hostname !== location.hostname || port !== opts.port;\r\n    xs = opts.secure !== isSSL;\r\n  }\r\n\r\n  opts.xdomain = xd;\r\n  opts.xscheme = xs;\r\n  xhr = new XMLHttpRequest(opts);\r\n\r\n  if ('open' in xhr && !opts.forceJSONP) {\r\n    return new XHR(opts);\r\n  } else {\r\n    if (!jsonp) throw new Error('JSONP disabled');\r\n    return new JSONP(opts);\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/transports/polling-jsonp.js\":\r\n/*!***********************************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/transports/polling-jsonp.js ***!\r\n  \\***********************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Module requirements.\r\n */\r\n\r\nvar Polling = __webpack_require__(/*! ./polling */ \"./node_modules/engine.io-client/lib/transports/polling.js\");\r\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\r\nvar globalThis = __webpack_require__(/*! ../globalThis */ \"./node_modules/engine.io-client/lib/globalThis.browser.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = JSONPPolling;\r\n\r\n/**\r\n * Cached regular expressions.\r\n */\r\n\r\nvar rNewline = /\\n/g;\r\nvar rEscapedNewline = /\\\\n/g;\r\n\r\n/**\r\n * Global JSONP callbacks.\r\n */\r\n\r\nvar callbacks;\r\n\r\n/**\r\n * Noop.\r\n */\r\n\r\nfunction empty () { }\r\n\r\n/**\r\n * JSONP Polling constructor.\r\n *\r\n * @param {Object} opts.\r\n * @api public\r\n */\r\n\r\nfunction JSONPPolling (opts) {\r\n  Polling.call(this, opts);\r\n\r\n  this.query = this.query || {};\r\n\r\n  // define global callbacks array if not present\r\n  // we do this here (lazily) to avoid unneeded global pollution\r\n  if (!callbacks) {\r\n    // we need to consider multiple engines in the same page\r\n    callbacks = globalThis.___eio = (globalThis.___eio || []);\r\n  }\r\n\r\n  // callback identifier\r\n  this.index = callbacks.length;\r\n\r\n  // add callback to jsonp global\r\n  var self = this;\r\n  callbacks.push(function (msg) {\r\n    self.onData(msg);\r\n  });\r\n\r\n  // append to query string\r\n  this.query.j = this.index;\r\n\r\n  // prevent spurious errors from being emitted when the window is unloaded\r\n  if (typeof addEventListener === 'function') {\r\n    addEventListener('beforeunload', function () {\r\n      if (self.script) self.script.onerror = empty;\r\n    }, false);\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r\n */\r\n\r\ninherit(JSONPPolling, Polling);\r\n\r\n/*\r\n * JSONP only supports binary as base64 encoded strings\r\n */\r\n\r\nJSONPPolling.prototype.supportsBinary = false;\r\n\r\n/**\r\n * Closes the socket.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doClose = function () {\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  if (this.form) {\r\n    this.form.parentNode.removeChild(this.form);\r\n    this.form = null;\r\n    this.iframe = null;\r\n  }\r\n\r\n  Polling.prototype.doClose.call(this);\r\n};\r\n\r\n/**\r\n * Starts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doPoll = function () {\r\n  var self = this;\r\n  var script = document.createElement('script');\r\n\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  script.async = true;\r\n  script.src = this.uri();\r\n  script.onerror = function (e) {\r\n    self.onError('jsonp poll error', e);\r\n  };\r\n\r\n  var insertAt = document.getElementsByTagName('script')[0];\r\n  if (insertAt) {\r\n    insertAt.parentNode.insertBefore(script, insertAt);\r\n  } else {\r\n    (document.head || document.body).appendChild(script);\r\n  }\r\n  this.script = script;\r\n\r\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\r\n\r\n  if (isUAgecko) {\r\n    setTimeout(function () {\r\n      var iframe = document.createElement('iframe');\r\n      document.body.appendChild(iframe);\r\n      document.body.removeChild(iframe);\r\n    }, 100);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes with a hidden iframe.\r\n *\r\n * @param {String} data to send\r\n * @param {Function} called upon flush.\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doWrite = function (data, fn) {\r\n  var self = this;\r\n\r\n  if (!this.form) {\r\n    var form = document.createElement('form');\r\n    var area = document.createElement('textarea');\r\n    var id = this.iframeId = 'eio_iframe_' + this.index;\r\n    var iframe;\r\n\r\n    form.className = 'socketio';\r\n    form.style.position = 'absolute';\r\n    form.style.top = '-1000px';\r\n    form.style.left = '-1000px';\r\n    form.target = id;\r\n    form.method = 'POST';\r\n    form.setAttribute('accept-charset', 'utf-8');\r\n    area.name = 'd';\r\n    form.appendChild(area);\r\n    document.body.appendChild(form);\r\n\r\n    this.form = form;\r\n    this.area = area;\r\n  }\r\n\r\n  this.form.action = this.uri();\r\n\r\n  function complete () {\r\n    initIframe();\r\n    fn();\r\n  }\r\n\r\n  function initIframe () {\r\n    if (self.iframe) {\r\n      try {\r\n        self.form.removeChild(self.iframe);\r\n      } catch (e) {\r\n        self.onError('jsonp polling iframe removal error', e);\r\n      }\r\n    }\r\n\r\n    try {\r\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\r\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\r\n      iframe = document.createElement(html);\r\n    } catch (e) {\r\n      iframe = document.createElement('iframe');\r\n      iframe.name = self.iframeId;\r\n      iframe.src = 'javascript:0';\r\n    }\r\n\r\n    iframe.id = self.iframeId;\r\n\r\n    self.form.appendChild(iframe);\r\n    self.iframe = iframe;\r\n  }\r\n\r\n  initIframe();\r\n\r\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\r\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\r\n  data = data.replace(rEscapedNewline, '\\\\\\n');\r\n  this.area.value = data.replace(rNewline, '\\\\n');\r\n\r\n  try {\r\n    this.form.submit();\r\n  } catch (e) {}\r\n\r\n  if (this.iframe.attachEvent) {\r\n    this.iframe.onreadystatechange = function () {\r\n      if (self.iframe.readyState === 'complete') {\r\n        complete();\r\n      }\r\n    };\r\n  } else {\r\n    this.iframe.onload = complete;\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/transports/polling-xhr.js\":\r\n/*!*********************************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/transports/polling-xhr.js ***!\r\n  \\*********************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/* global attachEvent */\r\n\r\n/**\r\n * Module requirements.\r\n */\r\n\r\nvar XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\");\r\nvar Polling = __webpack_require__(/*! ./polling */ \"./node_modules/engine.io-client/lib/transports/polling.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/engine.io-client/node_modules/component-emitter/index.js\");\r\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")('engine.io-client:polling-xhr');\r\nvar globalThis = __webpack_require__(/*! ../globalThis */ \"./node_modules/engine.io-client/lib/globalThis.browser.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = XHR;\r\nmodule.exports.Request = Request;\r\n\r\n/**\r\n * Empty function\r\n */\r\n\r\nfunction empty () {}\r\n\r\n/**\r\n * XHR Polling constructor.\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\n\r\nfunction XHR (opts) {\r\n  Polling.call(this, opts);\r\n  this.requestTimeout = opts.requestTimeout;\r\n  this.extraHeaders = opts.extraHeaders;\r\n\r\n  if (typeof location !== 'undefined') {\r\n    var isSSL = 'https:' === location.protocol;\r\n    var port = location.port;\r\n\r\n    // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\r\n      port !== opts.port;\r\n    this.xs = opts.secure !== isSSL;\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r\n */\r\n\r\ninherit(XHR, Polling);\r\n\r\n/**\r\n * XHR supports binary\r\n */\r\n\r\nXHR.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Creates a request.\r\n *\r\n * @param {String} method\r\n * @api private\r\n */\r\n\r\nXHR.prototype.request = function (opts) {\r\n  opts = opts || {};\r\n  opts.uri = this.uri();\r\n  opts.xd = this.xd;\r\n  opts.xs = this.xs;\r\n  opts.agent = this.agent || false;\r\n  opts.supportsBinary = this.supportsBinary;\r\n  opts.enablesXDR = this.enablesXDR;\r\n  opts.withCredentials = this.withCredentials;\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n  opts.requestTimeout = this.requestTimeout;\r\n\r\n  // other options for Node.js client\r\n  opts.extraHeaders = this.extraHeaders;\r\n\r\n  return new Request(opts);\r\n};\r\n\r\n/**\r\n * Sends data.\r\n *\r\n * @param {String} data to send.\r\n * @param {Function} called upon flush.\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doWrite = function (data, fn) {\r\n  var isBinary = typeof data !== 'string' && data !== undefined;\r\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\r\n  var self = this;\r\n  req.on('success', fn);\r\n  req.on('error', function (err) {\r\n    self.onError('xhr post error', err);\r\n  });\r\n  this.sendXhr = req;\r\n};\r\n\r\n/**\r\n * Starts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doPoll = function () {\r\n  debug('xhr poll');\r\n  var req = this.request();\r\n  var self = this;\r\n  req.on('data', function (data) {\r\n    self.onData(data);\r\n  });\r\n  req.on('error', function (err) {\r\n    self.onError('xhr poll error', err);\r\n  });\r\n  this.pollXhr = req;\r\n};\r\n\r\n/**\r\n * Request constructor\r\n *\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Request (opts) {\r\n  this.method = opts.method || 'GET';\r\n  this.uri = opts.uri;\r\n  this.xd = !!opts.xd;\r\n  this.xs = !!opts.xs;\r\n  this.async = false !== opts.async;\r\n  this.data = undefined !== opts.data ? opts.data : null;\r\n  this.agent = opts.agent;\r\n  this.isBinary = opts.isBinary;\r\n  this.supportsBinary = opts.supportsBinary;\r\n  this.enablesXDR = opts.enablesXDR;\r\n  this.withCredentials = opts.withCredentials;\r\n  this.requestTimeout = opts.requestTimeout;\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx;\r\n  this.key = opts.key;\r\n  this.passphrase = opts.passphrase;\r\n  this.cert = opts.cert;\r\n  this.ca = opts.ca;\r\n  this.ciphers = opts.ciphers;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n\r\n  // other options for Node.js client\r\n  this.extraHeaders = opts.extraHeaders;\r\n\r\n  this.create();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Request.prototype);\r\n\r\n/**\r\n * Creates the XHR object and sends the request.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.create = function () {\r\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\r\n  var xhr = this.xhr = new XMLHttpRequest(opts);\r\n  var self = this;\r\n\r\n  try {\r\n    debug('xhr open %s: %s', this.method, this.uri);\r\n    xhr.open(this.method, this.uri, this.async);\r\n    try {\r\n      if (this.extraHeaders) {\r\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n        for (var i in this.extraHeaders) {\r\n          if (this.extraHeaders.hasOwnProperty(i)) {\r\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {}\r\n\r\n    if ('POST' === this.method) {\r\n      try {\r\n        if (this.isBinary) {\r\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\r\n        } else {\r\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    try {\r\n      xhr.setRequestHeader('Accept', '*/*');\r\n    } catch (e) {}\r\n\r\n    // ie6 check\r\n    if ('withCredentials' in xhr) {\r\n      xhr.withCredentials = this.withCredentials;\r\n    }\r\n\r\n    if (this.requestTimeout) {\r\n      xhr.timeout = this.requestTimeout;\r\n    }\r\n\r\n    if (this.hasXDR()) {\r\n      xhr.onload = function () {\r\n        self.onLoad();\r\n      };\r\n      xhr.onerror = function () {\r\n        self.onError(xhr.responseText);\r\n      };\r\n    } else {\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 2) {\r\n          try {\r\n            var contentType = xhr.getResponseHeader('Content-Type');\r\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\r\n              xhr.responseType = 'arraybuffer';\r\n            }\r\n          } catch (e) {}\r\n        }\r\n        if (4 !== xhr.readyState) return;\r\n        if (200 === xhr.status || 1223 === xhr.status) {\r\n          self.onLoad();\r\n        } else {\r\n          // make sure the `error` event handler that's user-set\r\n          // does not throw in the same tick and gets caught here\r\n          setTimeout(function () {\r\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\r\n          }, 0);\r\n        }\r\n      };\r\n    }\r\n\r\n    debug('xhr data %s', this.data);\r\n    xhr.send(this.data);\r\n  } catch (e) {\r\n    // Need to defer since .create() is called directly fhrom the constructor\r\n    // and thus the 'error' event can only be only bound *after* this exception\r\n    // occurs.  Therefore, also, we cannot throw here at all.\r\n    setTimeout(function () {\r\n      self.onError(e);\r\n    }, 0);\r\n    return;\r\n  }\r\n\r\n  if (typeof document !== 'undefined') {\r\n    this.index = Request.requestsCount++;\r\n    Request.requests[this.index] = this;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful response.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onSuccess = function () {\r\n  this.emit('success');\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Called if we have data.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onData = function (data) {\r\n  this.emit('data', data);\r\n  this.onSuccess();\r\n};\r\n\r\n/**\r\n * Called upon error.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onError = function (err) {\r\n  this.emit('error', err);\r\n  this.cleanup(true);\r\n};\r\n\r\n/**\r\n * Cleans up house.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.cleanup = function (fromError) {\r\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\r\n    return;\r\n  }\r\n  // xmlhttprequest\r\n  if (this.hasXDR()) {\r\n    this.xhr.onload = this.xhr.onerror = empty;\r\n  } else {\r\n    this.xhr.onreadystatechange = empty;\r\n  }\r\n\r\n  if (fromError) {\r\n    try {\r\n      this.xhr.abort();\r\n    } catch (e) {}\r\n  }\r\n\r\n  if (typeof document !== 'undefined') {\r\n    delete Request.requests[this.index];\r\n  }\r\n\r\n  this.xhr = null;\r\n};\r\n\r\n/**\r\n * Called upon load.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onLoad = function () {\r\n  var data;\r\n  try {\r\n    var contentType;\r\n    try {\r\n      contentType = this.xhr.getResponseHeader('Content-Type');\r\n    } catch (e) {}\r\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\r\n      data = this.xhr.response || this.xhr.responseText;\r\n    } else {\r\n      data = this.xhr.responseText;\r\n    }\r\n  } catch (e) {\r\n    this.onError(e);\r\n  }\r\n  if (null != data) {\r\n    this.onData(data);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if it has XDomainRequest.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.hasXDR = function () {\r\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\r\n};\r\n\r\n/**\r\n * Aborts the request.\r\n *\r\n * @api public\r\n */\r\n\r\nRequest.prototype.abort = function () {\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\n\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n\r\nif (typeof document !== 'undefined') {\r\n  if (typeof attachEvent === 'function') {\r\n    attachEvent('onunload', unloadHandler);\r\n  } else if (typeof addEventListener === 'function') {\r\n    var terminationEvent = 'onpagehide' in globalThis ? 'pagehide' : 'unload';\r\n    addEventListener(terminationEvent, unloadHandler, false);\r\n  }\r\n}\r\n\r\nfunction unloadHandler () {\r\n  for (var i in Request.requests) {\r\n    if (Request.requests.hasOwnProperty(i)) {\r\n      Request.requests[i].abort();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/transports/polling.js\":\r\n/*!*****************************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/transports/polling.js ***!\r\n  \\*****************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = __webpack_require__(/*! ../transport */ \"./node_modules/engine.io-client/lib/transport.js\");\r\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\r\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\r\nvar yeast = __webpack_require__(/*! yeast */ \"./node_modules/yeast/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")('engine.io-client:polling');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Polling;\r\n\r\n/**\r\n * Is XHR2 supported?\r\n */\r\n\r\nvar hasXHR2 = (function () {\r\n  var XMLHttpRequest = __webpack_require__(/*! xmlhttprequest-ssl */ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\");\r\n  var xhr = new XMLHttpRequest({ xdomain: false });\r\n  return null != xhr.responseType;\r\n})();\r\n\r\n/**\r\n * Polling interface.\r\n *\r\n * @param {Object} opts\r\n * @api private\r\n */\r\n\r\nfunction Polling (opts) {\r\n  var forceBase64 = (opts && opts.forceBase64);\r\n  if (!hasXHR2 || forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(Polling, Transport);\r\n\r\n/**\r\n * Transport name.\r\n */\r\n\r\nPolling.prototype.name = 'polling';\r\n\r\n/**\r\n * Opens the socket (triggers polling). We write a PING message to determine\r\n * when the transport is open.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.doOpen = function () {\r\n  this.poll();\r\n};\r\n\r\n/**\r\n * Pauses polling.\r\n *\r\n * @param {Function} callback upon buffers are flushed and transport is paused\r\n * @api private\r\n */\r\n\r\nPolling.prototype.pause = function (onPause) {\r\n  var self = this;\r\n\r\n  this.readyState = 'pausing';\r\n\r\n  function pause () {\r\n    debug('paused');\r\n    self.readyState = 'paused';\r\n    onPause();\r\n  }\r\n\r\n  if (this.polling || !this.writable) {\r\n    var total = 0;\r\n\r\n    if (this.polling) {\r\n      debug('we are currently polling - waiting to pause');\r\n      total++;\r\n      this.once('pollComplete', function () {\r\n        debug('pre-pause polling complete');\r\n        --total || pause();\r\n      });\r\n    }\r\n\r\n    if (!this.writable) {\r\n      debug('we are currently writing - waiting to pause');\r\n      total++;\r\n      this.once('drain', function () {\r\n        debug('pre-pause writing complete');\r\n        --total || pause();\r\n      });\r\n    }\r\n  } else {\r\n    pause();\r\n  }\r\n};\r\n\r\n/**\r\n * Starts polling cycle.\r\n *\r\n * @api public\r\n */\r\n\r\nPolling.prototype.poll = function () {\r\n  debug('polling');\r\n  this.polling = true;\r\n  this.doPoll();\r\n  this.emit('poll');\r\n};\r\n\r\n/**\r\n * Overloads onData to detect payloads.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.onData = function (data) {\r\n  var self = this;\r\n  debug('polling got data %s', data);\r\n  var callback = function (packet, index, total) {\r\n    // if its the first message we consider the transport open\r\n    if ('opening' === self.readyState) {\r\n      self.onOpen();\r\n    }\r\n\r\n    // if its a close packet, we close the ongoing requests\r\n    if ('close' === packet.type) {\r\n      self.onClose();\r\n      return false;\r\n    }\r\n\r\n    // otherwise bypass onData and handle the message\r\n    self.onPacket(packet);\r\n  };\r\n\r\n  // decode payload\r\n  parser.decodePayload(data, this.socket.binaryType, callback);\r\n\r\n  // if an event did not trigger closing\r\n  if ('closed' !== this.readyState) {\r\n    // if we got data we're not polling\r\n    this.polling = false;\r\n    this.emit('pollComplete');\r\n\r\n    if ('open' === this.readyState) {\r\n      this.poll();\r\n    } else {\r\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * For polling, send a close packet.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.doClose = function () {\r\n  var self = this;\r\n\r\n  function close () {\r\n    debug('writing close packet');\r\n    self.write([{ type: 'close' }]);\r\n  }\r\n\r\n  if ('open' === this.readyState) {\r\n    debug('transport open - closing');\r\n    close();\r\n  } else {\r\n    // in case we're trying to close while\r\n    // handshaking is in progress (GH-164)\r\n    debug('transport not open - deferring close');\r\n    this.once('open', close);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes a packets payload.\r\n *\r\n * @param {Array} data packets\r\n * @param {Function} drain callback\r\n * @api private\r\n */\r\n\r\nPolling.prototype.write = function (packets) {\r\n  var self = this;\r\n  this.writable = false;\r\n  var callbackfn = function () {\r\n    self.writable = true;\r\n    self.emit('drain');\r\n  };\r\n\r\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\r\n    self.doWrite(data, callbackfn);\r\n  });\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.uri = function () {\r\n  var query = this.query || {};\r\n  var schema = this.secure ? 'https' : 'http';\r\n  var port = '';\r\n\r\n  // cache busting is forced\r\n  if (false !== this.timestampRequests) {\r\n    query[this.timestampParam] = yeast();\r\n  }\r\n\r\n  if (!this.supportsBinary && !query.sid) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // avoid port if default for schema\r\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\r\n     ('http' === schema && Number(this.port) !== 80))) {\r\n    port = ':' + this.port;\r\n  }\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/transports/websocket.js\":\r\n/*!*******************************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/transports/websocket.js ***!\r\n  \\*******************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/* WEBPACK VAR INJECTION */(function(Buffer) {/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = __webpack_require__(/*! ../transport */ \"./node_modules/engine.io-client/lib/transport.js\");\r\nvar parser = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/lib/browser.js\");\r\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\r\nvar inherit = __webpack_require__(/*! component-inherit */ \"./node_modules/component-inherit/index.js\");\r\nvar yeast = __webpack_require__(/*! yeast */ \"./node_modules/yeast/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")('engine.io-client:websocket');\r\n\r\nvar BrowserWebSocket, NodeWebSocket;\r\n\r\nif (typeof WebSocket !== 'undefined') {\r\n  BrowserWebSocket = WebSocket;\r\n} else if (typeof self !== 'undefined') {\r\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\r\n}\r\n\r\nif (typeof window === 'undefined') {\r\n  try {\r\n    NodeWebSocket = __webpack_require__(/*! ws */ 0);\r\n  } catch (e) { }\r\n}\r\n\r\n/**\r\n * Get either the `WebSocket` or `MozWebSocket` globals\r\n * in the browser or try to resolve WebSocket-compatible\r\n * interface exposed by `ws` for Node-like environment.\r\n */\r\n\r\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = WS;\r\n\r\n/**\r\n * WebSocket transport constructor.\r\n *\r\n * @api {Object} connection options\r\n * @api public\r\n */\r\n\r\nfunction WS (opts) {\r\n  var forceBase64 = (opts && opts.forceBase64);\r\n  if (forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  this.perMessageDeflate = opts.perMessageDeflate;\r\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\r\n  this.protocols = opts.protocols;\r\n  if (!this.usingBrowserWebSocket) {\r\n    WebSocketImpl = NodeWebSocket;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(WS, Transport);\r\n\r\n/**\r\n * Transport name.\r\n *\r\n * @api public\r\n */\r\n\r\nWS.prototype.name = 'websocket';\r\n\r\n/*\r\n * WebSockets support binary\r\n */\r\n\r\nWS.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Opens socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.doOpen = function () {\r\n  if (!this.check()) {\r\n    // let probe timeout\r\n    return;\r\n  }\r\n\r\n  var uri = this.uri();\r\n  var protocols = this.protocols;\r\n  var opts = {\r\n    agent: this.agent,\r\n    perMessageDeflate: this.perMessageDeflate\r\n  };\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n  if (this.extraHeaders) {\r\n    opts.headers = this.extraHeaders;\r\n  }\r\n  if (this.localAddress) {\r\n    opts.localAddress = this.localAddress;\r\n  }\r\n\r\n  try {\r\n    this.ws =\r\n      this.usingBrowserWebSocket && !this.isReactNative\r\n        ? protocols\r\n          ? new WebSocketImpl(uri, protocols)\r\n          : new WebSocketImpl(uri)\r\n        : new WebSocketImpl(uri, protocols, opts);\r\n  } catch (err) {\r\n    return this.emit('error', err);\r\n  }\r\n\r\n  if (this.ws.binaryType === undefined) {\r\n    this.supportsBinary = false;\r\n  }\r\n\r\n  if (this.ws.supports && this.ws.supports.binary) {\r\n    this.supportsBinary = true;\r\n    this.ws.binaryType = 'nodebuffer';\r\n  } else {\r\n    this.ws.binaryType = 'arraybuffer';\r\n  }\r\n\r\n  this.addEventListeners();\r\n};\r\n\r\n/**\r\n * Adds event listeners to the socket\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.addEventListeners = function () {\r\n  var self = this;\r\n\r\n  this.ws.onopen = function () {\r\n    self.onOpen();\r\n  };\r\n  this.ws.onclose = function () {\r\n    self.onClose();\r\n  };\r\n  this.ws.onmessage = function (ev) {\r\n    self.onData(ev.data);\r\n  };\r\n  this.ws.onerror = function (e) {\r\n    self.onError('websocket error', e);\r\n  };\r\n};\r\n\r\n/**\r\n * Writes data to socket.\r\n *\r\n * @param {Array} array of packets.\r\n * @api private\r\n */\r\n\r\nWS.prototype.write = function (packets) {\r\n  var self = this;\r\n  this.writable = false;\r\n\r\n  // encodePacket efficient as it uses WS framing\r\n  // no need for encodePayload\r\n  var total = packets.length;\r\n  for (var i = 0, l = total; i < l; i++) {\r\n    (function (packet) {\r\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\r\n        if (!self.usingBrowserWebSocket) {\r\n          // always create a new object (GH-437)\r\n          var opts = {};\r\n          if (packet.options) {\r\n            opts.compress = packet.options.compress;\r\n          }\r\n\r\n          if (self.perMessageDeflate) {\r\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\r\n            if (len < self.perMessageDeflate.threshold) {\r\n              opts.compress = false;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Sometimes the websocket has already been closed but the browser didn't\r\n        // have a chance of informing us about it yet, in that case send will\r\n        // throw an error\r\n        try {\r\n          if (self.usingBrowserWebSocket) {\r\n            // TypeError is thrown when passing the second argument on Safari\r\n            self.ws.send(data);\r\n          } else {\r\n            self.ws.send(data, opts);\r\n          }\r\n        } catch (e) {\r\n          debug('websocket closed before onclose event');\r\n        }\r\n\r\n        --total || done();\r\n      });\r\n    })(packets[i]);\r\n  }\r\n\r\n  function done () {\r\n    self.emit('flush');\r\n\r\n    // fake drain\r\n    // defer to next tick to allow Socket to clear writeBuffer\r\n    setTimeout(function () {\r\n      self.writable = true;\r\n      self.emit('drain');\r\n    }, 0);\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon close\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.onClose = function () {\r\n  Transport.prototype.onClose.call(this);\r\n};\r\n\r\n/**\r\n * Closes socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.doClose = function () {\r\n  if (typeof this.ws !== 'undefined') {\r\n    this.ws.close();\r\n  }\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.uri = function () {\r\n  var query = this.query || {};\r\n  var schema = this.secure ? 'wss' : 'ws';\r\n  var port = '';\r\n\r\n  // avoid port if default for schema\r\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\r\n    ('ws' === schema && Number(this.port) !== 80))) {\r\n    port = ':' + this.port;\r\n  }\r\n\r\n  // append timestamp to URI\r\n  if (this.timestampRequests) {\r\n    query[this.timestampParam] = yeast();\r\n  }\r\n\r\n  // communicate binary support capabilities\r\n  if (!this.supportsBinary) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\r\n};\r\n\r\n/**\r\n * Feature detection for WebSocket.\r\n *\r\n * @return {Boolean} whether this transport is available.\r\n * @api public\r\n */\r\n\r\nWS.prototype.check = function () {\r\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\r\n};\r\n\r\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/lib/xmlhttprequest.js\":\r\n/*!*************************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/lib/xmlhttprequest.js ***!\r\n  \\*************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n// browser shim for xmlhttprequest module\r\n\r\nvar hasCORS = __webpack_require__(/*! has-cors */ \"./node_modules/has-cors/index.js\");\r\nvar globalThis = __webpack_require__(/*! ./globalThis */ \"./node_modules/engine.io-client/lib/globalThis.browser.js\");\r\n\r\nmodule.exports = function (opts) {\r\n  var xdomain = opts.xdomain;\r\n\r\n  // scheme must be same when usign XDomainRequest\r\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\r\n  var xscheme = opts.xscheme;\r\n\r\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\r\n  // https://github.com/Automattic/engine.io-client/pull/217\r\n  var enablesXDR = opts.enablesXDR;\r\n\r\n  // XMLHttpRequest can be disabled on IE\r\n  try {\r\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  // Use XDomainRequest for IE8 if enablesXDR is true\r\n  // because loading bar keeps flashing when using jsonp-polling\r\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\r\n  try {\r\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\r\n      return new XDomainRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  if (!xdomain) {\r\n    try {\r\n      return new globalThis[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\r\n    } catch (e) { }\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-client/node_modules/component-emitter/index.js\":\r\n/*!*******************************************************************************!*\\\r\n  !*** ./node_modules/engine.io-client/node_modules/component-emitter/index.js ***!\r\n  \\*******************************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-parser/lib/browser.js\":\r\n/*!******************************************************!*\\\r\n  !*** ./node_modules/engine.io-parser/lib/browser.js ***!\r\n  \\******************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar keys = __webpack_require__(/*! ./keys */ \"./node_modules/engine.io-parser/lib/keys.js\");\r\nvar hasBinary = __webpack_require__(/*! has-binary2 */ \"./node_modules/has-binary2/index.js\");\r\nvar sliceBuffer = __webpack_require__(/*! arraybuffer.slice */ \"./node_modules/arraybuffer.slice/index.js\");\r\nvar after = __webpack_require__(/*! after */ \"./node_modules/after/index.js\");\r\nvar utf8 = __webpack_require__(/*! ./utf8 */ \"./node_modules/engine.io-parser/lib/utf8.js\");\r\n\r\nvar base64encoder;\r\nif (typeof ArrayBuffer !== 'undefined') {\r\n  base64encoder = __webpack_require__(/*! base64-arraybuffer */ \"./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js\");\r\n}\r\n\r\n/**\r\n * Check if we are running an android browser. That requires us to use\r\n * ArrayBuffer with polling transports...\r\n *\r\n * http://ghinda.net/jpeg-blob-ajax-android/\r\n */\r\n\r\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\r\n\r\n/**\r\n * Check if we are running in PhantomJS.\r\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\r\n * https://github.com/ariya/phantomjs/issues/11395\r\n * @type boolean\r\n */\r\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\r\n\r\n/**\r\n * When true, avoids using Blobs to encode payloads.\r\n * @type boolean\r\n */\r\nvar dontSendBlobs = isAndroid || isPhantomJS;\r\n\r\n/**\r\n * Current protocol version.\r\n */\r\n\r\nexports.protocol = 3;\r\n\r\n/**\r\n * Packet types.\r\n */\r\n\r\nvar packets = exports.packets = {\r\n    open:     0    // non-ws\r\n  , close:    1    // non-ws\r\n  , ping:     2\r\n  , pong:     3\r\n  , message:  4\r\n  , upgrade:  5\r\n  , noop:     6\r\n};\r\n\r\nvar packetslist = keys(packets);\r\n\r\n/**\r\n * Premade error packet.\r\n */\r\n\r\nvar err = { type: 'error', data: 'parser error' };\r\n\r\n/**\r\n * Create a blob api even for blob builder when vendor prefixes exist\r\n */\r\n\r\nvar Blob = __webpack_require__(/*! blob */ \"./node_modules/blob/index.js\");\r\n\r\n/**\r\n * Encodes a packet.\r\n *\r\n *     <packet type id> [ <data> ]\r\n *\r\n * Example:\r\n *\r\n *     5hello world\r\n *     3\r\n *     4\r\n *\r\n * Binary is encoded in an identical principle\r\n *\r\n * @api private\r\n */\r\n\r\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\r\n  if (typeof supportsBinary === 'function') {\r\n    callback = supportsBinary;\r\n    supportsBinary = false;\r\n  }\r\n\r\n  if (typeof utf8encode === 'function') {\r\n    callback = utf8encode;\r\n    utf8encode = null;\r\n  }\r\n\r\n  var data = (packet.data === undefined)\r\n    ? undefined\r\n    : packet.data.buffer || packet.data;\r\n\r\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\r\n    return encodeArrayBuffer(packet, supportsBinary, callback);\r\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\r\n    return encodeBlob(packet, supportsBinary, callback);\r\n  }\r\n\r\n  // might be an object with { base64: true, data: dataAsBase64String }\r\n  if (data && data.base64) {\r\n    return encodeBase64Object(packet, callback);\r\n  }\r\n\r\n  // Sending data as a utf-8 string\r\n  var encoded = packets[packet.type];\r\n\r\n  // data fragment is optional\r\n  if (undefined !== packet.data) {\r\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\r\n  }\r\n\r\n  return callback('' + encoded);\r\n\r\n};\r\n\r\nfunction encodeBase64Object(packet, callback) {\r\n  // packet data is an object { base64: true, data: dataAsBase64String }\r\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\r\n  return callback(message);\r\n}\r\n\r\n/**\r\n * Encode packet helpers for binary types\r\n */\r\n\r\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\r\n  if (!supportsBinary) {\r\n    return exports.encodeBase64Packet(packet, callback);\r\n  }\r\n\r\n  var data = packet.data;\r\n  var contentArray = new Uint8Array(data);\r\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\r\n\r\n  resultBuffer[0] = packets[packet.type];\r\n  for (var i = 0; i < contentArray.length; i++) {\r\n    resultBuffer[i+1] = contentArray[i];\r\n  }\r\n\r\n  return callback(resultBuffer.buffer);\r\n}\r\n\r\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\r\n  if (!supportsBinary) {\r\n    return exports.encodeBase64Packet(packet, callback);\r\n  }\r\n\r\n  var fr = new FileReader();\r\n  fr.onload = function() {\r\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\r\n  };\r\n  return fr.readAsArrayBuffer(packet.data);\r\n}\r\n\r\nfunction encodeBlob(packet, supportsBinary, callback) {\r\n  if (!supportsBinary) {\r\n    return exports.encodeBase64Packet(packet, callback);\r\n  }\r\n\r\n  if (dontSendBlobs) {\r\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\r\n  }\r\n\r\n  var length = new Uint8Array(1);\r\n  length[0] = packets[packet.type];\r\n  var blob = new Blob([length.buffer, packet.data]);\r\n\r\n  return callback(blob);\r\n}\r\n\r\n/**\r\n * Encodes a packet with binary data in a base64 string\r\n *\r\n * @param {Object} packet, has `type` and `data`\r\n * @return {String} base64 encoded message\r\n */\r\n\r\nexports.encodeBase64Packet = function(packet, callback) {\r\n  var message = 'b' + exports.packets[packet.type];\r\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\r\n    var fr = new FileReader();\r\n    fr.onload = function() {\r\n      var b64 = fr.result.split(',')[1];\r\n      callback(message + b64);\r\n    };\r\n    return fr.readAsDataURL(packet.data);\r\n  }\r\n\r\n  var b64data;\r\n  try {\r\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\r\n  } catch (e) {\r\n    // iPhone Safari doesn't let you apply with typed arrays\r\n    var typed = new Uint8Array(packet.data);\r\n    var basic = new Array(typed.length);\r\n    for (var i = 0; i < typed.length; i++) {\r\n      basic[i] = typed[i];\r\n    }\r\n    b64data = String.fromCharCode.apply(null, basic);\r\n  }\r\n  message += btoa(b64data);\r\n  return callback(message);\r\n};\r\n\r\n/**\r\n * Decodes a packet. Changes format to Blob if requested.\r\n *\r\n * @return {Object} with `type` and `data` (if any)\r\n * @api private\r\n */\r\n\r\nexports.decodePacket = function (data, binaryType, utf8decode) {\r\n  if (data === undefined) {\r\n    return err;\r\n  }\r\n  // String data\r\n  if (typeof data === 'string') {\r\n    if (data.charAt(0) === 'b') {\r\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\r\n    }\r\n\r\n    if (utf8decode) {\r\n      data = tryDecode(data);\r\n      if (data === false) {\r\n        return err;\r\n      }\r\n    }\r\n    var type = data.charAt(0);\r\n\r\n    if (Number(type) != type || !packetslist[type]) {\r\n      return err;\r\n    }\r\n\r\n    if (data.length > 1) {\r\n      return { type: packetslist[type], data: data.substring(1) };\r\n    } else {\r\n      return { type: packetslist[type] };\r\n    }\r\n  }\r\n\r\n  var asArray = new Uint8Array(data);\r\n  var type = asArray[0];\r\n  var rest = sliceBuffer(data, 1);\r\n  if (Blob && binaryType === 'blob') {\r\n    rest = new Blob([rest]);\r\n  }\r\n  return { type: packetslist[type], data: rest };\r\n};\r\n\r\nfunction tryDecode(data) {\r\n  try {\r\n    data = utf8.decode(data, { strict: false });\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return data;\r\n}\r\n\r\n/**\r\n * Decodes a packet encoded in a base64 string\r\n *\r\n * @param {String} base64 encoded message\r\n * @return {Object} with `type` and `data` (if any)\r\n */\r\n\r\nexports.decodeBase64Packet = function(msg, binaryType) {\r\n  var type = packetslist[msg.charAt(0)];\r\n  if (!base64encoder) {\r\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\r\n  }\r\n\r\n  var data = base64encoder.decode(msg.substr(1));\r\n\r\n  if (binaryType === 'blob' && Blob) {\r\n    data = new Blob([data]);\r\n  }\r\n\r\n  return { type: type, data: data };\r\n};\r\n\r\n/**\r\n * Encodes multiple messages (payload).\r\n *\r\n *     <length>:data\r\n *\r\n * Example:\r\n *\r\n *     11:hello world2:hi\r\n *\r\n * If any contents are binary, they will be encoded as base64 strings. Base64\r\n * encoded strings are marked with a b before the length specifier\r\n *\r\n * @param {Array} packets\r\n * @api private\r\n */\r\n\r\nexports.encodePayload = function (packets, supportsBinary, callback) {\r\n  if (typeof supportsBinary === 'function') {\r\n    callback = supportsBinary;\r\n    supportsBinary = null;\r\n  }\r\n\r\n  var isBinary = hasBinary(packets);\r\n\r\n  if (supportsBinary && isBinary) {\r\n    if (Blob && !dontSendBlobs) {\r\n      return exports.encodePayloadAsBlob(packets, callback);\r\n    }\r\n\r\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\r\n  }\r\n\r\n  if (!packets.length) {\r\n    return callback('0:');\r\n  }\r\n\r\n  function setLengthHeader(message) {\r\n    return message.length + ':' + message;\r\n  }\r\n\r\n  function encodeOne(packet, doneCallback) {\r\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\r\n      doneCallback(null, setLengthHeader(message));\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne, function(err, results) {\r\n    return callback(results.join(''));\r\n  });\r\n};\r\n\r\n/**\r\n * Async array map using after\r\n */\r\n\r\nfunction map(ary, each, done) {\r\n  var result = new Array(ary.length);\r\n  var next = after(ary.length, done);\r\n\r\n  var eachWithIndex = function(i, el, cb) {\r\n    each(el, function(error, msg) {\r\n      result[i] = msg;\r\n      cb(error, result);\r\n    });\r\n  };\r\n\r\n  for (var i = 0; i < ary.length; i++) {\r\n    eachWithIndex(i, ary[i], next);\r\n  }\r\n}\r\n\r\n/*\r\n * Decodes data when a payload is maybe expected. Possible binary contents are\r\n * decoded from their base64 representation\r\n *\r\n * @param {String} data, callback method\r\n * @api public\r\n */\r\n\r\nexports.decodePayload = function (data, binaryType, callback) {\r\n  if (typeof data !== 'string') {\r\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\r\n  }\r\n\r\n  if (typeof binaryType === 'function') {\r\n    callback = binaryType;\r\n    binaryType = null;\r\n  }\r\n\r\n  var packet;\r\n  if (data === '') {\r\n    // parser error - ignoring payload\r\n    return callback(err, 0, 1);\r\n  }\r\n\r\n  var length = '', n, msg;\r\n\r\n  for (var i = 0, l = data.length; i < l; i++) {\r\n    var chr = data.charAt(i);\r\n\r\n    if (chr !== ':') {\r\n      length += chr;\r\n      continue;\r\n    }\r\n\r\n    if (length === '' || (length != (n = Number(length)))) {\r\n      // parser error - ignoring payload\r\n      return callback(err, 0, 1);\r\n    }\r\n\r\n    msg = data.substr(i + 1, n);\r\n\r\n    if (length != msg.length) {\r\n      // parser error - ignoring payload\r\n      return callback(err, 0, 1);\r\n    }\r\n\r\n    if (msg.length) {\r\n      packet = exports.decodePacket(msg, binaryType, false);\r\n\r\n      if (err.type === packet.type && err.data === packet.data) {\r\n        // parser error in individual packet - ignoring payload\r\n        return callback(err, 0, 1);\r\n      }\r\n\r\n      var ret = callback(packet, i + n, l);\r\n      if (false === ret) return;\r\n    }\r\n\r\n    // advance cursor\r\n    i += n;\r\n    length = '';\r\n  }\r\n\r\n  if (length !== '') {\r\n    // parser error - ignoring payload\r\n    return callback(err, 0, 1);\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Encodes multiple messages (payload) as binary.\r\n *\r\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\r\n * 255><data>\r\n *\r\n * Example:\r\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\r\n *\r\n * @param {Array} packets\r\n * @return {ArrayBuffer} encoded payload\r\n * @api private\r\n */\r\n\r\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\r\n  if (!packets.length) {\r\n    return callback(new ArrayBuffer(0));\r\n  }\r\n\r\n  function encodeOne(packet, doneCallback) {\r\n    exports.encodePacket(packet, true, true, function(data) {\r\n      return doneCallback(null, data);\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne, function(err, encodedPackets) {\r\n    var totalLength = encodedPackets.reduce(function(acc, p) {\r\n      var len;\r\n      if (typeof p === 'string'){\r\n        len = p.length;\r\n      } else {\r\n        len = p.byteLength;\r\n      }\r\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\r\n    }, 0);\r\n\r\n    var resultArray = new Uint8Array(totalLength);\r\n\r\n    var bufferIndex = 0;\r\n    encodedPackets.forEach(function(p) {\r\n      var isString = typeof p === 'string';\r\n      var ab = p;\r\n      if (isString) {\r\n        var view = new Uint8Array(p.length);\r\n        for (var i = 0; i < p.length; i++) {\r\n          view[i] = p.charCodeAt(i);\r\n        }\r\n        ab = view.buffer;\r\n      }\r\n\r\n      if (isString) { // not true binary\r\n        resultArray[bufferIndex++] = 0;\r\n      } else { // true binary\r\n        resultArray[bufferIndex++] = 1;\r\n      }\r\n\r\n      var lenStr = ab.byteLength.toString();\r\n      for (var i = 0; i < lenStr.length; i++) {\r\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\r\n      }\r\n      resultArray[bufferIndex++] = 255;\r\n\r\n      var view = new Uint8Array(ab);\r\n      for (var i = 0; i < view.length; i++) {\r\n        resultArray[bufferIndex++] = view[i];\r\n      }\r\n    });\r\n\r\n    return callback(resultArray.buffer);\r\n  });\r\n};\r\n\r\n/**\r\n * Encode as Blob\r\n */\r\n\r\nexports.encodePayloadAsBlob = function(packets, callback) {\r\n  function encodeOne(packet, doneCallback) {\r\n    exports.encodePacket(packet, true, true, function(encoded) {\r\n      var binaryIdentifier = new Uint8Array(1);\r\n      binaryIdentifier[0] = 1;\r\n      if (typeof encoded === 'string') {\r\n        var view = new Uint8Array(encoded.length);\r\n        for (var i = 0; i < encoded.length; i++) {\r\n          view[i] = encoded.charCodeAt(i);\r\n        }\r\n        encoded = view.buffer;\r\n        binaryIdentifier[0] = 0;\r\n      }\r\n\r\n      var len = (encoded instanceof ArrayBuffer)\r\n        ? encoded.byteLength\r\n        : encoded.size;\r\n\r\n      var lenStr = len.toString();\r\n      var lengthAry = new Uint8Array(lenStr.length + 1);\r\n      for (var i = 0; i < lenStr.length; i++) {\r\n        lengthAry[i] = parseInt(lenStr[i]);\r\n      }\r\n      lengthAry[lenStr.length] = 255;\r\n\r\n      if (Blob) {\r\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\r\n        doneCallback(null, blob);\r\n      }\r\n    });\r\n  }\r\n\r\n  map(packets, encodeOne, function(err, results) {\r\n    return callback(new Blob(results));\r\n  });\r\n};\r\n\r\n/*\r\n * Decodes data when a payload is maybe expected. Strings are decoded by\r\n * interpreting each byte as a key code for entries marked to start with 0. See\r\n * description of encodePayloadAsBinary\r\n *\r\n * @param {ArrayBuffer} data, callback method\r\n * @api public\r\n */\r\n\r\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\r\n  if (typeof binaryType === 'function') {\r\n    callback = binaryType;\r\n    binaryType = null;\r\n  }\r\n\r\n  var bufferTail = data;\r\n  var buffers = [];\r\n\r\n  while (bufferTail.byteLength > 0) {\r\n    var tailArray = new Uint8Array(bufferTail);\r\n    var isString = tailArray[0] === 0;\r\n    var msgLength = '';\r\n\r\n    for (var i = 1; ; i++) {\r\n      if (tailArray[i] === 255) break;\r\n\r\n      // 310 = char length of Number.MAX_VALUE\r\n      if (msgLength.length > 310) {\r\n        return callback(err, 0, 1);\r\n      }\r\n\r\n      msgLength += tailArray[i];\r\n    }\r\n\r\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\r\n    msgLength = parseInt(msgLength);\r\n\r\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\r\n    if (isString) {\r\n      try {\r\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\r\n      } catch (e) {\r\n        // iPhone Safari doesn't let you apply to typed arrays\r\n        var typed = new Uint8Array(msg);\r\n        msg = '';\r\n        for (var i = 0; i < typed.length; i++) {\r\n          msg += String.fromCharCode(typed[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    buffers.push(msg);\r\n    bufferTail = sliceBuffer(bufferTail, msgLength);\r\n  }\r\n\r\n  var total = buffers.length;\r\n  buffers.forEach(function(buffer, i) {\r\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-parser/lib/keys.js\":\r\n/*!***************************************************!*\\\r\n  !*** ./node_modules/engine.io-parser/lib/keys.js ***!\r\n  \\***************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n\r\n/**\r\n * Gets the keys for an object.\r\n *\r\n * @return {Array} keys\r\n * @api private\r\n */\r\n\r\nmodule.exports = Object.keys || function keys (obj){\r\n  var arr = [];\r\n  var has = Object.prototype.hasOwnProperty;\r\n\r\n  for (var i in obj) {\r\n    if (has.call(obj, i)) {\r\n      arr.push(i);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/engine.io-parser/lib/utf8.js\":\r\n/*!***************************************************!*\\\r\n  !*** ./node_modules/engine.io-parser/lib/utf8.js ***!\r\n  \\***************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/*! https://mths.be/utf8js v2.1.2 by @mathias */\r\n\r\nvar stringFromCharCode = String.fromCharCode;\r\n\r\n// Taken from https://mths.be/punycode\r\nfunction ucs2decode(string) {\r\n\tvar output = [];\r\n\tvar counter = 0;\r\n\tvar length = string.length;\r\n\tvar value;\r\n\tvar extra;\r\n\twhile (counter < length) {\r\n\t\tvalue = string.charCodeAt(counter++);\r\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\r\n\t\t\t// high surrogate, and there is a next character\r\n\t\t\textra = string.charCodeAt(counter++);\r\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\r\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\r\n\t\t\t} else {\r\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\r\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\r\n\t\t\t\toutput.push(value);\r\n\t\t\t\tcounter--;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toutput.push(value);\r\n\t\t}\r\n\t}\r\n\treturn output;\r\n}\r\n\r\n// Taken from https://mths.be/punycode\r\nfunction ucs2encode(array) {\r\n\tvar length = array.length;\r\n\tvar index = -1;\r\n\tvar value;\r\n\tvar output = '';\r\n\twhile (++index < length) {\r\n\t\tvalue = array[index];\r\n\t\tif (value > 0xFFFF) {\r\n\t\t\tvalue -= 0x10000;\r\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\r\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\r\n\t\t}\r\n\t\toutput += stringFromCharCode(value);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction checkScalarValue(codePoint, strict) {\r\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\r\n\t\tif (strict) {\r\n\t\t\tthrow Error(\r\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\r\n\t\t\t\t' is not a scalar value'\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n/*--------------------------------------------------------------------------*/\r\n\r\nfunction createByte(codePoint, shift) {\r\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\r\n}\r\n\r\nfunction encodeCodePoint(codePoint, strict) {\r\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\r\n\t\treturn stringFromCharCode(codePoint);\r\n\t}\r\n\tvar symbol = '';\r\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\r\n\t}\r\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\r\n\t\tif (!checkScalarValue(codePoint, strict)) {\r\n\t\t\tcodePoint = 0xFFFD;\r\n\t\t}\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\r\n\t\tsymbol += createByte(codePoint, 6);\r\n\t}\r\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\r\n\t\tsymbol += createByte(codePoint, 12);\r\n\t\tsymbol += createByte(codePoint, 6);\r\n\t}\r\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\r\n\treturn symbol;\r\n}\r\n\r\nfunction utf8encode(string, opts) {\r\n\topts = opts || {};\r\n\tvar strict = false !== opts.strict;\r\n\r\n\tvar codePoints = ucs2decode(string);\r\n\tvar length = codePoints.length;\r\n\tvar index = -1;\r\n\tvar codePoint;\r\n\tvar byteString = '';\r\n\twhile (++index < length) {\r\n\t\tcodePoint = codePoints[index];\r\n\t\tbyteString += encodeCodePoint(codePoint, strict);\r\n\t}\r\n\treturn byteString;\r\n}\r\n\r\n/*--------------------------------------------------------------------------*/\r\n\r\nfunction readContinuationByte() {\r\n\tif (byteIndex >= byteCount) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\r\n\tbyteIndex++;\r\n\r\n\tif ((continuationByte & 0xC0) == 0x80) {\r\n\t\treturn continuationByte & 0x3F;\r\n\t}\r\n\r\n\t// If we end up here, it’s not a continuation byte\r\n\tthrow Error('Invalid continuation byte');\r\n}\r\n\r\nfunction decodeSymbol(strict) {\r\n\tvar byte1;\r\n\tvar byte2;\r\n\tvar byte3;\r\n\tvar byte4;\r\n\tvar codePoint;\r\n\r\n\tif (byteIndex > byteCount) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tif (byteIndex == byteCount) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Read first byte\r\n\tbyte1 = byteArray[byteIndex] & 0xFF;\r\n\tbyteIndex++;\r\n\r\n\t// 1-byte sequence (no continuation bytes)\r\n\tif ((byte1 & 0x80) == 0) {\r\n\t\treturn byte1;\r\n\t}\r\n\r\n\t// 2-byte sequence\r\n\tif ((byte1 & 0xE0) == 0xC0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\r\n\t\tif (codePoint >= 0x80) {\r\n\t\t\treturn codePoint;\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t}\r\n\t}\r\n\r\n\t// 3-byte sequence (may include unpaired surrogates)\r\n\tif ((byte1 & 0xF0) == 0xE0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tbyte3 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\r\n\t\tif (codePoint >= 0x0800) {\r\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t}\r\n\t}\r\n\r\n\t// 4-byte sequence\r\n\tif ((byte1 & 0xF8) == 0xF0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tbyte3 = readContinuationByte();\r\n\t\tbyte4 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\r\n\t\t\t(byte3 << 0x06) | byte4;\r\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\r\n\t\t\treturn codePoint;\r\n\t\t}\r\n\t}\r\n\r\n\tthrow Error('Invalid UTF-8 detected');\r\n}\r\n\r\nvar byteArray;\r\nvar byteCount;\r\nvar byteIndex;\r\nfunction utf8decode(byteString, opts) {\r\n\topts = opts || {};\r\n\tvar strict = false !== opts.strict;\r\n\r\n\tbyteArray = ucs2decode(byteString);\r\n\tbyteCount = byteArray.length;\r\n\tbyteIndex = 0;\r\n\tvar codePoints = [];\r\n\tvar tmp;\r\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\r\n\t\tcodePoints.push(tmp);\r\n\t}\r\n\treturn ucs2encode(codePoints);\r\n}\r\n\r\nmodule.exports = {\r\n\tversion: '2.1.2',\r\n\tencode: utf8encode,\r\n\tdecode: utf8decode\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/enum/dist/enum.js\":\r\n/*!****************************************!*\\\r\n  !*** ./node_modules/enum/dist/enum.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n/* WEBPACK VAR INJECTION */(function(global) {\r\n\r\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\r\n\r\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\r\n\r\nvar EnumItem = _interopRequire(__webpack_require__(/*! ./enumItem */ \"./node_modules/enum/dist/enumItem.js\"));\r\n\r\nvar isString = __webpack_require__(/*! ./isType */ \"./node_modules/enum/dist/isType.js\").isString;\r\n\r\nvar indexOf = __webpack_require__(/*! ./indexOf */ \"./node_modules/enum/dist/indexOf.js\").indexOf;\r\n\r\nvar isBuffer = _interopRequire(__webpack_require__(/*! is-buffer */ \"./node_modules/is-buffer/index.js\"));\r\n\r\nvar endianness = \"LE\"; // for react-native\r\n\r\n/**\r\n * Represents an Enum with enum items.\r\n * @param {Array || Object}  map     This are the enum items.\r\n * @param {String || Object} options This are options. [optional]\r\n */\r\n\r\nvar Enum = (function () {\r\n  function Enum(map, options) {\r\n    var _this = this;\r\n\r\n    _classCallCheck(this, Enum);\r\n\r\n    /* implement the \"ref type interface\", so that Enum types can\r\n     * be used in `node-ffi` function declarations and invokations.\r\n     * In C, these Enums act as `uint32_t` types.\r\n     *\r\n     * https://github.com/TooTallNate/ref#the-type-interface\r\n     */\r\n    this.size = 4;\r\n    this.indirection = 1;\r\n\r\n    if (options && isString(options)) {\r\n      options = { name: options };\r\n    }\r\n\r\n    this._options = options || {};\r\n    this._options.separator = this._options.separator || \" | \";\r\n    this._options.endianness = this._options.endianness || endianness;\r\n    this._options.ignoreCase = this._options.ignoreCase || false;\r\n    this._options.freez = this._options.freez || false;\r\n\r\n    this.enums = [];\r\n\r\n    if (map.length) {\r\n      this._enumLastIndex = map.length;\r\n      var array = map;\r\n      map = {};\r\n\r\n      for (var i = 0; i < array.length; i++) {\r\n        map[array[i]] = Math.pow(2, i);\r\n      }\r\n    }\r\n\r\n    for (var member in map) {\r\n      guardReservedKeys(this._options.name, member);\r\n      this[member] = new EnumItem(member, map[member], { ignoreCase: this._options.ignoreCase });\r\n      this.enums.push(this[member]);\r\n    }\r\n    this._enumMap = map;\r\n\r\n    if (this._options.ignoreCase) {\r\n      this.getLowerCaseEnums = function () {\r\n        var res = {};\r\n        for (var i = 0, len = this.enums.length; i < len; i++) {\r\n          res[this.enums[i].key.toLowerCase()] = this.enums[i];\r\n        }\r\n        return res;\r\n      };\r\n    }\r\n\r\n    if (this._options.name) {\r\n      this.name = this._options.name;\r\n    }\r\n\r\n    var isFlaggable = function () {\r\n      for (var i = 0, len = _this.enums.length; i < len; i++) {\r\n        var e = _this.enums[i];\r\n\r\n        if (!(e.value !== 0 && !(e.value & e.value - 1))) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n\r\n    this.isFlaggable = isFlaggable();\r\n    if (this._options.freez) {\r\n      this.freezeEnums(); //this will make instances of Enum non-extensible\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the appropriate EnumItem key.\r\n   * @param  {EnumItem || String || Number} key The object to get with.\r\n   * @return {String}                           The get result.\r\n   */\r\n\r\n  Enum.prototype.getKey = function getKey(value) {\r\n    var item = this.get(value);\r\n    if (item) {\r\n      return item.key;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the appropriate EnumItem value.\r\n   * @param  {EnumItem || String || Number} key The object to get with.\r\n   * @return {Number}                           The get result.\r\n   */\r\n\r\n  Enum.prototype.getValue = function getValue(key) {\r\n    var item = this.get(key);\r\n    if (item) {\r\n      return item.value;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the appropriate EnumItem.\r\n   * @param  {EnumItem || String || Number} key The object to get with.\r\n   * @return {EnumItem}                         The get result.\r\n   */\r\n\r\n  Enum.prototype.get = function get(key, offset) {\r\n    if (key === null || key === undefined) {\r\n      return;\r\n    } // Buffer instance support, part of the ref Type interface\r\n    if (isBuffer(key)) {\r\n      key = key[\"readUInt32\" + this._options.endianness](offset || 0);\r\n    }\r\n\r\n    if (EnumItem.isEnumItem(key)) {\r\n      var foundIndex = indexOf.call(this.enums, key);\r\n      if (foundIndex >= 0) {\r\n        return key;\r\n      }\r\n      if (!this.isFlaggable || this.isFlaggable && key.key.indexOf(this._options.separator) < 0) {\r\n        return;\r\n      }\r\n      return this.get(key.key);\r\n    } else if (isString(key)) {\r\n\r\n      var enums = this;\r\n      if (this._options.ignoreCase) {\r\n        enums = this.getLowerCaseEnums();\r\n        key = key.toLowerCase();\r\n      }\r\n\r\n      if (key.indexOf(this._options.separator) > 0) {\r\n        var parts = key.split(this._options.separator);\r\n\r\n        var value = 0;\r\n        for (var i = 0; i < parts.length; i++) {\r\n          var part = parts[i];\r\n\r\n          value |= enums[part].value;\r\n        }\r\n\r\n        return new EnumItem(key, value);\r\n      } else {\r\n        return enums[key];\r\n      }\r\n    } else {\r\n      for (var m in this) {\r\n        if (this.hasOwnProperty(m)) {\r\n          if (this[m].value === key) {\r\n            return this[m];\r\n          }\r\n        }\r\n      }\r\n\r\n      var result = null;\r\n\r\n      if (this.isFlaggable) {\r\n        for (var n in this) {\r\n          if (this.hasOwnProperty(n)) {\r\n            if ((key & this[n].value) !== 0) {\r\n              if (result) {\r\n                result += this._options.separator;\r\n              } else {\r\n                result = \"\";\r\n              }\r\n              result += n;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return this.get(result || null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets the Enum \"value\" onto the give `buffer` at the specified `offset`.\r\n   * Part of the ref \"Type interface\".\r\n   *\r\n   * @param  {Buffer} buffer The Buffer instance to write to.\r\n   * @param  {Number} offset The offset in the buffer to write to. Default 0.\r\n   * @param  {EnumItem || String || Number} value The EnumItem to write.\r\n   */\r\n\r\n  Enum.prototype.set = function set(buffer, offset, value) {\r\n    var item = this.get(value);\r\n    if (item) {\r\n      return buffer[\"writeUInt32\" + this._options.endianness](item.value, offset || 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Define freezeEnums() as a property of the prototype.\r\n   * make enumerable items nonconfigurable and deep freeze the properties. Throw Error on property setter.\r\n   */\r\n\r\n  Enum.prototype.freezeEnums = function freezeEnums() {\r\n    function envSupportsFreezing() {\r\n      return Object.isFrozen && Object.isSealed && Object.getOwnPropertyNames && Object.getOwnPropertyDescriptor && Object.defineProperties && Object.__defineGetter__ && Object.__defineSetter__;\r\n    }\r\n\r\n    function freezer(o) {\r\n      var props = Object.getOwnPropertyNames(o);\r\n      props.forEach(function (p) {\r\n        if (!Object.getOwnPropertyDescriptor(o, p).configurable) {\r\n          return;\r\n        }\r\n\r\n        Object.defineProperties(o, p, { writable: false, configurable: false });\r\n      });\r\n      return o;\r\n    }\r\n\r\n    function getPropertyValue(value) {\r\n      return value;\r\n    }\r\n\r\n    function deepFreezeEnums(o) {\r\n      if (typeof o !== \"object\" || o === null || Object.isFrozen(o) || Object.isSealed(o)) {\r\n        return;\r\n      }\r\n      for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n          o.__defineGetter__(key, getPropertyValue.bind(null, o[key]));\r\n          o.__defineSetter__(key, function throwPropertySetError(value) {\r\n            throw TypeError(\"Cannot redefine property; Enum Type is not extensible.\");\r\n          });\r\n          deepFreezeEnums(o[key]);\r\n        }\r\n      }\r\n      if (Object.freeze) {\r\n        Object.freeze(o);\r\n      } else {\r\n        freezer(o);\r\n      }\r\n    }\r\n\r\n    if (envSupportsFreezing()) {\r\n      deepFreezeEnums(this);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Returns JSON object representation of this Enum.\r\n   * @return {String} JSON object representation of this Enum.\r\n   */\r\n\r\n  Enum.prototype.toJSON = function toJSON() {\r\n    return this._enumMap;\r\n  };\r\n\r\n  /**\r\n   * Extends the existing Enum with a New Map.\r\n   * @param  {Array}  map  Map to extend from\r\n   */\r\n\r\n  Enum.prototype.extend = function extend(map) {\r\n    if (map.length) {\r\n      var array = map;\r\n      map = {};\r\n\r\n      for (var i = 0; i < array.length; i++) {\r\n        var exponent = this._enumLastIndex + i;\r\n        map[array[i]] = Math.pow(2, exponent);\r\n      }\r\n\r\n      for (var member in map) {\r\n        guardReservedKeys(this._options.name, member);\r\n        this[member] = new EnumItem(member, map[member], { ignoreCase: this._options.ignoreCase });\r\n        this.enums.push(this[member]);\r\n      }\r\n\r\n      for (var key in this._enumMap) {\r\n        map[key] = this._enumMap[key];\r\n      }\r\n\r\n      this._enumLastIndex += map.length;\r\n      this._enumMap = map;\r\n\r\n      if (this._options.freez) {\r\n        this.freezeEnums(); //this will make instances of new Enum non-extensible\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Registers the Enum Type globally in node.js.\r\n   * @param  {String} key Global variable. [optional]\r\n   */\r\n\r\n  Enum.register = function register() {\r\n    var key = arguments[0] === undefined ? \"Enum\" : arguments[0];\r\n\r\n    if (!global[key]) {\r\n      global[key] = Enum;\r\n    }\r\n  };\r\n\r\n  return Enum;\r\n})();\r\n\r\nmodule.exports = Enum;\r\n\r\n// private\r\n\r\nvar reservedKeys = [\"_options\", \"get\", \"getKey\", \"getValue\", \"enums\", \"isFlaggable\", \"_enumMap\", \"toJSON\", \"_enumLastIndex\"];\r\n\r\nfunction guardReservedKeys(customName, key) {\r\n  if (customName && key === \"name\" || indexOf.call(reservedKeys, key) >= 0) {\r\n    throw new Error(\"Enum key \" + key + \" is a reserved word!\");\r\n  }\r\n}\r\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/enum/dist/enumItem.js\":\r\n/*!********************************************!*\\\r\n  !*** ./node_modules/enum/dist/enumItem.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\r\n\r\nvar _isType = __webpack_require__(/*! ./isType */ \"./node_modules/enum/dist/isType.js\");\r\n\r\nvar isObject = _isType.isObject;\r\nvar isString = _isType.isString;\r\n\r\n/**\r\n * Represents an Item of an Enum.\r\n * @param {String} key   The Enum key.\r\n * @param {Number} value The Enum value.\r\n */\r\n\r\nvar EnumItem = (function () {\r\n\r\n  /*constructor reference so that, this.constructor===EnumItem//=>true */\r\n\r\n  function EnumItem(key, value) {\r\n    var options = arguments[2] === undefined ? {} : arguments[2];\r\n\r\n    _classCallCheck(this, EnumItem);\r\n\r\n    this.key = key;\r\n    this.value = value;\r\n\r\n    this._options = options;\r\n    this._options.ignoreCase = this._options.ignoreCase || false;\r\n  }\r\n\r\n  /**\r\n   * Checks if the flagged EnumItem has the passing object.\r\n   * @param  {EnumItem || String || Number} value The object to check with.\r\n   * @return {Boolean}                            The check result.\r\n   */\r\n\r\n  EnumItem.prototype.has = function has(value) {\r\n    if (EnumItem.isEnumItem(value)) {\r\n      return (this.value & value.value) !== 0;\r\n    } else if (isString(value)) {\r\n      if (this._options.ignoreCase) {\r\n        return this.key.toLowerCase().indexOf(value.toLowerCase()) >= 0;\r\n      }\r\n      return this.key.indexOf(value) >= 0;\r\n    } else {\r\n      return (this.value & value) !== 0;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Checks if the EnumItem is the same as the passing object.\r\n   * @param  {EnumItem || String || Number} key The object to check with.\r\n   * @return {Boolean}                          The check result.\r\n   */\r\n\r\n  EnumItem.prototype.is = function is(key) {\r\n    if (EnumItem.isEnumItem(key)) {\r\n      return this.key === key.key;\r\n    } else if (isString(key)) {\r\n      if (this._options.ignoreCase) {\r\n        return this.key.toLowerCase() === key.toLowerCase();\r\n      }\r\n      return this.key === key;\r\n    } else {\r\n      return this.value === key;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns String representation of this EnumItem.\r\n   * @return {String} String representation of this EnumItem.\r\n   */\r\n\r\n  EnumItem.prototype.toString = function toString() {\r\n    return this.key;\r\n  };\r\n\r\n  /**\r\n   * Returns JSON object representation of this EnumItem.\r\n   * @return {String} JSON object representation of this EnumItem.\r\n   */\r\n\r\n  EnumItem.prototype.toJSON = function toJSON() {\r\n    return this.key;\r\n  };\r\n\r\n  /**\r\n   * Returns the value to compare with.\r\n   * @return {String} The value to compare with.\r\n   */\r\n\r\n  EnumItem.prototype.valueOf = function valueOf() {\r\n    return this.value;\r\n  };\r\n\r\n  EnumItem.isEnumItem = function isEnumItem(value) {\r\n    return value instanceof EnumItem || isObject(value) && value.key !== undefined && value.value !== undefined;\r\n  };\r\n\r\n  return EnumItem;\r\n})();\r\n\r\nmodule.exports = EnumItem;\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/enum/dist/indexOf.js\":\r\n/*!*******************************************!*\\\r\n  !*** ./node_modules/enum/dist/indexOf.js ***!\r\n  \\*******************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nexports.__esModule = true;\r\nvar indexOf = Array.prototype.indexOf || function (find, i /*opt*/) {\r\n  if (i === undefined) i = 0;\r\n  if (i < 0) i += this.length;\r\n  if (i < 0) i = 0;\r\n  for (var n = this.length; i < n; i++) if (i in this && this[i] === find) return i;\r\n  return -1;\r\n};\r\nexports.indexOf = indexOf;\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/enum/dist/isType.js\":\r\n/*!******************************************!*\\\r\n  !*** ./node_modules/enum/dist/isType.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nexports.__esModule = true;\r\nvar isType = function (type, value) {\r\n  return typeof value === type;\r\n};\r\nexports.isType = isType;\r\nvar isObject = function (value) {\r\n  return isType(\"object\", value);\r\n};\r\nexports.isObject = isObject;\r\nvar isString = function (value) {\r\n  return isType(\"string\", value);\r\n};\r\nexports.isString = isString;\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/enum/index.js\":\r\n/*!************************************!*\\\r\n  !*** ./node_modules/enum/index.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./dist/enum */ \"./node_modules/enum/dist/enum.js\");\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/events/events.js\":\r\n/*!***************************************!*\\\r\n  !*** ./node_modules/events/events.js ***!\r\n  \\***************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n\r\nvar R = typeof Reflect === 'object' ? Reflect : null\r\nvar ReflectApply = R && typeof R.apply === 'function'\r\n  ? R.apply\r\n  : function ReflectApply(target, receiver, args) {\r\n    return Function.prototype.apply.call(target, receiver, args);\r\n  }\r\n\r\nvar ReflectOwnKeys\r\nif (R && typeof R.ownKeys === 'function') {\r\n  ReflectOwnKeys = R.ownKeys\r\n} else if (Object.getOwnPropertySymbols) {\r\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\r\n    return Object.getOwnPropertyNames(target)\r\n      .concat(Object.getOwnPropertySymbols(target));\r\n  };\r\n} else {\r\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\r\n    return Object.getOwnPropertyNames(target);\r\n  };\r\n}\r\n\r\nfunction ProcessEmitWarning(warning) {\r\n  if (console && console.warn) console.warn(warning);\r\n}\r\n\r\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\r\n  return value !== value;\r\n}\r\n\r\nfunction EventEmitter() {\r\n  EventEmitter.init.call(this);\r\n}\r\nmodule.exports = EventEmitter;\r\n\r\n// Backwards-compat with node 0.10.x\r\nEventEmitter.EventEmitter = EventEmitter;\r\n\r\nEventEmitter.prototype._events = undefined;\r\nEventEmitter.prototype._eventsCount = 0;\r\nEventEmitter.prototype._maxListeners = undefined;\r\n\r\n// By default EventEmitters will print a warning if more than 10 listeners are\r\n// added to it. This is a useful default which helps finding memory leaks.\r\nvar defaultMaxListeners = 10;\r\n\r\nfunction checkListener(listener) {\r\n  if (typeof listener !== 'function') {\r\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\r\n  }\r\n}\r\n\r\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\r\n  enumerable: true,\r\n  get: function() {\r\n    return defaultMaxListeners;\r\n  },\r\n  set: function(arg) {\r\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\r\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\r\n    }\r\n    defaultMaxListeners = arg;\r\n  }\r\n});\r\n\r\nEventEmitter.init = function() {\r\n\r\n  if (this._events === undefined ||\r\n      this._events === Object.getPrototypeOf(this)._events) {\r\n    this._events = Object.create(null);\r\n    this._eventsCount = 0;\r\n  }\r\n\r\n  this._maxListeners = this._maxListeners || undefined;\r\n};\r\n\r\n// Obviously not all Emitters should be limited to 10. This function allows\r\n// that to be increased. Set to zero for unlimited.\r\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\r\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\r\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\r\n  }\r\n  this._maxListeners = n;\r\n  return this;\r\n};\r\n\r\nfunction _getMaxListeners(that) {\r\n  if (that._maxListeners === undefined)\r\n    return EventEmitter.defaultMaxListeners;\r\n  return that._maxListeners;\r\n}\r\n\r\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\r\n  return _getMaxListeners(this);\r\n};\r\n\r\nEventEmitter.prototype.emit = function emit(type) {\r\n  var args = [];\r\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\r\n  var doError = (type === 'error');\r\n\r\n  var events = this._events;\r\n  if (events !== undefined)\r\n    doError = (doError && events.error === undefined);\r\n  else if (!doError)\r\n    return false;\r\n\r\n  // If there is no 'error' event listener then throw.\r\n  if (doError) {\r\n    var er;\r\n    if (args.length > 0)\r\n      er = args[0];\r\n    if (er instanceof Error) {\r\n      // Note: The comments on the `throw` lines are intentional, they show\r\n      // up in Node's output if this results in an unhandled exception.\r\n      throw er; // Unhandled 'error' event\r\n    }\r\n    // At least give some kind of context to the user\r\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\r\n    err.context = er;\r\n    throw err; // Unhandled 'error' event\r\n  }\r\n\r\n  var handler = events[type];\r\n\r\n  if (handler === undefined)\r\n    return false;\r\n\r\n  if (typeof handler === 'function') {\r\n    ReflectApply(handler, this, args);\r\n  } else {\r\n    var len = handler.length;\r\n    var listeners = arrayClone(handler, len);\r\n    for (var i = 0; i < len; ++i)\r\n      ReflectApply(listeners[i], this, args);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction _addListener(target, type, listener, prepend) {\r\n  var m;\r\n  var events;\r\n  var existing;\r\n\r\n  checkListener(listener);\r\n\r\n  events = target._events;\r\n  if (events === undefined) {\r\n    events = target._events = Object.create(null);\r\n    target._eventsCount = 0;\r\n  } else {\r\n    // To avoid recursion in the case that type === \"newListener\"! Before\r\n    // adding it to the listeners, first emit \"newListener\".\r\n    if (events.newListener !== undefined) {\r\n      target.emit('newListener', type,\r\n                  listener.listener ? listener.listener : listener);\r\n\r\n      // Re-assign `events` because a newListener handler could have caused the\r\n      // this._events to be assigned to a new object\r\n      events = target._events;\r\n    }\r\n    existing = events[type];\r\n  }\r\n\r\n  if (existing === undefined) {\r\n    // Optimize the case of one listener. Don't need the extra array object.\r\n    existing = events[type] = listener;\r\n    ++target._eventsCount;\r\n  } else {\r\n    if (typeof existing === 'function') {\r\n      // Adding the second element, need to change to array.\r\n      existing = events[type] =\r\n        prepend ? [listener, existing] : [existing, listener];\r\n      // If we've already got an array, just append.\r\n    } else if (prepend) {\r\n      existing.unshift(listener);\r\n    } else {\r\n      existing.push(listener);\r\n    }\r\n\r\n    // Check for listener leak\r\n    m = _getMaxListeners(target);\r\n    if (m > 0 && existing.length > m && !existing.warned) {\r\n      existing.warned = true;\r\n      // No error code for this since it is a Warning\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\r\n                          existing.length + ' ' + String(type) + ' listeners ' +\r\n                          'added. Use emitter.setMaxListeners() to ' +\r\n                          'increase limit');\r\n      w.name = 'MaxListenersExceededWarning';\r\n      w.emitter = target;\r\n      w.type = type;\r\n      w.count = existing.length;\r\n      ProcessEmitWarning(w);\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nEventEmitter.prototype.addListener = function addListener(type, listener) {\r\n  return _addListener(this, type, listener, false);\r\n};\r\n\r\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\r\n\r\nEventEmitter.prototype.prependListener =\r\n    function prependListener(type, listener) {\r\n      return _addListener(this, type, listener, true);\r\n    };\r\n\r\nfunction onceWrapper() {\r\n  if (!this.fired) {\r\n    this.target.removeListener(this.type, this.wrapFn);\r\n    this.fired = true;\r\n    if (arguments.length === 0)\r\n      return this.listener.call(this.target);\r\n    return this.listener.apply(this.target, arguments);\r\n  }\r\n}\r\n\r\nfunction _onceWrap(target, type, listener) {\r\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\r\n  var wrapped = onceWrapper.bind(state);\r\n  wrapped.listener = listener;\r\n  state.wrapFn = wrapped;\r\n  return wrapped;\r\n}\r\n\r\nEventEmitter.prototype.once = function once(type, listener) {\r\n  checkListener(listener);\r\n  this.on(type, _onceWrap(this, type, listener));\r\n  return this;\r\n};\r\n\r\nEventEmitter.prototype.prependOnceListener =\r\n    function prependOnceListener(type, listener) {\r\n      checkListener(listener);\r\n      this.prependListener(type, _onceWrap(this, type, listener));\r\n      return this;\r\n    };\r\n\r\n// Emits a 'removeListener' event if and only if the listener was removed.\r\nEventEmitter.prototype.removeListener =\r\n    function removeListener(type, listener) {\r\n      var list, events, position, i, originalListener;\r\n\r\n      checkListener(listener);\r\n\r\n      events = this._events;\r\n      if (events === undefined)\r\n        return this;\r\n\r\n      list = events[type];\r\n      if (list === undefined)\r\n        return this;\r\n\r\n      if (list === listener || list.listener === listener) {\r\n        if (--this._eventsCount === 0)\r\n          this._events = Object.create(null);\r\n        else {\r\n          delete events[type];\r\n          if (events.removeListener)\r\n            this.emit('removeListener', type, list.listener || listener);\r\n        }\r\n      } else if (typeof list !== 'function') {\r\n        position = -1;\r\n\r\n        for (i = list.length - 1; i >= 0; i--) {\r\n          if (list[i] === listener || list[i].listener === listener) {\r\n            originalListener = list[i].listener;\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0)\r\n          return this;\r\n\r\n        if (position === 0)\r\n          list.shift();\r\n        else {\r\n          spliceOne(list, position);\r\n        }\r\n\r\n        if (list.length === 1)\r\n          events[type] = list[0];\r\n\r\n        if (events.removeListener !== undefined)\r\n          this.emit('removeListener', type, originalListener || listener);\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\r\n\r\nEventEmitter.prototype.removeAllListeners =\r\n    function removeAllListeners(type) {\r\n      var listeners, events, i;\r\n\r\n      events = this._events;\r\n      if (events === undefined)\r\n        return this;\r\n\r\n      // not listening for removeListener, no need to emit\r\n      if (events.removeListener === undefined) {\r\n        if (arguments.length === 0) {\r\n          this._events = Object.create(null);\r\n          this._eventsCount = 0;\r\n        } else if (events[type] !== undefined) {\r\n          if (--this._eventsCount === 0)\r\n            this._events = Object.create(null);\r\n          else\r\n            delete events[type];\r\n        }\r\n        return this;\r\n      }\r\n\r\n      // emit removeListener for all listeners on all events\r\n      if (arguments.length === 0) {\r\n        var keys = Object.keys(events);\r\n        var key;\r\n        for (i = 0; i < keys.length; ++i) {\r\n          key = keys[i];\r\n          if (key === 'removeListener') continue;\r\n          this.removeAllListeners(key);\r\n        }\r\n        this.removeAllListeners('removeListener');\r\n        this._events = Object.create(null);\r\n        this._eventsCount = 0;\r\n        return this;\r\n      }\r\n\r\n      listeners = events[type];\r\n\r\n      if (typeof listeners === 'function') {\r\n        this.removeListener(type, listeners);\r\n      } else if (listeners !== undefined) {\r\n        // LIFO order\r\n        for (i = listeners.length - 1; i >= 0; i--) {\r\n          this.removeListener(type, listeners[i]);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    };\r\n\r\nfunction _listeners(target, type, unwrap) {\r\n  var events = target._events;\r\n\r\n  if (events === undefined)\r\n    return [];\r\n\r\n  var evlistener = events[type];\r\n  if (evlistener === undefined)\r\n    return [];\r\n\r\n  if (typeof evlistener === 'function')\r\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\r\n\r\n  return unwrap ?\r\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\r\n}\r\n\r\nEventEmitter.prototype.listeners = function listeners(type) {\r\n  return _listeners(this, type, true);\r\n};\r\n\r\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\r\n  return _listeners(this, type, false);\r\n};\r\n\r\nEventEmitter.listenerCount = function(emitter, type) {\r\n  if (typeof emitter.listenerCount === 'function') {\r\n    return emitter.listenerCount(type);\r\n  } else {\r\n    return listenerCount.call(emitter, type);\r\n  }\r\n};\r\n\r\nEventEmitter.prototype.listenerCount = listenerCount;\r\nfunction listenerCount(type) {\r\n  var events = this._events;\r\n\r\n  if (events !== undefined) {\r\n    var evlistener = events[type];\r\n\r\n    if (typeof evlistener === 'function') {\r\n      return 1;\r\n    } else if (evlistener !== undefined) {\r\n      return evlistener.length;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nEventEmitter.prototype.eventNames = function eventNames() {\r\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\r\n};\r\n\r\nfunction arrayClone(arr, n) {\r\n  var copy = new Array(n);\r\n  for (var i = 0; i < n; ++i)\r\n    copy[i] = arr[i];\r\n  return copy;\r\n}\r\n\r\nfunction spliceOne(list, index) {\r\n  for (; index + 1 < list.length; index++)\r\n    list[index] = list[index + 1];\r\n  list.pop();\r\n}\r\n\r\nfunction unwrapListeners(arr) {\r\n  var ret = new Array(arr.length);\r\n  for (var i = 0; i < ret.length; ++i) {\r\n    ret[i] = arr[i].listener || arr[i];\r\n  }\r\n  return ret;\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/has-binary2/index.js\":\r\n/*!*******************************************!*\\\r\n  !*** ./node_modules/has-binary2/index.js ***!\r\n  \\*******************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* global Blob File */\r\n\r\n/*\r\n * Module requirements.\r\n */\r\n\r\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\r\n\r\nvar toString = Object.prototype.toString;\r\nvar withNativeBlob = typeof Blob === 'function' ||\r\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\r\nvar withNativeFile = typeof File === 'function' ||\r\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = hasBinary;\r\n\r\n/**\r\n * Checks for binary data.\r\n *\r\n * Supports Buffer, ArrayBuffer, Blob and File.\r\n *\r\n * @param {Object} anything\r\n * @api public\r\n */\r\n\r\nfunction hasBinary (obj) {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      if (hasBinary(obj[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\r\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\r\n    (withNativeBlob && obj instanceof Blob) ||\r\n    (withNativeFile && obj instanceof File)\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  // see: https://github.com/Automattic/has-binary/pull/4\r\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\r\n    return hasBinary(obj.toJSON(), true);\r\n  }\r\n\r\n  for (var key in obj) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/has-cors/index.js\":\r\n/*!****************************************!*\\\r\n  !*** ./node_modules/has-cors/index.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n\r\n/**\r\n * Module exports.\r\n *\r\n * Logic borrowed from Modernizr:\r\n *\r\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\r\n */\r\n\r\ntry {\r\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\r\n    'withCredentials' in new XMLHttpRequest();\r\n} catch (err) {\r\n  // if XMLHttp support is disabled in IE then it will throw\r\n  // when trying to create\r\n  module.exports = false;\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/ieee754/index.js\":\r\n/*!***************************************!*\\\r\n  !*** ./node_modules/ieee754/index.js ***!\r\n  \\***************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var nBits = -7\r\n  var i = isLE ? (nBytes - 1) : 0\r\n  var d = isLE ? -1 : 1\r\n  var s = buffer[offset + i]\r\n\r\n  i += d\r\n\r\n  e = s & ((1 << (-nBits)) - 1)\r\n  s >>= (-nBits)\r\n  nBits += eLen\r\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1)\r\n  e >>= (-nBits)\r\n  nBits += mLen\r\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen)\r\n    e = e - eBias\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\r\n  var i = isLE ? 0 : (nBytes - 1)\r\n  var d = isLE ? 1 : -1\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\r\n\r\n  value = Math.abs(value)\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0\r\n    e = eMax\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2)\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--\r\n      c *= 2\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias)\r\n    }\r\n    if (value * c >= 2) {\r\n      e++\r\n      c /= 2\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0\r\n      e = eMax\r\n    } else if (e + eBias >= 1) {\r\n      m = ((value * c) - 1) * Math.pow(2, mLen)\r\n      e = e + eBias\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\r\n      e = 0\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m\r\n  eLen += mLen\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/indexof/index.js\":\r\n/*!***************************************!*\\\r\n  !*** ./node_modules/indexof/index.js ***!\r\n  \\***************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n\r\nvar indexOf = [].indexOf;\r\n\r\nmodule.exports = function(arr, obj){\r\n  if (indexOf) return arr.indexOf(obj);\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) return i;\r\n  }\r\n  return -1;\r\n};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/is-buffer/index.js\":\r\n/*!*****************************************!*\\\r\n  !*** ./node_modules/is-buffer/index.js ***!\r\n  \\*****************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/*!\r\n * Determine if an object is a Buffer\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n\r\n// The _isBuffer check is for Safari 5-7 support, because it's missing\r\n// Object.prototype.constructor. Remove this eventually\r\nmodule.exports = function (obj) {\r\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\r\n}\r\n\r\nfunction isBuffer (obj) {\r\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\r\n}\r\n\r\n// For Node v0.10 support. Remove this eventually.\r\nfunction isSlowBuffer (obj) {\r\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/isarray/index.js\":\r\n/*!***************************************!*\\\r\n  !*** ./node_modules/isarray/index.js ***!\r\n  \\***************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nvar toString = {}.toString;\r\n\r\nmodule.exports = Array.isArray || function (arr) {\r\n  return toString.call(arr) == '[object Array]';\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/js-binarypack/lib/binarypack.js\":\r\n/*!******************************************************!*\\\r\n  !*** ./node_modules/js-binarypack/lib/binarypack.js ***!\r\n  \\******************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar BufferBuilder = __webpack_require__(/*! ./bufferbuilder */ \"./node_modules/js-binarypack/lib/bufferbuilder.js\").BufferBuilder;\r\nvar binaryFeatures = __webpack_require__(/*! ./bufferbuilder */ \"./node_modules/js-binarypack/lib/bufferbuilder.js\").binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function(data){\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function(data){\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data){\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function(){\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80){\r\n    var positive_fixnum = type;\r\n    return positive_fixnum;\r\n  } else if ((type ^ 0xe0) < 0x20){\r\n    var negative_fixnum = (type ^ 0xe0) - 0x20;\r\n    return negative_fixnum;\r\n  }\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f){\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f){\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f){\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f){\r\n    return this.unpack_map(size);\r\n  }\r\n  switch(type){\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n}\r\n\r\nUnpacker.prototype.unpack_uint8 = function(){\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function(){\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n}\r\n\r\nUnpacker.prototype.unpack_uint32 = function(){\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n     ((bytes[0]  * 256 +\r\n       bytes[1]) * 256 +\r\n       bytes[2]) * 256 +\r\n       bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n}\r\n\r\nUnpacker.prototype.unpack_uint64 = function(){\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n   ((((((bytes[0]  * 256 +\r\n       bytes[1]) * 256 +\r\n       bytes[2]) * 256 +\r\n       bytes[3]) * 256 +\r\n       bytes[4]) * 256 +\r\n       bytes[5]) * 256 +\r\n       bytes[6]) * 256 +\r\n       bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n}\r\n\r\n\r\nUnpacker.prototype.unpack_int8 = function(){\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80 ) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function(){\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000 ) ? uint16 : uint16 - (1 << 16);\r\n}\r\n\r\nUnpacker.prototype.unpack_int32 = function(){\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31) ) ? uint32 :\r\n    uint32 - Math.pow(2, 32);\r\n}\r\n\r\nUnpacker.prototype.unpack_int64 = function(){\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63) ) ? uint64 :\r\n    uint64 - Math.pow(2, 64);\r\n}\r\n\r\nUnpacker.prototype.unpack_raw = function(size){\r\n  if ( this.length < this.index + size){\r\n    throw new Error('BinaryPackFailure: index is out of range'\r\n      + ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n    //buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n}\r\n\r\nUnpacker.prototype.unpack_string = function(size){\r\n  var bytes = this.read(size);\r\n  var i = 0, str = '', c, code;\r\n  while(i < size){\r\n    c = bytes[i];\r\n    if ( c < 128){\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32){\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i+1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i+1] & 63) << 6) |\r\n        (bytes[i+2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n  this.index += size;\r\n  return str;\r\n}\r\n\r\nUnpacker.prototype.unpack_array = function(size){\r\n  var objects = new Array(size);\r\n  for(var i = 0; i < size ; i++){\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n}\r\n\r\nUnpacker.prototype.unpack_map = function(size){\r\n  var map = {};\r\n  for(var i = 0; i < size ; i++){\r\n    var key  = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n}\r\n\r\nUnpacker.prototype.unpack_float = function(){\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp  = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = ( uint32 & 0x7fffff ) | 0x800000;\r\n  return (sign == 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n}\r\n\r\nUnpacker.prototype.unpack_double = function(){\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp  = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = ( h32 & 0xfffff ) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32   * Math.pow(2, exp - 52);\r\n  return (sign == 0 ? 1 : -1) * frac;\r\n}\r\n\r\nUnpacker.prototype.read = function(length){\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n}\r\n\r\nfunction Packer(){\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function(){\r\n  return this.bufferBuilder.getBuffer();\r\n}\r\n\r\nPacker.prototype.pack = function(value){\r\n  var type = typeof(value);\r\n  if (type == 'string'){\r\n    this.pack_string(value);\r\n  } else if (type == 'number'){\r\n    if (Math.floor(value) === value){\r\n      this.pack_integer(value);\r\n    } else{\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type == 'boolean'){\r\n    if (value === true){\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false){\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type == 'undefined'){\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type == 'object'){\r\n    if (value === null){\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array){\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if(binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value){\r\n        if(binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if (constructor == Object){\r\n        this.pack_object(value);\r\n      } else if (constructor == Date){\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack == 'function'){\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n}\r\n\r\n\r\nPacker.prototype.pack_bin = function(blob){\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xda) ;\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n}\r\n\r\nPacker.prototype.pack_string = function(str){\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xd8) ;\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n}\r\n\r\nPacker.prototype.pack_array = function(ary){\r\n  var length = ary.length;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xdc)\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  for(var i = 0; i < length ; i++){\r\n    this.pack(ary[i]);\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_integer = function(num){\r\n  if ( -0x20 <= num && num <= 0x7f){\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (0x00 <= num && num <= 0xff){\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (-0x80 <= num && num <= 0x7f){\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if ( 0x0000 <= num && num <= 0xffff){\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (-0x8000 <= num && num <= 0x7fff){\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if ( 0x00000000 <= num && num <= 0xffffffff){\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (-0x80000000 <= num && num <= 0x7fffffff){\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (-0x8000000000000000 <= num && num <= 0x7FFFFFFFFFFFFFFF){\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (0x0000000000000000 <= num && num <= 0xFFFFFFFFFFFFFFFF){\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else{\r\n    throw new Error('Invalid integer');\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_double = function(num){\r\n  var sign = 0;\r\n  if (num < 0){\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp  = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32   = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp+1023) << 20) |\r\n      (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n}\r\n\r\nPacker.prototype.pack_object = function(obj){\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f){\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff){\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff){\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else{\r\n    throw new Error('Invalid length');\r\n  }\r\n  for(var prop in obj){\r\n    if (obj.hasOwnProperty(prop)){\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n}\r\n\r\nPacker.prototype.pack_uint8 = function(num){\r\n  this.bufferBuilder.append(num);\r\n}\r\n\r\nPacker.prototype.pack_uint16 = function(num){\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_uint32 = function(num){\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_uint64 = function(num){\r\n  var high = num / Math.pow(2, 32);\r\n  var low  = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low  & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low  & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low  & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((low  & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_int8 = function(num){\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_int16 = function(num){\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n}\r\n\r\nPacker.prototype.pack_int32 = function(num){\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n}\r\n\r\nPacker.prototype.pack_int64 = function(num){\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low  = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low  & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low  & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low  & 0x0000ff00) >>>  8);\r\n  this.bufferBuilder.append((low  & 0x000000ff));\r\n}\r\n\r\nfunction _utf8Replace(m){\r\n  var code = m.charCodeAt(0);\r\n\r\n  if(code <= 0x7ff) return '00';\r\n  if(code <= 0xffff) return '000';\r\n  if(code <= 0x1fffff) return '0000';\r\n  if(code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length(str){\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/js-binarypack/lib/bufferbuilder.js\":\r\n/*!*********************************************************!*\\\r\n  !*** ./node_modules/js-binarypack/lib/bufferbuilder.js ***!\r\n  \\*********************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nvar binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function(){\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function(){\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window != 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder(){\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function(data) {\r\n  if(typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function() {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if(!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function() {\r\n  this.flush();\r\n  if(binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for(var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/ms/index.js\":\r\n/*!**********************************!*\\\r\n  !*** ./node_modules/ms/index.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar w = d * 7;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isFinite(val)) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'weeks':\r\n    case 'week':\r\n    case 'w':\r\n      return n * w;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (msAbs >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (msAbs >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (msAbs >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return plural(ms, msAbs, d, 'day');\r\n  }\r\n  if (msAbs >= h) {\r\n    return plural(ms, msAbs, h, 'hour');\r\n  }\r\n  if (msAbs >= m) {\r\n    return plural(ms, msAbs, m, 'minute');\r\n  }\r\n  if (msAbs >= s) {\r\n    return plural(ms, msAbs, s, 'second');\r\n  }\r\n  return ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, msAbs, n, name) {\r\n  var isPlural = msAbs >= n * 1.5;\r\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\":\r\n/*!*********************************************************************!*\\\r\n  !*** ./node_modules/node-libs-browser/node_modules/buffer/index.js ***!\r\n  \\*********************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n/* WEBPACK VAR INJECTION */(function(global) {/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <http://feross.org>\r\n * @license  MIT\r\n */\r\n/* eslint-disable no-proto */\r\n\r\n\r\n\r\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\r\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\r\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/node-libs-browser/node_modules/isarray/index.js\")\r\n\r\nexports.Buffer = Buffer\r\nexports.SlowBuffer = SlowBuffer\r\nexports.INSPECT_MAX_BYTES = 50\r\n\r\n/**\r\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n *   === true    Use Uint8Array implementation (fastest)\r\n *   === false   Use Object implementation (most compatible, even IE6)\r\n *\r\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n * Opera 11.6+, iOS 4.2+.\r\n *\r\n * Due to various browser bugs, sometimes the Object implementation will be used even\r\n * when the browser supports typed arrays.\r\n *\r\n * Note:\r\n *\r\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\r\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\r\n *\r\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\r\n *\r\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\r\n *     incorrect length in some situations.\r\n\r\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\r\n * get the Object implementation, which is slower but behaves correctly.\r\n */\r\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\r\n  ? global.TYPED_ARRAY_SUPPORT\r\n  : typedArraySupport()\r\n\r\n/*\r\n * Export kMaxLength after typed array support is determined.\r\n */\r\nexports.kMaxLength = kMaxLength()\r\n\r\nfunction typedArraySupport () {\r\n  try {\r\n    var arr = new Uint8Array(1)\r\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\r\n    return arr.foo() === 42 && // typed array instances can be augmented\r\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\r\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction kMaxLength () {\r\n  return Buffer.TYPED_ARRAY_SUPPORT\r\n    ? 0x7fffffff\r\n    : 0x3fffffff\r\n}\r\n\r\nfunction createBuffer (that, length) {\r\n  if (kMaxLength() < length) {\r\n    throw new RangeError('Invalid typed array length')\r\n  }\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    // Return an augmented `Uint8Array` instance, for best performance\r\n    that = new Uint8Array(length)\r\n    that.__proto__ = Buffer.prototype\r\n  } else {\r\n    // Fallback: Return an object instance of the Buffer class\r\n    if (that === null) {\r\n      that = new Buffer(length)\r\n    }\r\n    that.length = length\r\n  }\r\n\r\n  return that\r\n}\r\n\r\n/**\r\n * The Buffer constructor returns instances of `Uint8Array` that have their\r\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n * returns a single octet.\r\n *\r\n * The `Uint8Array` prototype remains unmodified.\r\n */\r\n\r\nfunction Buffer (arg, encodingOrOffset, length) {\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\r\n    return new Buffer(arg, encodingOrOffset, length)\r\n  }\r\n\r\n  // Common case.\r\n  if (typeof arg === 'number') {\r\n    if (typeof encodingOrOffset === 'string') {\r\n      throw new Error(\r\n        'If encoding is specified then the first argument must be a string'\r\n      )\r\n    }\r\n    return allocUnsafe(this, arg)\r\n  }\r\n  return from(this, arg, encodingOrOffset, length)\r\n}\r\n\r\nBuffer.poolSize = 8192 // not used by this implementation\r\n\r\n// TODO: Legacy, not needed anymore. Remove in next major version.\r\nBuffer._augment = function (arr) {\r\n  arr.__proto__ = Buffer.prototype\r\n  return arr\r\n}\r\n\r\nfunction from (that, value, encodingOrOffset, length) {\r\n  if (typeof value === 'number') {\r\n    throw new TypeError('\"value\" argument must not be a number')\r\n  }\r\n\r\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\r\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    return fromString(that, value, encodingOrOffset)\r\n  }\r\n\r\n  return fromObject(that, value)\r\n}\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n **/\r\nBuffer.from = function (value, encodingOrOffset, length) {\r\n  return from(null, value, encodingOrOffset, length)\r\n}\r\n\r\nif (Buffer.TYPED_ARRAY_SUPPORT) {\r\n  Buffer.prototype.__proto__ = Uint8Array.prototype\r\n  Buffer.__proto__ = Uint8Array\r\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\r\n      Buffer[Symbol.species] === Buffer) {\r\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\r\n    Object.defineProperty(Buffer, Symbol.species, {\r\n      value: null,\r\n      configurable: true\r\n    })\r\n  }\r\n}\r\n\r\nfunction assertSize (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('\"size\" argument must be a number')\r\n  } else if (size < 0) {\r\n    throw new RangeError('\"size\" argument must not be negative')\r\n  }\r\n}\r\n\r\nfunction alloc (that, size, fill, encoding) {\r\n  assertSize(size)\r\n  if (size <= 0) {\r\n    return createBuffer(that, size)\r\n  }\r\n  if (fill !== undefined) {\r\n    // Only pay attention to encoding if it's a string. This\r\n    // prevents accidentally sending in a number that would\r\n    // be interpretted as a start offset.\r\n    return typeof encoding === 'string'\r\n      ? createBuffer(that, size).fill(fill, encoding)\r\n      : createBuffer(that, size).fill(fill)\r\n  }\r\n  return createBuffer(that, size)\r\n}\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n **/\r\nBuffer.alloc = function (size, fill, encoding) {\r\n  return alloc(null, size, fill, encoding)\r\n}\r\n\r\nfunction allocUnsafe (that, size) {\r\n  assertSize(size)\r\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\r\n    for (var i = 0; i < size; ++i) {\r\n      that[i] = 0\r\n    }\r\n  }\r\n  return that\r\n}\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n * */\r\nBuffer.allocUnsafe = function (size) {\r\n  return allocUnsafe(null, size)\r\n}\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n */\r\nBuffer.allocUnsafeSlow = function (size) {\r\n  return allocUnsafe(null, size)\r\n}\r\n\r\nfunction fromString (that, string, encoding) {\r\n  if (typeof encoding !== 'string' || encoding === '') {\r\n    encoding = 'utf8'\r\n  }\r\n\r\n  if (!Buffer.isEncoding(encoding)) {\r\n    throw new TypeError('\"encoding\" must be a valid string encoding')\r\n  }\r\n\r\n  var length = byteLength(string, encoding) | 0\r\n  that = createBuffer(that, length)\r\n\r\n  var actual = that.write(string, encoding)\r\n\r\n  if (actual !== length) {\r\n    // Writing a hex string, for example, that contains invalid characters will\r\n    // cause everything after the first invalid character to be ignored. (e.g.\r\n    // 'abxxcd' will be treated as 'ab')\r\n    that = that.slice(0, actual)\r\n  }\r\n\r\n  return that\r\n}\r\n\r\nfunction fromArrayLike (that, array) {\r\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\r\n  that = createBuffer(that, length)\r\n  for (var i = 0; i < length; i += 1) {\r\n    that[i] = array[i] & 255\r\n  }\r\n  return that\r\n}\r\n\r\nfunction fromArrayBuffer (that, array, byteOffset, length) {\r\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\r\n\r\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n    throw new RangeError('\\'offset\\' is out of bounds')\r\n  }\r\n\r\n  if (array.byteLength < byteOffset + (length || 0)) {\r\n    throw new RangeError('\\'length\\' is out of bounds')\r\n  }\r\n\r\n  if (byteOffset === undefined && length === undefined) {\r\n    array = new Uint8Array(array)\r\n  } else if (length === undefined) {\r\n    array = new Uint8Array(array, byteOffset)\r\n  } else {\r\n    array = new Uint8Array(array, byteOffset, length)\r\n  }\r\n\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    // Return an augmented `Uint8Array` instance, for best performance\r\n    that = array\r\n    that.__proto__ = Buffer.prototype\r\n  } else {\r\n    // Fallback: Return an object instance of the Buffer class\r\n    that = fromArrayLike(that, array)\r\n  }\r\n  return that\r\n}\r\n\r\nfunction fromObject (that, obj) {\r\n  if (Buffer.isBuffer(obj)) {\r\n    var len = checked(obj.length) | 0\r\n    that = createBuffer(that, len)\r\n\r\n    if (that.length === 0) {\r\n      return that\r\n    }\r\n\r\n    obj.copy(that, 0, 0, len)\r\n    return that\r\n  }\r\n\r\n  if (obj) {\r\n    if ((typeof ArrayBuffer !== 'undefined' &&\r\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\r\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\r\n        return createBuffer(that, 0)\r\n      }\r\n      return fromArrayLike(that, obj)\r\n    }\r\n\r\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\r\n      return fromArrayLike(that, obj.data)\r\n    }\r\n  }\r\n\r\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\r\n}\r\n\r\nfunction checked (length) {\r\n  // Note: cannot use `length < kMaxLength()` here because that fails when\r\n  // length is NaN (which is otherwise coerced to zero.)\r\n  if (length >= kMaxLength()) {\r\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\r\n  }\r\n  return length | 0\r\n}\r\n\r\nfunction SlowBuffer (length) {\r\n  if (+length != length) { // eslint-disable-line eqeqeq\r\n    length = 0\r\n  }\r\n  return Buffer.alloc(+length)\r\n}\r\n\r\nBuffer.isBuffer = function isBuffer (b) {\r\n  return !!(b != null && b._isBuffer)\r\n}\r\n\r\nBuffer.compare = function compare (a, b) {\r\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\r\n    throw new TypeError('Arguments must be Buffers')\r\n  }\r\n\r\n  if (a === b) return 0\r\n\r\n  var x = a.length\r\n  var y = b.length\r\n\r\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\r\n    if (a[i] !== b[i]) {\r\n      x = a[i]\r\n      y = b[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\nBuffer.isEncoding = function isEncoding (encoding) {\r\n  switch (String(encoding).toLowerCase()) {\r\n    case 'hex':\r\n    case 'utf8':\r\n    case 'utf-8':\r\n    case 'ascii':\r\n    case 'latin1':\r\n    case 'binary':\r\n    case 'base64':\r\n    case 'ucs2':\r\n    case 'ucs-2':\r\n    case 'utf16le':\r\n    case 'utf-16le':\r\n      return true\r\n    default:\r\n      return false\r\n  }\r\n}\r\n\r\nBuffer.concat = function concat (list, length) {\r\n  if (!isArray(list)) {\r\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n  }\r\n\r\n  if (list.length === 0) {\r\n    return Buffer.alloc(0)\r\n  }\r\n\r\n  var i\r\n  if (length === undefined) {\r\n    length = 0\r\n    for (i = 0; i < list.length; ++i) {\r\n      length += list[i].length\r\n    }\r\n  }\r\n\r\n  var buffer = Buffer.allocUnsafe(length)\r\n  var pos = 0\r\n  for (i = 0; i < list.length; ++i) {\r\n    var buf = list[i]\r\n    if (!Buffer.isBuffer(buf)) {\r\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    }\r\n    buf.copy(buffer, pos)\r\n    pos += buf.length\r\n  }\r\n  return buffer\r\n}\r\n\r\nfunction byteLength (string, encoding) {\r\n  if (Buffer.isBuffer(string)) {\r\n    return string.length\r\n  }\r\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\r\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\r\n    return string.byteLength\r\n  }\r\n  if (typeof string !== 'string') {\r\n    string = '' + string\r\n  }\r\n\r\n  var len = string.length\r\n  if (len === 0) return 0\r\n\r\n  // Use a for loop to avoid recursion\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return len\r\n      case 'utf8':\r\n      case 'utf-8':\r\n      case undefined:\r\n        return utf8ToBytes(string).length\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return len * 2\r\n      case 'hex':\r\n        return len >>> 1\r\n      case 'base64':\r\n        return base64ToBytes(string).length\r\n      default:\r\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\nBuffer.byteLength = byteLength\r\n\r\nfunction slowToString (encoding, start, end) {\r\n  var loweredCase = false\r\n\r\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n  // property of a typed array.\r\n\r\n  // This behaves neither like String nor Uint8Array in that we set start/end\r\n  // to their upper/lower bounds if the value passed is out of range.\r\n  // undefined is handled specially as per ECMA-262 6th Edition,\r\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n  if (start === undefined || start < 0) {\r\n    start = 0\r\n  }\r\n  // Return early if start > this.length. Done here to prevent potential uint32\r\n  // coercion fail below.\r\n  if (start > this.length) {\r\n    return ''\r\n  }\r\n\r\n  if (end === undefined || end > this.length) {\r\n    end = this.length\r\n  }\r\n\r\n  if (end <= 0) {\r\n    return ''\r\n  }\r\n\r\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\r\n  end >>>= 0\r\n  start >>>= 0\r\n\r\n  if (end <= start) {\r\n    return ''\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  while (true) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexSlice(this, start, end)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Slice(this, start, end)\r\n\r\n      case 'ascii':\r\n        return asciiSlice(this, start, end)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Slice(this, start, end)\r\n\r\n      case 'base64':\r\n        return base64Slice(this, start, end)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return utf16leSlice(this, start, end)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = (encoding + '').toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\r\n// Buffer instances.\r\nBuffer.prototype._isBuffer = true\r\n\r\nfunction swap (b, n, m) {\r\n  var i = b[n]\r\n  b[n] = b[m]\r\n  b[m] = i\r\n}\r\n\r\nBuffer.prototype.swap16 = function swap16 () {\r\n  var len = this.length\r\n  if (len % 2 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 2) {\r\n    swap(this, i, i + 1)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap32 = function swap32 () {\r\n  var len = this.length\r\n  if (len % 4 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 4) {\r\n    swap(this, i, i + 3)\r\n    swap(this, i + 1, i + 2)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap64 = function swap64 () {\r\n  var len = this.length\r\n  if (len % 8 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 8) {\r\n    swap(this, i, i + 7)\r\n    swap(this, i + 1, i + 6)\r\n    swap(this, i + 2, i + 5)\r\n    swap(this, i + 3, i + 4)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.toString = function toString () {\r\n  var length = this.length | 0\r\n  if (length === 0) return ''\r\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n  return slowToString.apply(this, arguments)\r\n}\r\n\r\nBuffer.prototype.equals = function equals (b) {\r\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n  if (this === b) return true\r\n  return Buffer.compare(this, b) === 0\r\n}\r\n\r\nBuffer.prototype.inspect = function inspect () {\r\n  var str = ''\r\n  var max = exports.INSPECT_MAX_BYTES\r\n  if (this.length > 0) {\r\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\r\n    if (this.length > max) str += ' ... '\r\n  }\r\n  return '<Buffer ' + str + '>'\r\n}\r\n\r\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\r\n  if (!Buffer.isBuffer(target)) {\r\n    throw new TypeError('Argument must be a Buffer')\r\n  }\r\n\r\n  if (start === undefined) {\r\n    start = 0\r\n  }\r\n  if (end === undefined) {\r\n    end = target ? target.length : 0\r\n  }\r\n  if (thisStart === undefined) {\r\n    thisStart = 0\r\n  }\r\n  if (thisEnd === undefined) {\r\n    thisEnd = this.length\r\n  }\r\n\r\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\r\n    throw new RangeError('out of range index')\r\n  }\r\n\r\n  if (thisStart >= thisEnd && start >= end) {\r\n    return 0\r\n  }\r\n  if (thisStart >= thisEnd) {\r\n    return -1\r\n  }\r\n  if (start >= end) {\r\n    return 1\r\n  }\r\n\r\n  start >>>= 0\r\n  end >>>= 0\r\n  thisStart >>>= 0\r\n  thisEnd >>>= 0\r\n\r\n  if (this === target) return 0\r\n\r\n  var x = thisEnd - thisStart\r\n  var y = end - start\r\n  var len = Math.min(x, y)\r\n\r\n  var thisCopy = this.slice(thisStart, thisEnd)\r\n  var targetCopy = target.slice(start, end)\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    if (thisCopy[i] !== targetCopy[i]) {\r\n      x = thisCopy[i]\r\n      y = targetCopy[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant is val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\r\n  // Empty buffer means no match\r\n  if (buffer.length === 0) return -1\r\n\r\n  // Normalize byteOffset\r\n  if (typeof byteOffset === 'string') {\r\n    encoding = byteOffset\r\n    byteOffset = 0\r\n  } else if (byteOffset > 0x7fffffff) {\r\n    byteOffset = 0x7fffffff\r\n  } else if (byteOffset < -0x80000000) {\r\n    byteOffset = -0x80000000\r\n  }\r\n  byteOffset = +byteOffset  // Coerce to Number.\r\n  if (isNaN(byteOffset)) {\r\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n    byteOffset = dir ? 0 : (buffer.length - 1)\r\n  }\r\n\r\n  // Normalize byteOffset: negative offsets start from the end of the buffer\r\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\r\n  if (byteOffset >= buffer.length) {\r\n    if (dir) return -1\r\n    else byteOffset = buffer.length - 1\r\n  } else if (byteOffset < 0) {\r\n    if (dir) byteOffset = 0\r\n    else return -1\r\n  }\r\n\r\n  // Normalize val\r\n  if (typeof val === 'string') {\r\n    val = Buffer.from(val, encoding)\r\n  }\r\n\r\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n  if (Buffer.isBuffer(val)) {\r\n    // Special case: looking for empty string/buffer always fails\r\n    if (val.length === 0) {\r\n      return -1\r\n    }\r\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n  } else if (typeof val === 'number') {\r\n    val = val & 0xFF // Search for a byte value [0-255]\r\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\r\n        typeof Uint8Array.prototype.indexOf === 'function') {\r\n      if (dir) {\r\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\r\n      } else {\r\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\r\n      }\r\n    }\r\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\r\n  }\r\n\r\n  throw new TypeError('val must be string, number or Buffer')\r\n}\r\n\r\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\r\n  var indexSize = 1\r\n  var arrLength = arr.length\r\n  var valLength = val.length\r\n\r\n  if (encoding !== undefined) {\r\n    encoding = String(encoding).toLowerCase()\r\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\r\n        encoding === 'utf16le' || encoding === 'utf-16le') {\r\n      if (arr.length < 2 || val.length < 2) {\r\n        return -1\r\n      }\r\n      indexSize = 2\r\n      arrLength /= 2\r\n      valLength /= 2\r\n      byteOffset /= 2\r\n    }\r\n  }\r\n\r\n  function read (buf, i) {\r\n    if (indexSize === 1) {\r\n      return buf[i]\r\n    } else {\r\n      return buf.readUInt16BE(i * indexSize)\r\n    }\r\n  }\r\n\r\n  var i\r\n  if (dir) {\r\n    var foundIndex = -1\r\n    for (i = byteOffset; i < arrLength; i++) {\r\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\r\n        if (foundIndex === -1) foundIndex = i\r\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\r\n      } else {\r\n        if (foundIndex !== -1) i -= i - foundIndex\r\n        foundIndex = -1\r\n      }\r\n    }\r\n  } else {\r\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\r\n    for (i = byteOffset; i >= 0; i--) {\r\n      var found = true\r\n      for (var j = 0; j < valLength; j++) {\r\n        if (read(arr, i + j) !== read(val, j)) {\r\n          found = false\r\n          break\r\n        }\r\n      }\r\n      if (found) return i\r\n    }\r\n  }\r\n\r\n  return -1\r\n}\r\n\r\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\r\n  return this.indexOf(val, byteOffset, encoding) !== -1\r\n}\r\n\r\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n}\r\n\r\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n}\r\n\r\nfunction hexWrite (buf, string, offset, length) {\r\n  offset = Number(offset) || 0\r\n  var remaining = buf.length - offset\r\n  if (!length) {\r\n    length = remaining\r\n  } else {\r\n    length = Number(length)\r\n    if (length > remaining) {\r\n      length = remaining\r\n    }\r\n  }\r\n\r\n  // must be an even number of digits\r\n  var strLen = string.length\r\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\r\n\r\n  if (length > strLen / 2) {\r\n    length = strLen / 2\r\n  }\r\n  for (var i = 0; i < length; ++i) {\r\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\r\n    if (isNaN(parsed)) return i\r\n    buf[offset + i] = parsed\r\n  }\r\n  return i\r\n}\r\n\r\nfunction utf8Write (buf, string, offset, length) {\r\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nfunction asciiWrite (buf, string, offset, length) {\r\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction latin1Write (buf, string, offset, length) {\r\n  return asciiWrite(buf, string, offset, length)\r\n}\r\n\r\nfunction base64Write (buf, string, offset, length) {\r\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction ucs2Write (buf, string, offset, length) {\r\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nBuffer.prototype.write = function write (string, offset, length, encoding) {\r\n  // Buffer#write(string)\r\n  if (offset === undefined) {\r\n    encoding = 'utf8'\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, encoding)\r\n  } else if (length === undefined && typeof offset === 'string') {\r\n    encoding = offset\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, offset[, length][, encoding])\r\n  } else if (isFinite(offset)) {\r\n    offset = offset | 0\r\n    if (isFinite(length)) {\r\n      length = length | 0\r\n      if (encoding === undefined) encoding = 'utf8'\r\n    } else {\r\n      encoding = length\r\n      length = undefined\r\n    }\r\n  // legacy write(string, encoding, offset, length) - remove in v0.13\r\n  } else {\r\n    throw new Error(\r\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\r\n    )\r\n  }\r\n\r\n  var remaining = this.length - offset\r\n  if (length === undefined || length > remaining) length = remaining\r\n\r\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n    throw new RangeError('Attempt to write outside buffer bounds')\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexWrite(this, string, offset, length)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Write(this, string, offset, length)\r\n\r\n      case 'ascii':\r\n        return asciiWrite(this, string, offset, length)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Write(this, string, offset, length)\r\n\r\n      case 'base64':\r\n        // Warning: maxLength not taken into account in base64Write\r\n        return base64Write(this, string, offset, length)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return ucs2Write(this, string, offset, length)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\nBuffer.prototype.toJSON = function toJSON () {\r\n  return {\r\n    type: 'Buffer',\r\n    data: Array.prototype.slice.call(this._arr || this, 0)\r\n  }\r\n}\r\n\r\nfunction base64Slice (buf, start, end) {\r\n  if (start === 0 && end === buf.length) {\r\n    return base64.fromByteArray(buf)\r\n  } else {\r\n    return base64.fromByteArray(buf.slice(start, end))\r\n  }\r\n}\r\n\r\nfunction utf8Slice (buf, start, end) {\r\n  end = Math.min(buf.length, end)\r\n  var res = []\r\n\r\n  var i = start\r\n  while (i < end) {\r\n    var firstByte = buf[i]\r\n    var codePoint = null\r\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\r\n      : (firstByte > 0xDF) ? 3\r\n      : (firstByte > 0xBF) ? 2\r\n      : 1\r\n\r\n    if (i + bytesPerSequence <= end) {\r\n      var secondByte, thirdByte, fourthByte, tempCodePoint\r\n\r\n      switch (bytesPerSequence) {\r\n        case 1:\r\n          if (firstByte < 0x80) {\r\n            codePoint = firstByte\r\n          }\r\n          break\r\n        case 2:\r\n          secondByte = buf[i + 1]\r\n          if ((secondByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\r\n            if (tempCodePoint > 0x7F) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 3:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\r\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 4:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          fourthByte = buf[i + 3]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\r\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    if (codePoint === null) {\r\n      // we did not generate a valid codePoint so insert a\r\n      // replacement char (U+FFFD) and advance only 1 byte\r\n      codePoint = 0xFFFD\r\n      bytesPerSequence = 1\r\n    } else if (codePoint > 0xFFFF) {\r\n      // encode to utf16 (surrogate pair dance)\r\n      codePoint -= 0x10000\r\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\r\n      codePoint = 0xDC00 | codePoint & 0x3FF\r\n    }\r\n\r\n    res.push(codePoint)\r\n    i += bytesPerSequence\r\n  }\r\n\r\n  return decodeCodePointsArray(res)\r\n}\r\n\r\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n// the lowest limit is Chrome, with 0x10000 args.\r\n// We go 1 magnitude less, for safety\r\nvar MAX_ARGUMENTS_LENGTH = 0x1000\r\n\r\nfunction decodeCodePointsArray (codePoints) {\r\n  var len = codePoints.length\r\n  if (len <= MAX_ARGUMENTS_LENGTH) {\r\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n  }\r\n\r\n  // Decode in chunks to avoid \"call stack size exceeded\".\r\n  var res = ''\r\n  var i = 0\r\n  while (i < len) {\r\n    res += String.fromCharCode.apply(\r\n      String,\r\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n    )\r\n  }\r\n  return res\r\n}\r\n\r\nfunction asciiSlice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i] & 0x7F)\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction latin1Slice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i])\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction hexSlice (buf, start, end) {\r\n  var len = buf.length\r\n\r\n  if (!start || start < 0) start = 0\r\n  if (!end || end < 0 || end > len) end = len\r\n\r\n  var out = ''\r\n  for (var i = start; i < end; ++i) {\r\n    out += toHex(buf[i])\r\n  }\r\n  return out\r\n}\r\n\r\nfunction utf16leSlice (buf, start, end) {\r\n  var bytes = buf.slice(start, end)\r\n  var res = ''\r\n  for (var i = 0; i < bytes.length; i += 2) {\r\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\r\n  }\r\n  return res\r\n}\r\n\r\nBuffer.prototype.slice = function slice (start, end) {\r\n  var len = this.length\r\n  start = ~~start\r\n  end = end === undefined ? len : ~~end\r\n\r\n  if (start < 0) {\r\n    start += len\r\n    if (start < 0) start = 0\r\n  } else if (start > len) {\r\n    start = len\r\n  }\r\n\r\n  if (end < 0) {\r\n    end += len\r\n    if (end < 0) end = 0\r\n  } else if (end > len) {\r\n    end = len\r\n  }\r\n\r\n  if (end < start) end = start\r\n\r\n  var newBuf\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    newBuf = this.subarray(start, end)\r\n    newBuf.__proto__ = Buffer.prototype\r\n  } else {\r\n    var sliceLen = end - start\r\n    newBuf = new Buffer(sliceLen, undefined)\r\n    for (var i = 0; i < sliceLen; ++i) {\r\n      newBuf[i] = this[i + start]\r\n    }\r\n  }\r\n\r\n  return newBuf\r\n}\r\n\r\n/*\r\n * Need to make sure that buffer isn't trying to write out of bounds.\r\n */\r\nfunction checkOffset (offset, ext, length) {\r\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\r\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\r\n}\r\n\r\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) {\r\n    checkOffset(offset, byteLength, this.length)\r\n  }\r\n\r\n  var val = this[offset + --byteLength]\r\n  var mul = 1\r\n  while (byteLength > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --byteLength] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  return this[offset]\r\n}\r\n\r\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return this[offset] | (this[offset + 1] << 8)\r\n}\r\n\r\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return (this[offset] << 8) | this[offset + 1]\r\n}\r\n\r\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return ((this[offset]) |\r\n      (this[offset + 1] << 8) |\r\n      (this[offset + 2] << 16)) +\r\n      (this[offset + 3] * 0x1000000)\r\n}\r\n\r\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] * 0x1000000) +\r\n    ((this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var i = byteLength\r\n  var mul = 1\r\n  var val = this[offset + --i]\r\n  while (i > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  if (!(this[offset] & 0x80)) return (this[offset])\r\n  return ((0xff - this[offset] + 1) * -1)\r\n}\r\n\r\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset] | (this[offset + 1] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset + 1] | (this[offset] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset]) |\r\n    (this[offset + 1] << 8) |\r\n    (this[offset + 2] << 16) |\r\n    (this[offset + 3] << 24)\r\n}\r\n\r\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] << 24) |\r\n    (this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    (this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, true, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, false, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, true, 52, 8)\r\n}\r\n\r\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, false, 52, 8)\r\n}\r\n\r\nfunction checkInt (buf, value, offset, ext, max, min) {\r\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n}\r\n\r\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var mul = 1\r\n  var i = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  byteLength = byteLength | 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\r\n  if (value < 0) value = 0xffff + value + 1\r\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\r\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\r\n      (littleEndian ? i : 1 - i) * 8\r\n  }\r\n}\r\n\r\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff)\r\n    this[offset + 1] = (value >>> 8)\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, true)\r\n  }\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 8)\r\n    this[offset + 1] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, false)\r\n  }\r\n  return offset + 2\r\n}\r\n\r\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\r\n  if (value < 0) value = 0xffffffff + value + 1\r\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\r\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\r\n  }\r\n}\r\n\r\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset + 3] = (value >>> 24)\r\n    this[offset + 2] = (value >>> 16)\r\n    this[offset + 1] = (value >>> 8)\r\n    this[offset] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, true)\r\n  }\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 24)\r\n    this[offset + 1] = (value >>> 16)\r\n    this[offset + 2] = (value >>> 8)\r\n    this[offset + 3] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, false)\r\n  }\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, 8 * byteLength - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = 0\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, 8 * byteLength - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\r\n  if (value < 0) value = 0xff + value + 1\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff)\r\n    this[offset + 1] = (value >>> 8)\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, true)\r\n  }\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 8)\r\n    this[offset + 1] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt16(this, value, offset, false)\r\n  }\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value & 0xff)\r\n    this[offset + 1] = (value >>> 8)\r\n    this[offset + 2] = (value >>> 16)\r\n    this[offset + 3] = (value >>> 24)\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, true)\r\n  }\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset | 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  if (value < 0) value = 0xffffffff + value + 1\r\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    this[offset] = (value >>> 24)\r\n    this[offset + 1] = (value >>> 16)\r\n    this[offset + 2] = (value >>> 8)\r\n    this[offset + 3] = (value & 0xff)\r\n  } else {\r\n    objectWriteUInt32(this, value, offset, false)\r\n  }\r\n  return offset + 4\r\n}\r\n\r\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n  if (offset < 0) throw new RangeError('Index out of range')\r\n}\r\n\r\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, false, noAssert)\r\n}\r\n\r\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\r\n  return offset + 8\r\n}\r\n\r\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, false, noAssert)\r\n}\r\n\r\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\r\n  if (!start) start = 0\r\n  if (!end && end !== 0) end = this.length\r\n  if (targetStart >= target.length) targetStart = target.length\r\n  if (!targetStart) targetStart = 0\r\n  if (end > 0 && end < start) end = start\r\n\r\n  // Copy 0 bytes; we're done\r\n  if (end === start) return 0\r\n  if (target.length === 0 || this.length === 0) return 0\r\n\r\n  // Fatal error conditions\r\n  if (targetStart < 0) {\r\n    throw new RangeError('targetStart out of bounds')\r\n  }\r\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\r\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n  // Are we oob?\r\n  if (end > this.length) end = this.length\r\n  if (target.length - targetStart < end - start) {\r\n    end = target.length - targetStart + start\r\n  }\r\n\r\n  var len = end - start\r\n  var i\r\n\r\n  if (this === target && start < targetStart && targetStart < end) {\r\n    // descending copy from end\r\n    for (i = len - 1; i >= 0; --i) {\r\n      target[i + targetStart] = this[i + start]\r\n    }\r\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\r\n    // ascending copy from start\r\n    for (i = 0; i < len; ++i) {\r\n      target[i + targetStart] = this[i + start]\r\n    }\r\n  } else {\r\n    Uint8Array.prototype.set.call(\r\n      target,\r\n      this.subarray(start, start + len),\r\n      targetStart\r\n    )\r\n  }\r\n\r\n  return len\r\n}\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\r\n  // Handle string cases:\r\n  if (typeof val === 'string') {\r\n    if (typeof start === 'string') {\r\n      encoding = start\r\n      start = 0\r\n      end = this.length\r\n    } else if (typeof end === 'string') {\r\n      encoding = end\r\n      end = this.length\r\n    }\r\n    if (val.length === 1) {\r\n      var code = val.charCodeAt(0)\r\n      if (code < 256) {\r\n        val = code\r\n      }\r\n    }\r\n    if (encoding !== undefined && typeof encoding !== 'string') {\r\n      throw new TypeError('encoding must be a string')\r\n    }\r\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n      throw new TypeError('Unknown encoding: ' + encoding)\r\n    }\r\n  } else if (typeof val === 'number') {\r\n    val = val & 255\r\n  }\r\n\r\n  // Invalid ranges are not set to a default, so can range check early.\r\n  if (start < 0 || this.length < start || this.length < end) {\r\n    throw new RangeError('Out of range index')\r\n  }\r\n\r\n  if (end <= start) {\r\n    return this\r\n  }\r\n\r\n  start = start >>> 0\r\n  end = end === undefined ? this.length : end >>> 0\r\n\r\n  if (!val) val = 0\r\n\r\n  var i\r\n  if (typeof val === 'number') {\r\n    for (i = start; i < end; ++i) {\r\n      this[i] = val\r\n    }\r\n  } else {\r\n    var bytes = Buffer.isBuffer(val)\r\n      ? val\r\n      : utf8ToBytes(new Buffer(val, encoding).toString())\r\n    var len = bytes.length\r\n    for (i = 0; i < end - start; ++i) {\r\n      this[i + start] = bytes[i % len]\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// HELPER FUNCTIONS\r\n// ================\r\n\r\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\r\n\r\nfunction base64clean (str) {\r\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\r\n  // Node converts strings with length < 2 to ''\r\n  if (str.length < 2) return ''\r\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n  while (str.length % 4 !== 0) {\r\n    str = str + '='\r\n  }\r\n  return str\r\n}\r\n\r\nfunction stringtrim (str) {\r\n  if (str.trim) return str.trim()\r\n  return str.replace(/^\\s+|\\s+$/g, '')\r\n}\r\n\r\nfunction toHex (n) {\r\n  if (n < 16) return '0' + n.toString(16)\r\n  return n.toString(16)\r\n}\r\n\r\nfunction utf8ToBytes (string, units) {\r\n  units = units || Infinity\r\n  var codePoint\r\n  var length = string.length\r\n  var leadSurrogate = null\r\n  var bytes = []\r\n\r\n  for (var i = 0; i < length; ++i) {\r\n    codePoint = string.charCodeAt(i)\r\n\r\n    // is surrogate component\r\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n      // last char was a lead\r\n      if (!leadSurrogate) {\r\n        // no lead yet\r\n        if (codePoint > 0xDBFF) {\r\n          // unexpected trail\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        } else if (i + 1 === length) {\r\n          // unpaired lead\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        }\r\n\r\n        // valid lead\r\n        leadSurrogate = codePoint\r\n\r\n        continue\r\n      }\r\n\r\n      // 2 leads in a row\r\n      if (codePoint < 0xDC00) {\r\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n        leadSurrogate = codePoint\r\n        continue\r\n      }\r\n\r\n      // valid surrogate pair\r\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\r\n    } else if (leadSurrogate) {\r\n      // valid bmp char, but last char was a lead\r\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n    }\r\n\r\n    leadSurrogate = null\r\n\r\n    // encode utf8\r\n    if (codePoint < 0x80) {\r\n      if ((units -= 1) < 0) break\r\n      bytes.push(codePoint)\r\n    } else if (codePoint < 0x800) {\r\n      if ((units -= 2) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x6 | 0xC0,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x10000) {\r\n      if ((units -= 3) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0xC | 0xE0,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x110000) {\r\n      if ((units -= 4) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x12 | 0xF0,\r\n        codePoint >> 0xC & 0x3F | 0x80,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else {\r\n      throw new Error('Invalid code point')\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nfunction asciiToBytes (str) {\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Node's code seems to be doing this and not & 0x7F..\r\n    byteArray.push(str.charCodeAt(i) & 0xFF)\r\n  }\r\n  return byteArray\r\n}\r\n\r\nfunction utf16leToBytes (str, units) {\r\n  var c, hi, lo\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    if ((units -= 2) < 0) break\r\n\r\n    c = str.charCodeAt(i)\r\n    hi = c >> 8\r\n    lo = c % 256\r\n    byteArray.push(lo)\r\n    byteArray.push(hi)\r\n  }\r\n\r\n  return byteArray\r\n}\r\n\r\nfunction base64ToBytes (str) {\r\n  return base64.toByteArray(base64clean(str))\r\n}\r\n\r\nfunction blitBuffer (src, dst, offset, length) {\r\n  for (var i = 0; i < length; ++i) {\r\n    if ((i + offset >= dst.length) || (i >= src.length)) break\r\n    dst[i + offset] = src[i]\r\n  }\r\n  return i\r\n}\r\n\r\nfunction isnan (val) {\r\n  return val !== val // eslint-disable-line no-self-compare\r\n}\r\n\r\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/node-libs-browser/node_modules/isarray/index.js\":\r\n/*!**********************************************************************!*\\\r\n  !*** ./node_modules/node-libs-browser/node_modules/isarray/index.js ***!\r\n  \\**********************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nvar toString = {}.toString;\r\n\r\nmodule.exports = Array.isArray || function (arr) {\r\n  return toString.call(arr) == '[object Array]';\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/object-sizeof/byte_size.js\":\r\n/*!*************************************************!*\\\r\n  !*** ./node_modules/object-sizeof/byte_size.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Byte sizes are taken from ECMAScript Language Specification\r\n * http://www.ecma-international.org/ecma-262/5.1/\r\n * http://bclary.com/2004/11/07/#a-4.3.16\r\n */\r\n\r\nmodule.exports = {\r\n  STRING: 2,\r\n  BOOLEAN: 4,\r\n  NUMBER: 8\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/object-sizeof/index.js\":\r\n/*!*********************************************!*\\\r\n  !*** ./node_modules/object-sizeof/index.js ***!\r\n  \\*********************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n// Copyright 2014 Andrei Karpushonak\r\n\r\n\r\n\r\nvar ECMA_SIZES = __webpack_require__(/*! ./byte_size */ \"./node_modules/object-sizeof/byte_size.js\")\r\nvar Buffer = __webpack_require__(/*! buffer */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer\r\n\r\nfunction allProperties(obj) {\r\n  const stringProperties = []\r\n  for (var prop in obj) { \r\n      stringProperties.push(prop)\r\n  }\r\n  if (Object.getOwnPropertySymbols) {\r\n      var symbolProperties = Object.getOwnPropertySymbols(obj)\r\n      Array.prototype.push.apply(stringProperties, symbolProperties)\r\n  }\r\n  return stringProperties\r\n}\r\n\r\nfunction sizeOfObject (seen, object) {\r\n  if (object == null) {\r\n    return 0\r\n  }\r\n\r\n  var bytes = 0\r\n  var properties = allProperties(object)\r\n  for (var i = 0; i < properties.length; i++) {\r\n    var key = properties[i]\r\n    // Do not recalculate circular references\r\n    if (typeof object[key] === 'object' && object[key] !== null) {\r\n      if (seen.has(object[key])) {\r\n        continue\r\n      }\r\n      seen.add(object[key])\r\n    }\r\n\r\n    bytes += getCalculator(seen)(key)\r\n    try {\r\n      bytes += getCalculator(seen)(object[key])\r\n    } catch (ex) {\r\n      if (ex instanceof RangeError) {\r\n        // circular reference detected, final result might be incorrect\r\n        // let's be nice and not throw an exception\r\n        bytes = 0\r\n      }\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nfunction getCalculator (seen) {\r\n  return function calculator(object) {\r\n    if (Buffer.isBuffer(object)) {\r\n      return object.length\r\n    }\r\n\r\n    var objectType = typeof (object)\r\n    switch (objectType) {\r\n      case 'string':\r\n        return object.length * ECMA_SIZES.STRING\r\n      case 'boolean':\r\n        return ECMA_SIZES.BOOLEAN\r\n      case 'number':\r\n        return ECMA_SIZES.NUMBER\r\n      case 'symbol':\r\n        const isGlobalSymbol = Symbol.keyFor && Symbol.keyFor(object)\r\n        return isGlobalSymbol ? Symbol.keyFor(object).length * ECMA_SIZES.STRING : (object.toString().length - 8) * ECMA_SIZES.STRING \r\n      case 'object':\r\n        if (Array.isArray(object)) {\r\n          return object.map(getCalculator(seen)).reduce(function (acc, curr) {\r\n            return acc + curr\r\n          }, 0)\r\n        } else {\r\n          return sizeOfObject(seen, object)\r\n        }\r\n      default:\r\n        return 0\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Main module's entry point\r\n * Calculates Bytes for the provided parameter\r\n * @param object - handles object/string/boolean/buffer\r\n * @returns {*}\r\n */\r\nfunction sizeof (object) {\r\n  return getCalculator(new WeakSet())(object)\r\n}\r\n\r\nmodule.exports = sizeof\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/parseqs/index.js\":\r\n/*!***************************************!*\\\r\n  !*** ./node_modules/parseqs/index.js ***!\r\n  \\***************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/parseuri/index.js\":\r\n/*!****************************************!*\\\r\n  !*** ./node_modules/parseuri/index.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/process/browser.js\":\r\n/*!*****************************************!*\\\r\n  !*** ./node_modules/process/browser.js ***!\r\n  \\*****************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n// shim for using process in browser\r\nvar process = module.exports = {};\r\n\r\n// cached from whatever global is present so that test runners that stub it\r\n// don't break things.  But we need to wrap it in a try catch in case it is\r\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\r\n// function because try/catches deoptimize in certain engines.\r\n\r\nvar cachedSetTimeout;\r\nvar cachedClearTimeout;\r\n\r\nfunction defaultSetTimout() {\r\n    throw new Error('setTimeout has not been defined');\r\n}\r\nfunction defaultClearTimeout () {\r\n    throw new Error('clearTimeout has not been defined');\r\n}\r\n(function () {\r\n    try {\r\n        if (typeof setTimeout === 'function') {\r\n            cachedSetTimeout = setTimeout;\r\n        } else {\r\n            cachedSetTimeout = defaultSetTimout;\r\n        }\r\n    } catch (e) {\r\n        cachedSetTimeout = defaultSetTimout;\r\n    }\r\n    try {\r\n        if (typeof clearTimeout === 'function') {\r\n            cachedClearTimeout = clearTimeout;\r\n        } else {\r\n            cachedClearTimeout = defaultClearTimeout;\r\n        }\r\n    } catch (e) {\r\n        cachedClearTimeout = defaultClearTimeout;\r\n    }\r\n} ())\r\nfunction runTimeout(fun) {\r\n    if (cachedSetTimeout === setTimeout) {\r\n        //normal enviroments in sane situations\r\n        return setTimeout(fun, 0);\r\n    }\r\n    // if setTimeout wasn't available but was latter defined\r\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\r\n        cachedSetTimeout = setTimeout;\r\n        return setTimeout(fun, 0);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedSetTimeout(fun, 0);\r\n    } catch(e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n            return cachedSetTimeout.call(null, fun, 0);\r\n        } catch(e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n            return cachedSetTimeout.call(this, fun, 0);\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction runClearTimeout(marker) {\r\n    if (cachedClearTimeout === clearTimeout) {\r\n        //normal enviroments in sane situations\r\n        return clearTimeout(marker);\r\n    }\r\n    // if clearTimeout wasn't available but was latter defined\r\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\r\n        cachedClearTimeout = clearTimeout;\r\n        return clearTimeout(marker);\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedClearTimeout(marker);\r\n    } catch (e){\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n            return cachedClearTimeout.call(null, marker);\r\n        } catch (e){\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n            return cachedClearTimeout.call(this, marker);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n    if (!draining || !currentQueue) {\r\n        return;\r\n    }\r\n    draining = false;\r\n    if (currentQueue.length) {\r\n        queue = currentQueue.concat(queue);\r\n    } else {\r\n        queueIndex = -1;\r\n    }\r\n    if (queue.length) {\r\n        drainQueue();\r\n    }\r\n}\r\n\r\nfunction drainQueue() {\r\n    if (draining) {\r\n        return;\r\n    }\r\n    var timeout = runTimeout(cleanUpNextTick);\r\n    draining = true;\r\n\r\n    var len = queue.length;\r\n    while(len) {\r\n        currentQueue = queue;\r\n        queue = [];\r\n        while (++queueIndex < len) {\r\n            if (currentQueue) {\r\n                currentQueue[queueIndex].run();\r\n            }\r\n        }\r\n        queueIndex = -1;\r\n        len = queue.length;\r\n    }\r\n    currentQueue = null;\r\n    draining = false;\r\n    runClearTimeout(timeout);\r\n}\r\n\r\nprocess.nextTick = function (fun) {\r\n    var args = new Array(arguments.length - 1);\r\n    if (arguments.length > 1) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            args[i - 1] = arguments[i];\r\n        }\r\n    }\r\n    queue.push(new Item(fun, args));\r\n    if (queue.length === 1 && !draining) {\r\n        runTimeout(drainQueue);\r\n    }\r\n};\r\n\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n    this.fun = fun;\r\n    this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n    this.fun.apply(null, this.array);\r\n};\r\nprocess.title = 'browser';\r\nprocess.browser = true;\r\nprocess.env = {};\r\nprocess.argv = [];\r\nprocess.version = ''; // empty string to avoid regexp issues\r\nprocess.versions = {};\r\n\r\nfunction noop() {}\r\n\r\nprocess.on = noop;\r\nprocess.addListener = noop;\r\nprocess.once = noop;\r\nprocess.off = noop;\r\nprocess.removeListener = noop;\r\nprocess.removeAllListeners = noop;\r\nprocess.emit = noop;\r\nprocess.prependListener = noop;\r\nprocess.prependOnceListener = noop;\r\n\r\nprocess.listeners = function (name) { return [] }\r\n\r\nprocess.binding = function (name) {\r\n    throw new Error('process.binding is not supported');\r\n};\r\n\r\nprocess.cwd = function () { return '/' };\r\nprocess.chdir = function (dir) {\r\n    throw new Error('process.chdir is not supported');\r\n};\r\nprocess.umask = function() { return 0; };\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/query-string/index.js\":\r\n/*!********************************************!*\\\r\n  !*** ./node_modules/query-string/index.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nconst strictUriEncode = __webpack_require__(/*! strict-uri-encode */ \"./node_modules/strict-uri-encode/index.js\");\r\nconst decodeComponent = __webpack_require__(/*! decode-uri-component */ \"./node_modules/decode-uri-component/index.js\");\r\nconst splitOnFirst = __webpack_require__(/*! split-on-first */ \"./node_modules/split-on-first/index.js\");\r\n\r\nconst isNullOrUndefined = value => value === null || value === undefined;\r\n\r\nfunction encoderForArrayFormat(options) {\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tconst index = result.length;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\r\n\t\t\t\t];\r\n\t\t\t};\r\n\r\n\t\tcase 'bracket':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\r\n\t\t\t};\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (result.length === 0) {\r\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, encode(key, options)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nfunction parserForArrayFormat(options) {\r\n\tlet result;\r\n\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\r\n\r\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key][result[1]] = value;\r\n\t\t\t};\r\n\r\n\t\tcase 'bracket':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\r\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = [value];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\r\n\t\t\t};\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\r\n\t\t\t\tconst newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\r\n\t\t\t\taccumulator[key] = newValue;\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nfunction validateArrayFormatSeparator(value) {\r\n\tif (typeof value !== 'string' || value.length !== 1) {\r\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\r\n\t}\r\n}\r\n\r\nfunction encode(value, options) {\r\n\tif (options.encode) {\r\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction decode(value, options) {\r\n\tif (options.decode) {\r\n\t\treturn decodeComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction keysSorter(input) {\r\n\tif (Array.isArray(input)) {\r\n\t\treturn input.sort();\r\n\t}\r\n\r\n\tif (typeof input === 'object') {\r\n\t\treturn keysSorter(Object.keys(input))\r\n\t\t\t.sort((a, b) => Number(a) - Number(b))\r\n\t\t\t.map(key => input[key]);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction removeHash(input) {\r\n\tconst hashStart = input.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\tinput = input.slice(0, hashStart);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction getHash(url) {\r\n\tlet hash = '';\r\n\tconst hashStart = url.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\thash = url.slice(hashStart);\r\n\t}\r\n\r\n\treturn hash;\r\n}\r\n\r\nfunction extract(input) {\r\n\tinput = removeHash(input);\r\n\tconst queryStart = input.indexOf('?');\r\n\tif (queryStart === -1) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\treturn input.slice(queryStart + 1);\r\n}\r\n\r\nfunction parseValue(value, options) {\r\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\r\n\t\tvalue = Number(value);\r\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\r\n\t\tvalue = value.toLowerCase() === 'true';\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction parse(input, options) {\r\n\toptions = Object.assign({\r\n\t\tdecode: true,\r\n\t\tsort: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ',',\r\n\t\tparseNumbers: false,\r\n\t\tparseBooleans: false\r\n\t}, options);\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst formatter = parserForArrayFormat(options);\r\n\r\n\t// Create an object with no prototype\r\n\tconst ret = Object.create(null);\r\n\r\n\tif (typeof input !== 'string') {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tinput = input.trim().replace(/^[?#&]/, '');\r\n\r\n\tif (!input) {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tfor (const param of input.split('&')) {\r\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\r\n\r\n\t\t// Missing `=` should be `null`:\r\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\r\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\r\n\t\tformatter(decode(key, options), value, ret);\r\n\t}\r\n\r\n\tfor (const key of Object.keys(ret)) {\r\n\t\tconst value = ret[key];\r\n\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\tfor (const k of Object.keys(value)) {\r\n\t\t\t\tvalue[k] = parseValue(value[k], options);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tret[key] = parseValue(value, options);\r\n\t\t}\r\n\t}\r\n\r\n\tif (options.sort === false) {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\r\n\t\tconst value = ret[key];\r\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\r\n\t\t\t// Sort object keys, not values\r\n\t\t\tresult[key] = keysSorter(value);\r\n\t\t} else {\r\n\t\t\tresult[key] = value;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}, Object.create(null));\r\n}\r\n\r\nexports.extract = extract;\r\nexports.parse = parse;\r\n\r\nexports.stringify = (object, options) => {\r\n\tif (!object) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\toptions = Object.assign({\r\n\t\tencode: true,\r\n\t\tstrict: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ','\r\n\t}, options);\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst shouldFilter = key => (\r\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\r\n\t\t(options.skipEmptyString && object[key] === '')\r\n\t);\r\n\r\n\tconst formatter = encoderForArrayFormat(options);\r\n\r\n\tconst objectCopy = {};\r\n\r\n\tfor (const key of Object.keys(object)) {\r\n\t\tif (!shouldFilter(key)) {\r\n\t\t\tobjectCopy[key] = object[key];\r\n\t\t}\r\n\t}\r\n\r\n\tconst keys = Object.keys(objectCopy);\r\n\r\n\tif (options.sort !== false) {\r\n\t\tkeys.sort(options.sort);\r\n\t}\r\n\r\n\treturn keys.map(key => {\r\n\t\tconst value = object[key];\r\n\r\n\t\tif (value === undefined) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif (value === null) {\r\n\t\t\treturn encode(key, options);\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\treturn value\r\n\t\t\t\t.reduce(formatter(key), [])\r\n\t\t\t\t.join('&');\r\n\t\t}\r\n\r\n\t\treturn encode(key, options) + '=' + encode(value, options);\r\n\t}).filter(x => x.length > 0).join('&');\r\n};\r\n\r\nexports.parseUrl = (input, options) => {\r\n\treturn {\r\n\t\turl: removeHash(input).split('?')[0] || '',\r\n\t\tquery: parse(extract(input), options)\r\n\t};\r\n};\r\n\r\nexports.stringifyUrl = (input, options) => {\r\n\tconst url = removeHash(input.url).split('?')[0] || '';\r\n\tconst queryFromUrl = exports.extract(input.url);\r\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl);\r\n\tconst hash = getHash(input.url);\r\n\tconst query = Object.assign(parsedQueryFromUrl, input.query);\r\n\tlet queryString = exports.stringify(query, options);\r\n\tif (queryString) {\r\n\t\tqueryString = `?${queryString}`;\r\n\t}\r\n\r\n\treturn `${url}${queryString}${hash}`;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-interop/lib/array-equals.js\":\r\n/*!******************************************************!*\\\r\n  !*** ./node_modules/sdp-interop/lib/array-equals.js ***!\r\n  \\******************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/* Copyright @ 2015 Atlassian Pty Ltd\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nmodule.exports = function arrayEquals(array) {\r\n    // if the other array is a falsy value, return\r\n    if (!array)\r\n        return false;\r\n\r\n    // compare lengths - can save a lot of time\r\n    if (this.length != array.length)\r\n        return false;\r\n\r\n    for (var i = 0, l = this.length; i < l; i++) {\r\n        // Check if we have nested arrays\r\n        if (this[i] instanceof Array && array[i] instanceof Array) {\r\n            // recurse into the nested arrays\r\n            if (!arrayEquals.apply(this[i], [array[i]]))\r\n                return false;\r\n        } else if (this[i] != array[i]) {\r\n            // Warning - two different object instances will never be equal:\r\n            // {x:20} != {x:20}\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-interop/lib/index.js\":\r\n/*!***********************************************!*\\\r\n  !*** ./node_modules/sdp-interop/lib/index.js ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/* Copyright @ 2015 Atlassian Pty Ltd\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexports.Interop = __webpack_require__(/*! ./interop */ \"./node_modules/sdp-interop/lib/interop.js\");\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-interop/lib/interop.js\":\r\n/*!*************************************************!*\\\r\n  !*** ./node_modules/sdp-interop/lib/interop.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n/* Copyright @ 2015 Atlassian Pty Ltd\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/* global RTCSessionDescription */\r\n/* global RTCIceCandidate */\r\n/* jshint -W097 */\r\n\r\n\r\nvar transform = __webpack_require__(/*! ./transform */ \"./node_modules/sdp-interop/lib/transform.js\");\r\nvar arrayEquals = __webpack_require__(/*! ./array-equals */ \"./node_modules/sdp-interop/lib/array-equals.js\");\r\n\r\nfunction Interop() {\r\n\r\n    /**\r\n     * This map holds the most recent Unified Plan offer/answer SDP that was\r\n     * converted to Plan B, with the SDP type ('offer' or 'answer') as keys and\r\n     * the SDP string as values.\r\n     *\r\n     * @type {{}}\r\n     */\r\n    this.cache = {\r\n        mlB2UMap : {},\r\n        mlU2BMap : {}\r\n    };\r\n}\r\n\r\nmodule.exports = Interop;\r\n\r\n/**\r\n * Changes the candidate args to match with the related Unified Plan\r\n */\r\nInterop.prototype.candidateToUnifiedPlan = function(candidate) {\r\n    var cand = new RTCIceCandidate(candidate);\r\n\r\n    cand.sdpMLineIndex = this.cache.mlB2UMap[cand.sdpMLineIndex];\r\n    /* TODO: change sdpMid to (audio|video)-SSRC */\r\n\r\n    return cand;\r\n};\r\n\r\n/**\r\n * Changes the candidate args to match with the related Plan B\r\n */\r\nInterop.prototype.candidateToPlanB = function(candidate) {\r\n    var cand = new RTCIceCandidate(candidate);\r\n\r\n    if (cand.sdpMid.indexOf('audio') === 0) {\r\n      cand.sdpMid = 'audio';\r\n    } else if (cand.sdpMid.indexOf('video') === 0) {\r\n      cand.sdpMid = 'video';\r\n    } else {\r\n      throw new Error('candidate with ' + cand.sdpMid + ' not allowed');\r\n    }\r\n\r\n    cand.sdpMLineIndex = this.cache.mlU2BMap[cand.sdpMLineIndex];\r\n\r\n    return cand;\r\n};\r\n\r\n/**\r\n * Returns the index of the first m-line with the given media type and with a\r\n * direction which allows sending, in the last Unified Plan description with\r\n * type \"answer\" converted to Plan B. Returns {null} if there is no saved\r\n * answer, or if none of its m-lines with the given type allow sending.\r\n * @param type the media type (\"audio\" or \"video\").\r\n * @returns {*}\r\n */\r\nInterop.prototype.getFirstSendingIndexFromAnswer = function(type) {\r\n    if (!this.cache.answer) {\r\n        return null;\r\n    }\r\n\r\n    var session = transform.parse(this.cache.answer);\r\n    if (session && session.media && Array.isArray(session.media)){\r\n        for (var i = 0; i < session.media.length; i++) {\r\n            if (session.media[i].type == type &&\r\n                (!session.media[i].direction /* default to sendrecv */ ||\r\n                    session.media[i].direction === 'sendrecv' ||\r\n                    session.media[i].direction === 'sendonly')){\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * This method transforms a Unified Plan SDP to an equivalent Plan B SDP. A\r\n * PeerConnection wrapper transforms the SDP to Plan B before passing it to the\r\n * application.\r\n *\r\n * @param desc\r\n * @returns {*}\r\n */\r\nInterop.prototype.toPlanB = function(desc) {\r\n    var self = this;\r\n    //#region Preliminary input validation.\r\n\r\n    if (typeof desc !== 'object' || desc === null ||\r\n        typeof desc.sdp !== 'string') {\r\n        console.warn('An empty description was passed as an argument.');\r\n        return desc;\r\n    }\r\n\r\n    // Objectify the SDP for easier manipulation.\r\n    var session = transform.parse(desc.sdp);\r\n\r\n    // If the SDP contains no media, there's nothing to transform.\r\n    if (typeof session.media === 'undefined' ||\r\n        !Array.isArray(session.media) || session.media.length === 0) {\r\n        console.warn('The description has no media.');\r\n        return desc;\r\n    }\r\n\r\n    // Try some heuristics to \"make sure\" this is a Unified Plan SDP. Plan B\r\n    // SDP has a video, an audio and a data \"channel\" at most.\r\n    if (session.media.length <= 3 && session.media.every(function(m) {\r\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\r\n        })) {\r\n        console.warn('This description does not look like Unified Plan.');\r\n        return desc;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    // HACK https://bugzilla.mozilla.org/show_bug.cgi?id=1113443\r\n    var sdp = desc.sdp;\r\n    var rewrite = false;\r\n    for (var i = 0; i < session.media.length; i++) {\r\n        var uLine = session.media[i];\r\n        uLine.rtp.forEach(function(rtp) {\r\n            if (rtp.codec === 'NULL')\r\n            {\r\n                rewrite = true;\r\n                var offer = transform.parse(self.cache.offer);\r\n                rtp.codec = offer.media[i].rtp[0].codec;\r\n            }\r\n        });\r\n    }\r\n    if (rewrite) {\r\n        sdp = transform.write(session);\r\n    }\r\n\r\n    // Unified Plan SDP is our \"precious\". Cache it for later use in the Plan B\r\n    // -> Unified Plan transformation.\r\n    this.cache[desc.type] = sdp;\r\n\r\n    //#region Convert from Unified Plan to Plan B.\r\n\r\n    // We rebuild the session.media array.\r\n    var media = session.media;\r\n    session.media = [];\r\n\r\n    // Associative array that maps channel types to channel objects for fast\r\n    // access to channel objects by their type, e.g. type2bl['audio']->channel\r\n    // obj.\r\n    var type2bl = {};\r\n\r\n    // Used to build the group:BUNDLE value after the channels construction\r\n    // loop.\r\n    var types = [];\r\n\r\n    // Used to aggregate the directions of the m-lines.\r\n    var directionResult = {};\r\n\r\n    media.forEach(function(uLine) {\r\n        // rtcp-mux is required in the Plan B SDP.\r\n        if ((typeof uLine.rtcpMux !== 'string' ||\r\n            uLine.rtcpMux !== 'rtcp-mux') &&\r\n            uLine.direction !== 'inactive') {\r\n            throw new Error('Cannot convert to Plan B because m-lines ' +\r\n                'without the rtcp-mux attribute were found.');\r\n        }\r\n\r\n        // If we don't have a channel for this uLine.type OR the selected is\r\n        // inactive, then select this uLine as the channel basis.\r\n        if (typeof type2bl[uLine.type] === 'undefined' ||\r\n            type2bl[uLine.type].direction === 'inactive') {\r\n            type2bl[uLine.type] = uLine;\r\n        }\r\n    });\r\n\r\n    // Implode the Unified Plan m-lines/tracks into Plan B channels.\r\n    media.forEach(function(uLine) {\r\n        var type = uLine.type;\r\n\r\n        if (type === 'application') {\r\n            session.media.push(uLine);\r\n            types.push(uLine.mid);\r\n            return;\r\n        }\r\n\r\n        // Add sources to the channel and handle a=msid.\r\n        if (typeof uLine.sources === 'object') {\r\n            Object.keys(uLine.sources).forEach(function(ssrc) {\r\n                if (typeof type2bl[type].sources !== 'object')\r\n                    type2bl[type].sources = {};\r\n\r\n                // Assign the sources to the channel.\r\n                type2bl[type].sources[ssrc] = uLine.sources[ssrc];\r\n\r\n                if (typeof uLine.msid !== 'undefined') {\r\n                    // In Plan B the msid is an SSRC attribute. Also, we don't\r\n                    // care about the obsolete label and mslabel attributes.\r\n                    //\r\n                    // Note that it is not guaranteed that the uLine will\r\n                    // have an msid. recvonly channels in particular don't have\r\n                    // one.\r\n                    type2bl[type].sources[ssrc].msid = uLine.msid;\r\n                }\r\n                // NOTE ssrcs in ssrc groups will share msids, as\r\n                // draft-uberti-rtcweb-plan-00 mandates.\r\n            });\r\n        }\r\n\r\n        // Add ssrc groups to the channel.\r\n        if (typeof uLine.ssrcGroups !== 'undefined' &&\r\n                Array.isArray(uLine.ssrcGroups)) {\r\n\r\n            // Create the ssrcGroups array, if it's not defined.\r\n            if (typeof type2bl[type].ssrcGroups === 'undefined' ||\r\n                    !Array.isArray(type2bl[type].ssrcGroups)) {\r\n                type2bl[type].ssrcGroups = [];\r\n            }\r\n\r\n            type2bl[type].ssrcGroups\r\n                = type2bl[type].ssrcGroups.concat(uLine.ssrcGroups);\r\n        }\r\n\r\n        var direction = uLine.direction;\r\n\r\n        directionResult[type]\r\n            = (directionResult[type] || 0 /* inactive */)\r\n                | directionMasks[direction || 'inactive'];\r\n\r\n        if (type2bl[type] === uLine) {\r\n            // Plan B mids are in ['audio', 'video', 'data']\r\n            uLine.mid = type;\r\n\r\n            // Plan B doesn't support/need the bundle-only attribute.\r\n            delete uLine.bundleOnly;\r\n\r\n            // In Plan B the msid is an SSRC attribute.\r\n            delete uLine.msid;\r\n\r\n            if (direction !== 'inactive') {\r\n              // Used to build the group:BUNDLE value after this loop.\r\n              types.push(type);\r\n            }\r\n\r\n            // Add the channel to the new media array.\r\n            session.media.push(uLine);\r\n        }\r\n    });\r\n\r\n    // We regenerate the BUNDLE group with the new mids.\r\n    session.groups.some(function(group) {\r\n        if (group.type === 'BUNDLE') {\r\n            group.mids = types.join(' ');\r\n            return true;\r\n        }\r\n    });\r\n\r\n    // msid semantic\r\n    session.msidSemantic = {\r\n        semantic: 'WMS',\r\n        token: '*'\r\n    };\r\n\r\n    var resStr = transform.write(session);\r\n\r\n    return new RTCSessionDescription({\r\n        type: desc.type,\r\n        sdp: resStr\r\n    });\r\n\r\n    //#endregion\r\n};\r\n\r\n/**\r\n * This method transforms a Plan B SDP to an equivalent Unified Plan SDP. A\r\n * PeerConnection wrapper transforms the SDP to Unified Plan before passing it\r\n * to FF.\r\n *\r\n * @param desc\r\n * @returns {*}\r\n */\r\nInterop.prototype.toUnifiedPlan = function(desc) {\r\n    var self = this;\r\n    //#region Preliminary input validation.\r\n\r\n    if (typeof desc !== 'object' || desc === null ||\r\n        typeof desc.sdp !== 'string') {\r\n        console.warn('An empty description was passed as an argument.');\r\n        return desc;\r\n    }\r\n\r\n    var session = transform.parse(desc.sdp);\r\n\r\n    // If the SDP contains no media, there's nothing to transform.\r\n    if (typeof session.media === 'undefined' ||\r\n        !Array.isArray(session.media) || session.media.length === 0) {\r\n        console.warn('The description has no media.');\r\n        return desc;\r\n    }\r\n\r\n    // Try some heuristics to \"make sure\" this is a Plan B SDP. Plan B SDP has\r\n    // a video, an audio and a data \"channel\" at most.\r\n    if (session.media.length > 3 || !session.media.every(function(m) {\r\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\r\n        })) {\r\n        console.warn('This description does not look like Plan B.');\r\n        return desc;\r\n    }\r\n\r\n    // Make sure this Plan B SDP can be converted to a Unified Plan SDP.\r\n    var mids = [];\r\n    session.media.forEach(function(m) {\r\n        mids.push(m.mid);\r\n    });\r\n\r\n    var hasBundle = false;\r\n    if (typeof session.groups !== 'undefined' &&\r\n        Array.isArray(session.groups)) {\r\n        hasBundle = session.groups.every(function(g) {\r\n            return g.type !== 'BUNDLE' ||\r\n                arrayEquals.apply(g.mids.sort(), [mids.sort()]);\r\n        });\r\n    }\r\n\r\n    if (!hasBundle) {\r\n        throw new Error(\"Cannot convert to Unified Plan because m-lines that\" +\r\n            \" are not bundled were found.\");\r\n    }\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region Convert from Plan B to Unified Plan.\r\n\r\n    // Unfortunately, a Plan B offer/answer doesn't have enough information to\r\n    // rebuild an equivalent Unified Plan offer/answer.\r\n    //\r\n    // For example, if this is a local answer (in Unified Plan style) that we\r\n    // convert to Plan B prior to handing it over to the application (the\r\n    // PeerConnection wrapper called us, for instance, after a successful\r\n    // createAnswer), we want to remember the m-line at which we've seen the\r\n    // (local) SSRC. That's because when the application wants to do call the\r\n    // SLD method, forcing us to do the inverse transformation (from Plan B to\r\n    // Unified Plan), we need to know to which m-line to assign the (local)\r\n    // SSRC. We also need to know all the other m-lines that the original\r\n    // answer had and include them in the transformed answer as well.\r\n    //\r\n    // Another example is if this is a remote offer that we convert to Plan B\r\n    // prior to giving it to the application, we want to remember the mid at\r\n    // which we've seen the (remote) SSRC.\r\n    //\r\n    // In the iteration that follows, we use the cached Unified Plan (if it\r\n    // exists) to assign mids to ssrcs.\r\n\r\n    var cached;\r\n    if (typeof this.cache[desc.type] !== 'undefined') {\r\n        cached = transform.parse(this.cache[desc.type]);\r\n    }\r\n\r\n    var recvonlySsrcs = {\r\n        audio: {},\r\n        video: {}\r\n    };\r\n\r\n    // A helper map that sends mids to m-line objects. We use it later to\r\n    // rebuild the Unified Plan style session.media array.\r\n    var mid2ul = {};\r\n    var bIdx = 0;\r\n    var uIdx = 0;\r\n\r\n    session.media.forEach(function(bLine) {\r\n        if ((typeof bLine.rtcpMux !== 'string' ||\r\n            bLine.rtcpMux !== 'rtcp-mux') &&\r\n            bLine.direction !== 'inactive') {\r\n            throw new Error(\"Cannot convert to Unified Plan because m-lines \" +\r\n                \"without the rtcp-mux attribute were found.\");\r\n        }\r\n\r\n        if (bLine.type === 'application') {\r\n            mid2ul[bLine.mid] = bLine;\r\n            return;\r\n        }\r\n\r\n        // With rtcp-mux and bundle all the channels should have the same ICE\r\n        // stuff.\r\n        var sources = bLine.sources;\r\n        var ssrcGroups = bLine.ssrcGroups;\r\n        var candidates = bLine.candidates;\r\n        var iceUfrag = bLine.iceUfrag;\r\n        var icePwd = bLine.icePwd;\r\n        var fingerprint = bLine.fingerprint;\r\n        var port = bLine.port;\r\n\r\n        // We'll use the \"bLine\" object as a prototype for each new \"mLine\"\r\n        // that we create, but first we need to clean it up a bit.\r\n        delete bLine.sources;\r\n        delete bLine.ssrcGroups;\r\n        delete bLine.candidates;\r\n        delete bLine.iceUfrag;\r\n        delete bLine.icePwd;\r\n        delete bLine.fingerprint;\r\n        delete bLine.port;\r\n        delete bLine.mid;\r\n\r\n        // inverted ssrc group map\r\n        var ssrc2group = {};\r\n        if (typeof ssrcGroups !== 'undefined' && Array.isArray(ssrcGroups)) {\r\n            ssrcGroups.forEach(function (ssrcGroup) {\r\n\r\n                // TODO(gp) find out how to receive simulcast with FF. For the\r\n                // time being, hide it.\r\n                if (ssrcGroup.semantics === 'SIM') {\r\n                    return;\r\n                }\r\n\r\n                // XXX This might brake if an SSRC is in more than one group\r\n                // for some reason.\r\n                if (typeof ssrcGroup.ssrcs !== 'undefined' &&\r\n                    Array.isArray(ssrcGroup.ssrcs)) {\r\n                    ssrcGroup.ssrcs.forEach(function (ssrc) {\r\n                        if (typeof ssrc2group[ssrc] === 'undefined') {\r\n                            ssrc2group[ssrc] = [];\r\n                        }\r\n\r\n                        ssrc2group[ssrc].push(ssrcGroup);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        // ssrc to m-line index.\r\n        var ssrc2ml = {};\r\n\r\n        if (typeof sources === 'object') {\r\n\r\n            // Explode the Plan B channel sources with one m-line per source.\r\n            Object.keys(sources).forEach(function(ssrc) {\r\n\r\n                // The (unified) m-line for this SSRC. We either create it from\r\n                // scratch or, if it's a grouped SSRC, we re-use a related\r\n                // mline. In other words, if the source is grouped with another\r\n                // source, put the two together in the same m-line.\r\n                var uLine;\r\n\r\n                // We assume here that we are the answerer in the O/A, so any\r\n                // offers which we translate come from the remote side, while\r\n                // answers are local. So the check below is to make that we\r\n                // handle receive-only SSRCs in a special way only if they come\r\n                // from the remote side.\r\n                if (desc.type==='offer') {\r\n                    // We want to detect SSRCs which are used by a remote peer\r\n                    // in an m-line with direction=recvonly (i.e. they are\r\n                    // being used for RTCP only).\r\n                    // This information would have gotten lost if the remote\r\n                    // peer used Unified Plan and their local description was\r\n                    // translated to Plan B. So we use the lack of an MSID\r\n                    // attribute to deduce a \"receive only\" SSRC.\r\n                    if (!sources[ssrc].msid) {\r\n                        recvonlySsrcs[bLine.type][ssrc] = sources[ssrc];\r\n                        // Receive-only SSRCs must not create new m-lines. We\r\n                        // will assign them to an existing m-line later.\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                if (typeof ssrc2group[ssrc] !== 'undefined' &&\r\n                    Array.isArray(ssrc2group[ssrc])) {\r\n                    ssrc2group[ssrc].some(function (ssrcGroup) {\r\n                        // ssrcGroup.ssrcs *is* an Array, no need to check\r\n                        // again here.\r\n                        return ssrcGroup.ssrcs.some(function (related) {\r\n                            if (typeof ssrc2ml[related] === 'object') {\r\n                                uLine = ssrc2ml[related];\r\n                                return true;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                if (typeof uLine === 'object') {\r\n                    // the m-line already exists. Just add the source.\r\n                    uLine.sources[ssrc] = sources[ssrc];\r\n                    delete sources[ssrc].msid;\r\n                } else {\r\n                    // Use the \"bLine\" as a prototype for the \"uLine\".\r\n                    uLine = Object.create(bLine);\r\n                    ssrc2ml[ssrc] = uLine;\r\n\r\n                    if (typeof sources[ssrc].msid !== 'undefined') {\r\n                        // Assign the msid of the source to the m-line. Note\r\n                        // that it is not guaranteed that the source will have\r\n                        // msid. In particular \"recvonly\" sources don't have an\r\n                        // msid. Note that \"recvonly\" is a term only defined\r\n                        // for m-lines.\r\n                        uLine.msid = sources[ssrc].msid;\r\n                        delete sources[ssrc].msid;\r\n                    }\r\n\r\n                    // We assign one SSRC per media line.\r\n                    uLine.sources = {};\r\n                    uLine.sources[ssrc] = sources[ssrc];\r\n                    uLine.ssrcGroups = ssrc2group[ssrc];\r\n\r\n                    // Use the cached Unified Plan SDP (if it exists) to assign\r\n                    // SSRCs to mids.\r\n                    if (typeof cached !== 'undefined' &&\r\n                        typeof cached.media !== 'undefined' &&\r\n                        Array.isArray(cached.media)) {\r\n\r\n                        cached.media.forEach(function (m) {\r\n                            if (typeof m.sources === 'object') {\r\n                                Object.keys(m.sources).forEach(function (s) {\r\n                                    if (s === ssrc) {\r\n                                        uLine.mid = m.mid;\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (typeof uLine.mid === 'undefined') {\r\n\r\n                        // If this is an SSRC that we see for the first time\r\n                        // assign it a new mid. This is typically the case when\r\n                        // this method is called to transform a remote\r\n                        // description for the first time or when there is a\r\n                        // new SSRC in the remote description because a new\r\n                        // peer has joined the conference. Local SSRCs should\r\n                        // have already been added to the map in the toPlanB\r\n                        // method.\r\n                        //\r\n                        // Because FF generates answers in Unified Plan style,\r\n                        // we MUST already have a cached answer with all the\r\n                        // local SSRCs mapped to some m-line/mid.\r\n\r\n                        if (desc.type === 'answer') {\r\n                            throw new Error(\"An unmapped SSRC was found.\");\r\n                        }\r\n\r\n                        uLine.mid = [bLine.type, '-', ssrc].join('');\r\n                    }\r\n\r\n                    // Include the candidates in the 1st media line.\r\n                    uLine.candidates = candidates;\r\n                    uLine.iceUfrag = iceUfrag;\r\n                    uLine.icePwd = icePwd;\r\n                    uLine.fingerprint = fingerprint;\r\n                    uLine.port = port;\r\n\r\n                    mid2ul[uLine.mid] = uLine;\r\n\r\n                    self.cache.mlU2BMap[uIdx] = bIdx;\r\n                    if (typeof self.cache.mlB2UMap[bIdx] === 'undefined') {\r\n                      self.cache.mlB2UMap[bIdx] = uIdx;\r\n                    }\r\n                    uIdx++;\r\n                }\r\n            });\r\n        }\r\n\r\n        bIdx++;\r\n    });\r\n\r\n    // Rebuild the media array in the right order and add the missing mLines\r\n    // (missing from the Plan B SDP).\r\n    session.media = [];\r\n    mids = []; // reuse\r\n\r\n    if (desc.type === 'answer') {\r\n\r\n        // The media lines in the answer must match the media lines in the\r\n        // offer. The order is important too. Here we assume that Firefox is\r\n        // the answerer, so we merely have to use the reconstructed (unified)\r\n        // answer to update the cached (unified) answer accordingly.\r\n        //\r\n        // In the general case, one would have to use the cached (unified)\r\n        // offer to find the m-lines that are missing from the reconstructed\r\n        // answer, potentially grabbing them from the cached (unified) answer.\r\n        // One has to be careful with this approach because inactive m-lines do\r\n        // not always have an mid, making it tricky (impossible?) to find where\r\n        // exactly and which m-lines are missing from the reconstructed answer.\r\n\r\n        for (var i = 0; i < cached.media.length; i++) {\r\n            var uLine = cached.media[i];\r\n\r\n            if (typeof mid2ul[uLine.mid] === 'undefined') {\r\n\r\n                // The mid isn't in the reconstructed (unified) answer.\r\n                // This is either a (unified) m-line containing a remote\r\n                // track only, or a (unified) m-line containing a remote\r\n                // track and a local track that has been removed.\r\n                // In either case, it MUST exist in the cached\r\n                // (unified) answer.\r\n                //\r\n                // In case this is a removed local track, clean-up\r\n                // the (unified) m-line and make sure it's 'recvonly' or\r\n                // 'inactive'.\r\n\r\n                delete uLine.msid;\r\n                delete uLine.sources;\r\n                delete uLine.ssrcGroups;\r\n                if (!uLine.direction\r\n                    || uLine.direction === 'sendrecv')\r\n                    uLine.direction = 'recvonly';\r\n                else if (uLine.direction === 'sendonly')\r\n                    uLine.direction = 'inactive';\r\n            } else {\r\n                // This is an (unified) m-line/channel that contains a local\r\n                // track (sendrecv or sendonly channel) or it's a unified\r\n                // recvonly m-line/channel. In either case, since we're\r\n                // going from PlanB -> Unified Plan this m-line MUST\r\n                // exist in the cached answer.\r\n            }\r\n\r\n            session.media.push(uLine);\r\n\r\n            if (typeof uLine.mid === 'string') {\r\n                // inactive lines don't/may not have an mid.\r\n                mids.push(uLine.mid);\r\n            }\r\n        }\r\n    } else {\r\n\r\n        // SDP offer/answer (and the JSEP spec) forbids removing an m-section\r\n        // under any circumstances. If we are no longer interested in sending a\r\n        // track, we just remove the msid and ssrc attributes and set it to\r\n        // either a=recvonly (as the reofferer, we must use recvonly if the\r\n        // other side was previously sending on the m-section, but we can also\r\n        // leave the possibility open if it wasn't previously in use), or\r\n        // a=inactive.\r\n\r\n        if (typeof cached !== 'undefined' &&\r\n            typeof cached.media !== 'undefined' &&\r\n            Array.isArray(cached.media)) {\r\n            cached.media.forEach(function(uLine) {\r\n                mids.push(uLine.mid);\r\n                if (typeof mid2ul[uLine.mid] !== 'undefined') {\r\n                    session.media.push(mid2ul[uLine.mid]);\r\n                } else {\r\n                    delete uLine.msid;\r\n                    delete uLine.sources;\r\n                    delete uLine.ssrcGroups;\r\n                    if (!uLine.direction\r\n                        || uLine.direction === 'sendrecv')\r\n                        uLine.direction = 'recvonly';\r\n                    if (!uLine.direction\r\n                        || uLine.direction === 'sendonly')\r\n                        uLine.direction = 'inactive';\r\n                    session.media.push(uLine);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Add all the remaining (new) m-lines of the transformed SDP.\r\n        Object.keys(mid2ul).forEach(function(mid) {\r\n            if (mids.indexOf(mid) === -1) {\r\n                mids.push(mid);\r\n                if (mid2ul[mid].direction === 'recvonly') {\r\n                    // This is a remote recvonly channel. Add its SSRC to the\r\n                    // appropriate sendrecv or sendonly channel.\r\n                    // TODO(gp) what if we don't have sendrecv/sendonly\r\n                    // channel?\r\n\r\n                    session.media.some(function (uLine) {\r\n                        if ((uLine.direction === 'sendrecv' ||\r\n                            uLine.direction === 'sendonly') &&\r\n                            uLine.type === mid2ul[mid].type) {\r\n\r\n                            // mid2ul[mid] shouldn't have any ssrc-groups\r\n                            Object.keys(mid2ul[mid].sources).forEach(\r\n                                function (ssrc) {\r\n                                uLine.sources[ssrc] =\r\n                                    mid2ul[mid].sources[ssrc];\r\n                            });\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n                } else {\r\n                    session.media.push(mid2ul[mid]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // After we have constructed the Plan Unified m-lines we can figure out\r\n    // where (in which m-line) to place the 'recvonly SSRCs'.\r\n    // Note: we assume here that we are the answerer in the O/A, so any offers\r\n    // which we translate come from the remote side, while answers are local\r\n    // (and so our last local description is cached as an 'answer').\r\n    [\"audio\", \"video\"].forEach(function (type) {\r\n        if (!session || !session.media || !Array.isArray(session.media))\r\n            return;\r\n\r\n        var idx = null;\r\n        if (Object.keys(recvonlySsrcs[type]).length > 0) {\r\n            idx = self.getFirstSendingIndexFromAnswer(type);\r\n            if (idx === null){\r\n                // If this is the first offer we receive, we don't have a\r\n                // cached answer. Assume that we will be sending media using\r\n                // the first m-line for each media type.\r\n\r\n                for (var i = 0; i < session.media.length; i++) {\r\n                    if (session.media[i].type === type) {\r\n                        idx = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (idx && session.media.length > idx) {\r\n            var mLine = session.media[idx];\r\n            Object.keys(recvonlySsrcs[type]).forEach(function(ssrc) {\r\n                if (mLine.sources && mLine.sources[ssrc]) {\r\n                    console.warn(\"Replacing an existing SSRC.\");\r\n                }\r\n                if (!mLine.sources) {\r\n                    mLine.sources = {};\r\n                }\r\n\r\n                mLine.sources[ssrc] = recvonlySsrcs[type][ssrc];\r\n            });\r\n        }\r\n    });\r\n\r\n    // We regenerate the BUNDLE group (since we regenerated the mids)\r\n    session.groups.some(function(group) {\r\n        if (group.type === 'BUNDLE') {\r\n            group.mids = mids.join(' ');\r\n            return true;\r\n        }\r\n    });\r\n\r\n    // msid semantic\r\n    session.msidSemantic = {\r\n        semantic: 'WMS',\r\n        token: '*'\r\n    };\r\n\r\n    var resStr = transform.write(session);\r\n\r\n    // Cache the transformed SDP (Unified Plan) for later re-use in this\r\n    // function.\r\n    this.cache[desc.type] = resStr;\r\n\r\n    return new RTCSessionDescription({\r\n        type: desc.type,\r\n        sdp: resStr\r\n    });\r\n\r\n    //#endregion\r\n};\r\n\r\n/**\r\n * Maps the direction strings to their binary representation. The binary\r\n * representation of the directions will contain only 2 bits. The least\r\n * significant bit will indicate the receiving direction and the other bit will\r\n * indicate the sending direction.\r\n *\r\n * @type {Map<string, number>}\r\n */\r\nvar directionMasks = {\r\n    'inactive': 0, // 00\r\n    'recvonly': 1, // 01\r\n    'sendonly': 2, // 10\r\n    'sendrecv': 3  // 11\r\n}\r\n\r\n/**\r\n * Parses a number into direction string.\r\n *\r\n * @param {number} direction - The number to be parsed.\r\n * @returns {string} - The parsed direction string.\r\n */\r\nfunction parseDirection(direction) {\r\n    // Filter all other bits except the 2 less significant.\r\n    var directionMask = direction & 3;\r\n\r\n    switch (directionMask) {\r\n    case 0:\r\n        return 'inactive';\r\n    case 1:\r\n        return 'recvonly';\r\n    case 2:\r\n        return 'sendonly';\r\n    case 3:\r\n        return 'sendrecv';\r\n    }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-interop/lib/transform.js\":\r\n/*!***************************************************!*\\\r\n  !*** ./node_modules/sdp-interop/lib/transform.js ***!\r\n  \\***************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/* Copyright @ 2015 Atlassian Pty Ltd\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nvar transform = __webpack_require__(/*! sdp-transform */ \"./node_modules/sdp-interop/node_modules/sdp-transform/lib/index.js\");\r\n\r\nexports.write = function(session, opts) {\r\n\r\n  if (typeof session !== 'undefined' &&\r\n      typeof session.media !== 'undefined' &&\r\n      Array.isArray(session.media)) {\r\n\r\n    session.media.forEach(function (mLine) {\r\n      // expand sources to ssrcs\r\n      if (typeof mLine.sources !== 'undefined' &&\r\n        Object.keys(mLine.sources).length !== 0) {\r\n          mLine.ssrcs = [];\r\n          Object.keys(mLine.sources).forEach(function (ssrc) {\r\n            var source = mLine.sources[ssrc];\r\n            Object.keys(source).forEach(function (attribute) {\r\n              mLine.ssrcs.push({\r\n                id: ssrc,\r\n                attribute: attribute,\r\n                value: source[attribute]\r\n              });\r\n            });\r\n          });\r\n          delete mLine.sources;\r\n        }\r\n\r\n      // join ssrcs in ssrc groups\r\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\r\n        Array.isArray(mLine.ssrcGroups)) {\r\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\r\n            if (typeof ssrcGroup.ssrcs !== 'undefined' &&\r\n                Array.isArray(ssrcGroup.ssrcs)) {\r\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.join(' ');\r\n            }\r\n          });\r\n        }\r\n    });\r\n  }\r\n\r\n  // join group mids\r\n  if (typeof session !== 'undefined' &&\r\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\r\n\r\n    session.groups.forEach(function (g) {\r\n      if (typeof g.mids !== 'undefined' && Array.isArray(g.mids)) {\r\n        g.mids = g.mids.join(' ');\r\n      }\r\n    });\r\n  }\r\n\r\n  return transform.write(session, opts);\r\n};\r\n\r\nexports.parse = function(sdp) {\r\n  var session = transform.parse(sdp);\r\n\r\n  if (typeof session !== 'undefined' && typeof session.media !== 'undefined' &&\r\n      Array.isArray(session.media)) {\r\n\r\n    session.media.forEach(function (mLine) {\r\n      // group sources attributes by ssrc\r\n      if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\r\n        mLine.sources = {};\r\n        mLine.ssrcs.forEach(function (ssrc) {\r\n          if (!mLine.sources[ssrc.id])\r\n          mLine.sources[ssrc.id] = {};\r\n        mLine.sources[ssrc.id][ssrc.attribute] = ssrc.value;\r\n        });\r\n\r\n        delete mLine.ssrcs;\r\n      }\r\n\r\n      // split ssrcs in ssrc groups\r\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\r\n        Array.isArray(mLine.ssrcGroups)) {\r\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\r\n            if (typeof ssrcGroup.ssrcs === 'string') {\r\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.split(' ');\r\n            }\r\n          });\r\n        }\r\n    });\r\n  }\r\n  // split group mids\r\n  if (typeof session !== 'undefined' &&\r\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\r\n\r\n    session.groups.forEach(function (g) {\r\n      if (typeof g.mids === 'string') {\r\n        g.mids = g.mids.split(' ');\r\n      }\r\n    });\r\n  }\r\n\r\n  return session;\r\n};\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-interop/node_modules/sdp-transform/lib/grammar.js\":\r\n/*!****************************************************************************!*\\\r\n  !*** ./node_modules/sdp-interop/node_modules/sdp-transform/lib/grammar.js ***!\r\n  \\****************************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nvar grammar = module.exports = {\r\n  v: [{\r\n    name: 'version',\r\n    reg: /^(\\d*)$/\r\n  }],\r\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\r\n    // NB: sessionId will be a String in most cases because it is huge\r\n    name: 'origin',\r\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\r\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\r\n    format: '%s %s %d %s IP%d %s'\r\n  }],\r\n  // default parsing of these only (though some of these feel outdated)\r\n  s: [{ name: 'name' }],\r\n  i: [{ name: 'description' }],\r\n  u: [{ name: 'uri' }],\r\n  e: [{ name: 'email' }],\r\n  p: [{ name: 'phone' }],\r\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\r\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\r\n  //k: [{}], // outdated thing ignored\r\n  t: [{ //t=0 0\r\n    name: 'timing',\r\n    reg: /^(\\d*) (\\d*)/,\r\n    names: ['start', 'stop'],\r\n    format: '%d %d'\r\n  }],\r\n  c: [{ //c=IN IP4 10.47.197.26\r\n    name: 'connection',\r\n    reg: /^IN IP(\\d) (\\S*)/,\r\n    names: ['version', 'ip'],\r\n    format: 'IN IP%d %s'\r\n  }],\r\n  b: [{ //b=AS:4000\r\n    push: 'bandwidth',\r\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\r\n    names: ['type', 'limit'],\r\n    format: '%s:%s'\r\n  }],\r\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\r\n    // NB: special - pushes to session\r\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\r\n    reg: /^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,\r\n    names: ['type', 'port', 'protocol', 'payloads'],\r\n    format: '%s %d %s %s'\r\n  }],\r\n  a: [\r\n    { //a=rtpmap:110 opus/48000/2\r\n      push: 'rtp',\r\n      reg: /^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\r\n      names: ['payload', 'codec', 'rate', 'encoding'],\r\n      format: function (o) {\r\n        return (o.encoding) ?\r\n          'rtpmap:%d %s/%s/%s':\r\n          o.rate ?\r\n          'rtpmap:%d %s/%s':\r\n          'rtpmap:%d %s';\r\n      }\r\n    },\r\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\r\n      //a=fmtp:111 minptime=10; useinbandfec=1\r\n      push: 'fmtp',\r\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\r\n      names: ['payload', 'config'],\r\n      format: 'fmtp:%d %s'\r\n    },\r\n    { //a=control:streamid=0\r\n      name: 'control',\r\n      reg: /^control:(.*)/,\r\n      format: 'control:%s'\r\n    },\r\n    { //a=rtcp:65179 IN IP4 193.84.77.194\r\n      name: 'rtcp',\r\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\r\n      names: ['port', 'netType', 'ipVer', 'address'],\r\n      format: function (o) {\r\n        return (o.address != null) ?\r\n          'rtcp:%d %s IP%d %s':\r\n          'rtcp:%d';\r\n      }\r\n    },\r\n    { //a=rtcp-fb:98 trr-int 100\r\n      push: 'rtcpFbTrrInt',\r\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\r\n      names: ['payload', 'value'],\r\n      format: 'rtcp-fb:%d trr-int %d'\r\n    },\r\n    { //a=rtcp-fb:98 nack rpsi\r\n      push: 'rtcpFb',\r\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\r\n      names: ['payload', 'type', 'subtype'],\r\n      format: function (o) {\r\n        return (o.subtype != null) ?\r\n          'rtcp-fb:%s %s %s':\r\n          'rtcp-fb:%s %s';\r\n      }\r\n    },\r\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\r\n      //a=extmap:1/recvonly URI-gps-string\r\n      push: 'ext',\r\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,\r\n      names: ['value', 'direction', 'uri', 'config'],\r\n      format: function (o) {\r\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\r\n      }\r\n    },\r\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\r\n      push: 'crypto',\r\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\r\n      names: ['id', 'suite', 'config', 'sessionConfig'],\r\n      format: function (o) {\r\n        return (o.sessionConfig != null) ?\r\n          'crypto:%d %s %s %s':\r\n          'crypto:%d %s %s';\r\n      }\r\n    },\r\n    { //a=setup:actpass\r\n      name: 'setup',\r\n      reg: /^setup:(\\w*)/,\r\n      format: 'setup:%s'\r\n    },\r\n    { //a=mid:1\r\n      name: 'mid',\r\n      reg: /^mid:([^\\s]*)/,\r\n      format: 'mid:%s'\r\n    },\r\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\r\n      name: 'msid',\r\n      reg: /^msid:(.*)/,\r\n      format: 'msid:%s'\r\n    },\r\n    { //a=ptime:20\r\n      name: 'ptime',\r\n      reg: /^ptime:(\\d*)/,\r\n      format: 'ptime:%d'\r\n    },\r\n    { //a=maxptime:60\r\n      name: 'maxptime',\r\n      reg: /^maxptime:(\\d*)/,\r\n      format: 'maxptime:%d'\r\n    },\r\n    { //a=sendrecv\r\n      name: 'direction',\r\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\r\n    },\r\n    { //a=ice-lite\r\n      name: 'icelite',\r\n      reg: /^(ice-lite)/\r\n    },\r\n    { //a=ice-ufrag:F7gI\r\n      name: 'iceUfrag',\r\n      reg: /^ice-ufrag:(\\S*)/,\r\n      format: 'ice-ufrag:%s'\r\n    },\r\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\r\n      name: 'icePwd',\r\n      reg: /^ice-pwd:(\\S*)/,\r\n      format: 'ice-pwd:%s'\r\n    },\r\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\r\n      name: 'fingerprint',\r\n      reg: /^fingerprint:(\\S*) (\\S*)/,\r\n      names: ['type', 'hash'],\r\n      format: 'fingerprint:%s %s'\r\n    },\r\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\r\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\r\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\r\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\r\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\r\n      push:'candidates',\r\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\r\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\r\n      format: function (o) {\r\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\r\n\r\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\r\n\r\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\r\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\r\n\r\n        if (o.generation != null) {\r\n          str += ' generation %d';\r\n        }\r\n\r\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\r\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\r\n        return str;\r\n      }\r\n    },\r\n    { //a=end-of-candidates (keep after the candidates line for readability)\r\n      name: 'endOfCandidates',\r\n      reg: /^(end-of-candidates)/\r\n    },\r\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\r\n      name: 'remoteCandidates',\r\n      reg: /^remote-candidates:(.*)/,\r\n      format: 'remote-candidates:%s'\r\n    },\r\n    { //a=ice-options:google-ice\r\n      name: 'iceOptions',\r\n      reg: /^ice-options:(\\S*)/,\r\n      format: 'ice-options:%s'\r\n    },\r\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\r\n      push: 'ssrcs',\r\n      reg: /^ssrc:(\\d*) ([\\w_]*)(?::(.*))?/,\r\n      names: ['id', 'attribute', 'value'],\r\n      format: function (o) {\r\n        var str = 'ssrc:%d';\r\n        if (o.attribute != null) {\r\n          str += ' %s';\r\n          if (o.value != null) {\r\n            str += ':%s';\r\n          }\r\n        }\r\n        return str;\r\n      }\r\n    },\r\n    { //a=ssrc-group:FEC 1 2\r\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\r\n      push: 'ssrcGroups',\r\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\r\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\r\n      names: ['semantics', 'ssrcs'],\r\n      format: 'ssrc-group:%s %s'\r\n    },\r\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\r\n      name: 'msidSemantic',\r\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\r\n      names: ['semantic', 'token'],\r\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\r\n    },\r\n    { //a=group:BUNDLE audio video\r\n      push: 'groups',\r\n      reg: /^group:(\\w*) (.*)/,\r\n      names: ['type', 'mids'],\r\n      format: 'group:%s %s'\r\n    },\r\n    { //a=rtcp-mux\r\n      name: 'rtcpMux',\r\n      reg: /^(rtcp-mux)/\r\n    },\r\n    { //a=rtcp-rsize\r\n      name: 'rtcpRsize',\r\n      reg: /^(rtcp-rsize)/\r\n    },\r\n    { //a=sctpmap:5000 webrtc-datachannel 1024\r\n      name: 'sctpmap',\r\n      reg: /^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,\r\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\r\n      format: function (o) {\r\n        return (o.maxMessageSize != null) ?\r\n          'sctpmap:%s %s %s' :\r\n          'sctpmap:%s %s';\r\n      }\r\n    },\r\n    { //a=x-google-flag:conference\r\n      name: 'xGoogleFlag',\r\n      reg: /^x-google-flag:([^\\s]*)/,\r\n      format: 'x-google-flag:%s'\r\n    },\r\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\r\n      push: 'rids',\r\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\r\n      names: ['id', 'direction', 'params'],\r\n      format: function (o) {\r\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\r\n      }\r\n    },\r\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\r\n      //a=imageattr:* send [x=800,y=640] recv *\r\n      //a=imageattr:100 recv [x=320,y=240]\r\n      push: 'imageattrs',\r\n      reg: new RegExp(\r\n        //a=imageattr:97\r\n        '^imageattr:(\\\\d+|\\\\*)' +\r\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\r\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\r\n        //recv [x=330,y=250]\r\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\r\n      ),\r\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\r\n      format: function (o) {\r\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\r\n      }\r\n    },\r\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\r\n      //a=simulcast:recv 1;4,5 send 6;7\r\n      name: 'simulcast',\r\n      reg: new RegExp(\r\n        //a=simulcast:\r\n        '^simulcast:' +\r\n        //send 1,2,3;~4,~5\r\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\r\n        //space + recv 6;~7,~8\r\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\r\n        //end\r\n        '$'\r\n      ),\r\n      names: ['dir1', 'list1', 'dir2', 'list2'],\r\n      format: function (o) {\r\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\r\n      }\r\n    },\r\n    { //Old simulcast draft 03 (implemented by Firefox)\r\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\r\n      //a=simulcast: recv pt=97;98 send pt=97\r\n      //a=simulcast: send rid=5;6;7 paused=6,7\r\n      name: 'simulcast_03',\r\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\r\n      names: ['value'],\r\n      format: 'simulcast: %s'\r\n    },\r\n    {\r\n      //a=framerate:25\r\n      //a=framerate:29.97\r\n      name: 'framerate',\r\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\r\n      format: 'framerate:%s'\r\n    },\r\n    { // any a= that we don't understand is kepts verbatim on media.invalid\r\n      push: 'invalid',\r\n      names: ['value']\r\n    }\r\n  ]\r\n};\r\n\r\n// set sensible defaults to avoid polluting the grammar with boring details\r\nObject.keys(grammar).forEach(function (key) {\r\n  var objs = grammar[key];\r\n  objs.forEach(function (obj) {\r\n    if (!obj.reg) {\r\n      obj.reg = /(.*)/;\r\n    }\r\n    if (!obj.format) {\r\n      obj.format = '%s';\r\n    }\r\n  });\r\n});\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-interop/node_modules/sdp-transform/lib/index.js\":\r\n/*!**************************************************************************!*\\\r\n  !*** ./node_modules/sdp-interop/node_modules/sdp-transform/lib/index.js ***!\r\n  \\**************************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar parser = __webpack_require__(/*! ./parser */ \"./node_modules/sdp-interop/node_modules/sdp-transform/lib/parser.js\");\r\nvar writer = __webpack_require__(/*! ./writer */ \"./node_modules/sdp-interop/node_modules/sdp-transform/lib/writer.js\");\r\n\r\nexports.write = writer;\r\nexports.parse = parser.parse;\r\nexports.parseFmtpConfig = parser.parseFmtpConfig;\r\nexports.parseParams = parser.parseParams;\r\nexports.parsePayloads = parser.parsePayloads;\r\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\r\nexports.parseImageAttributes = parser.parseImageAttributes;\r\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-interop/node_modules/sdp-transform/lib/parser.js\":\r\n/*!***************************************************************************!*\\\r\n  !*** ./node_modules/sdp-interop/node_modules/sdp-transform/lib/parser.js ***!\r\n  \\***************************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar toIntIfInt = function (v) {\r\n  return String(Number(v)) === v ? Number(v) : v;\r\n};\r\n\r\nvar attachProperties = function (match, location, names, rawName) {\r\n  if (rawName && !names) {\r\n    location[rawName] = toIntIfInt(match[1]);\r\n  }\r\n  else {\r\n    for (var i = 0; i < names.length; i += 1) {\r\n      if (match[i+1] != null) {\r\n        location[names[i]] = toIntIfInt(match[i+1]);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nvar parseReg = function (obj, location, content) {\r\n  var needsBlank = obj.name && obj.names;\r\n  if (obj.push && !location[obj.push]) {\r\n    location[obj.push] = [];\r\n  }\r\n  else if (needsBlank && !location[obj.name]) {\r\n    location[obj.name] = {};\r\n  }\r\n  var keyLocation = obj.push ?\r\n    {} :  // blank object that will be pushed\r\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\r\n\r\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\r\n\r\n  if (obj.push) {\r\n    location[obj.push].push(keyLocation);\r\n  }\r\n};\r\n\r\nvar grammar = __webpack_require__(/*! ./grammar */ \"./node_modules/sdp-interop/node_modules/sdp-transform/lib/grammar.js\");\r\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\r\n\r\nexports.parse = function (sdp) {\r\n  var session = {}\r\n    , media = []\r\n    , location = session; // points at where properties go under (one of the above)\r\n\r\n  // parse lines we understand\r\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\r\n    var type = l[0];\r\n    var content = l.slice(2);\r\n    if (type === 'm') {\r\n      media.push({rtp: [], fmtp: []});\r\n      location = media[media.length-1]; // point at latest media line\r\n    }\r\n\r\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\r\n      var obj = grammar[type][j];\r\n      if (obj.reg.test(content)) {\r\n        return parseReg(obj, location, content);\r\n      }\r\n    }\r\n  });\r\n\r\n  session.media = media; // link it up\r\n  return session;\r\n};\r\n\r\nvar paramReducer = function (acc, expr) {\r\n  var s = expr.split(/=(.+)/, 2);\r\n  if (s.length === 2) {\r\n    acc[s[0]] = toIntIfInt(s[1]);\r\n  }\r\n  return acc;\r\n};\r\n\r\nexports.parseParams = function (str) {\r\n  return str.split(/\\;\\s?/).reduce(paramReducer, {});\r\n};\r\n\r\n// For backward compatibility - alias will be removed in 3.0.0\r\nexports.parseFmtpConfig = exports.parseParams;\r\n\r\nexports.parsePayloads = function (str) {\r\n  return str.split(' ').map(Number);\r\n};\r\n\r\nexports.parseRemoteCandidates = function (str) {\r\n  var candidates = [];\r\n  var parts = str.split(' ').map(toIntIfInt);\r\n  for (var i = 0; i < parts.length; i += 3) {\r\n    candidates.push({\r\n      component: parts[i],\r\n      ip: parts[i + 1],\r\n      port: parts[i + 2]\r\n    });\r\n  }\r\n  return candidates;\r\n};\r\n\r\nexports.parseImageAttributes = function (str) {\r\n  return str.split(' ').map(function (item) {\r\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\r\n  });\r\n};\r\n\r\nexports.parseSimulcastStreamList = function (str) {\r\n  return str.split(';').map(function (stream) {\r\n    return stream.split(',').map(function (format) {\r\n      var scid, paused = false;\r\n\r\n      if (format[0] !== '~') {\r\n        scid = toIntIfInt(format);\r\n      } else {\r\n        scid = toIntIfInt(format.substring(1, format.length));\r\n        paused = true;\r\n      }\r\n\r\n      return {\r\n        scid: scid,\r\n        paused: paused\r\n      };\r\n    });\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-interop/node_modules/sdp-transform/lib/writer.js\":\r\n/*!***************************************************************************!*\\\r\n  !*** ./node_modules/sdp-interop/node_modules/sdp-transform/lib/writer.js ***!\r\n  \\***************************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar grammar = __webpack_require__(/*! ./grammar */ \"./node_modules/sdp-interop/node_modules/sdp-transform/lib/grammar.js\");\r\n\r\n// customized util.format - discards excess arguments and can void middle ones\r\nvar formatRegExp = /%[sdv%]/g;\r\nvar format = function (formatStr) {\r\n  var i = 1;\r\n  var args = arguments;\r\n  var len = args.length;\r\n  return formatStr.replace(formatRegExp, function (x) {\r\n    if (i >= len) {\r\n      return x; // missing argument\r\n    }\r\n    var arg = args[i];\r\n    i += 1;\r\n    switch (x) {\r\n    case '%%':\r\n      return '%';\r\n    case '%s':\r\n      return String(arg);\r\n    case '%d':\r\n      return Number(arg);\r\n    case '%v':\r\n      return '';\r\n    }\r\n  });\r\n  // NB: we discard excess arguments - they are typically undefined from makeLine\r\n};\r\n\r\nvar makeLine = function (type, obj, location) {\r\n  var str = obj.format instanceof Function ?\r\n    (obj.format(obj.push ? location : location[obj.name])) :\r\n    obj.format;\r\n\r\n  var args = [type + '=' + str];\r\n  if (obj.names) {\r\n    for (var i = 0; i < obj.names.length; i += 1) {\r\n      var n = obj.names[i];\r\n      if (obj.name) {\r\n        args.push(location[obj.name][n]);\r\n      }\r\n      else { // for mLine and push attributes\r\n        args.push(location[obj.names[i]]);\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    args.push(location[obj.name]);\r\n  }\r\n  return format.apply(null, args);\r\n};\r\n\r\n// RFC specified order\r\n// TODO: extend this with all the rest\r\nvar defaultOuterOrder = [\r\n  'v', 'o', 's', 'i',\r\n  'u', 'e', 'p', 'c',\r\n  'b', 't', 'r', 'z', 'a'\r\n];\r\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\r\n\r\n\r\nmodule.exports = function (session, opts) {\r\n  opts = opts || {};\r\n  // ensure certain properties exist\r\n  if (session.version == null) {\r\n    session.version = 0; // 'v=0' must be there (only defined version atm)\r\n  }\r\n  if (session.name == null) {\r\n    session.name = ' '; // 's= ' must be there if no meaningful name set\r\n  }\r\n  session.media.forEach(function (mLine) {\r\n    if (mLine.payloads == null) {\r\n      mLine.payloads = '';\r\n    }\r\n  });\r\n\r\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\r\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\r\n  var sdp = [];\r\n\r\n  // loop through outerOrder for matching properties on session\r\n  outerOrder.forEach(function (type) {\r\n    grammar[type].forEach(function (obj) {\r\n      if (obj.name in session && session[obj.name] != null) {\r\n        sdp.push(makeLine(type, obj, session));\r\n      }\r\n      else if (obj.push in session && session[obj.push] != null) {\r\n        session[obj.push].forEach(function (el) {\r\n          sdp.push(makeLine(type, obj, el));\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // then for each media line, follow the innerOrder\r\n  session.media.forEach(function (mLine) {\r\n    sdp.push(makeLine('m', grammar.m[0], mLine));\r\n\r\n    innerOrder.forEach(function (type) {\r\n      grammar[type].forEach(function (obj) {\r\n        if (obj.name in mLine && mLine[obj.name] != null) {\r\n          sdp.push(makeLine(type, obj, mLine));\r\n        }\r\n        else if (obj.push in mLine && mLine[obj.push] != null) {\r\n          mLine[obj.push].forEach(function (el) {\r\n            sdp.push(makeLine(type, obj, el));\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  return sdp.join('\\r\\n') + '\\r\\n';\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-transform/lib/grammar.js\":\r\n/*!***************************************************!*\\\r\n  !*** ./node_modules/sdp-transform/lib/grammar.js ***!\r\n  \\***************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nvar grammar = module.exports = {\r\n  v: [{\r\n    name: 'version',\r\n    reg: /^(\\d*)$/\r\n  }],\r\n  o: [{\r\n    // o=- 20518 0 IN IP4 203.0.113.1\r\n    // NB: sessionId will be a String in most cases because it is huge\r\n    name: 'origin',\r\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\r\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\r\n    format: '%s %s %d %s IP%d %s'\r\n  }],\r\n  // default parsing of these only (though some of these feel outdated)\r\n  s: [{ name: 'name' }],\r\n  i: [{ name: 'description' }],\r\n  u: [{ name: 'uri' }],\r\n  e: [{ name: 'email' }],\r\n  p: [{ name: 'phone' }],\r\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\r\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\r\n  // k: [{}], // outdated thing ignored\r\n  t: [{\r\n    // t=0 0\r\n    name: 'timing',\r\n    reg: /^(\\d*) (\\d*)/,\r\n    names: ['start', 'stop'],\r\n    format: '%d %d'\r\n  }],\r\n  c: [{\r\n    // c=IN IP4 10.47.197.26\r\n    name: 'connection',\r\n    reg: /^IN IP(\\d) (\\S*)/,\r\n    names: ['version', 'ip'],\r\n    format: 'IN IP%d %s'\r\n  }],\r\n  b: [{\r\n    // b=AS:4000\r\n    push: 'bandwidth',\r\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\r\n    names: ['type', 'limit'],\r\n    format: '%s:%s'\r\n  }],\r\n  m: [{\r\n    // m=video 51744 RTP/AVP 126 97 98 34 31\r\n    // NB: special - pushes to session\r\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\r\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\r\n    names: ['type', 'port', 'protocol', 'payloads'],\r\n    format: '%s %d %s %s'\r\n  }],\r\n  a: [\r\n    {\r\n      // a=rtpmap:110 opus/48000/2\r\n      push: 'rtp',\r\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\r\n      names: ['payload', 'codec', 'rate', 'encoding'],\r\n      format: function (o) {\r\n        return (o.encoding)\r\n          ? 'rtpmap:%d %s/%s/%s'\r\n          : o.rate\r\n            ? 'rtpmap:%d %s/%s'\r\n            : 'rtpmap:%d %s';\r\n      }\r\n    },\r\n    {\r\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\r\n      // a=fmtp:111 minptime=10; useinbandfec=1\r\n      push: 'fmtp',\r\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\r\n      names: ['payload', 'config'],\r\n      format: 'fmtp:%d %s'\r\n    },\r\n    {\r\n      // a=control:streamid=0\r\n      name: 'control',\r\n      reg: /^control:(.*)/,\r\n      format: 'control:%s'\r\n    },\r\n    {\r\n      // a=rtcp:65179 IN IP4 193.84.77.194\r\n      name: 'rtcp',\r\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\r\n      names: ['port', 'netType', 'ipVer', 'address'],\r\n      format: function (o) {\r\n        return (o.address != null)\r\n          ? 'rtcp:%d %s IP%d %s'\r\n          : 'rtcp:%d';\r\n      }\r\n    },\r\n    {\r\n      // a=rtcp-fb:98 trr-int 100\r\n      push: 'rtcpFbTrrInt',\r\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\r\n      names: ['payload', 'value'],\r\n      format: 'rtcp-fb:%d trr-int %d'\r\n    },\r\n    {\r\n      // a=rtcp-fb:98 nack rpsi\r\n      push: 'rtcpFb',\r\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\r\n      names: ['payload', 'type', 'subtype'],\r\n      format: function (o) {\r\n        return (o.subtype != null)\r\n          ? 'rtcp-fb:%s %s %s'\r\n          : 'rtcp-fb:%s %s';\r\n      }\r\n    },\r\n    {\r\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\r\n      // a=extmap:1/recvonly URI-gps-string\r\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\r\n      push: 'ext',\r\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\r\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\r\n      format: function (o) {\r\n        return (\r\n          'extmap:%d' +\r\n          (o.direction ? '/%s' : '%v') +\r\n          (o['encrypt-uri'] ? ' %s' : '%v') +\r\n          ' %s' +\r\n          (o.config ? ' %s' : '')\r\n        );\r\n      }\r\n    },\r\n    {\r\n      // a=extmap-allow-mixed\r\n      name: 'extmapAllowMixed',\r\n      reg: /^(extmap-allow-mixed)/\r\n    },\r\n    {\r\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\r\n      push: 'crypto',\r\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\r\n      names: ['id', 'suite', 'config', 'sessionConfig'],\r\n      format: function (o) {\r\n        return (o.sessionConfig != null)\r\n          ? 'crypto:%d %s %s %s'\r\n          : 'crypto:%d %s %s';\r\n      }\r\n    },\r\n    {\r\n      // a=setup:actpass\r\n      name: 'setup',\r\n      reg: /^setup:(\\w*)/,\r\n      format: 'setup:%s'\r\n    },\r\n    {\r\n      // a=connection:new\r\n      name: 'connectionType',\r\n      reg: /^connection:(new|existing)/,\r\n      format: 'connection:%s'\r\n    },\r\n    {\r\n      // a=mid:1\r\n      name: 'mid',\r\n      reg: /^mid:([^\\s]*)/,\r\n      format: 'mid:%s'\r\n    },\r\n    {\r\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\r\n      name: 'msid',\r\n      reg: /^msid:(.*)/,\r\n      format: 'msid:%s'\r\n    },\r\n    {\r\n      // a=ptime:20\r\n      name: 'ptime',\r\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\r\n      format: 'ptime:%d'\r\n    },\r\n    {\r\n      // a=maxptime:60\r\n      name: 'maxptime',\r\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\r\n      format: 'maxptime:%d'\r\n    },\r\n    {\r\n      // a=sendrecv\r\n      name: 'direction',\r\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\r\n    },\r\n    {\r\n      // a=ice-lite\r\n      name: 'icelite',\r\n      reg: /^(ice-lite)/\r\n    },\r\n    {\r\n      // a=ice-ufrag:F7gI\r\n      name: 'iceUfrag',\r\n      reg: /^ice-ufrag:(\\S*)/,\r\n      format: 'ice-ufrag:%s'\r\n    },\r\n    {\r\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\r\n      name: 'icePwd',\r\n      reg: /^ice-pwd:(\\S*)/,\r\n      format: 'ice-pwd:%s'\r\n    },\r\n    {\r\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\r\n      name: 'fingerprint',\r\n      reg: /^fingerprint:(\\S*) (\\S*)/,\r\n      names: ['type', 'hash'],\r\n      format: 'fingerprint:%s %s'\r\n    },\r\n    {\r\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\r\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\r\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\r\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\r\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\r\n      push:'candidates',\r\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\r\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\r\n      format: function (o) {\r\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\r\n\r\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\r\n\r\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\r\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\r\n\r\n        if (o.generation != null) {\r\n          str += ' generation %d';\r\n        }\r\n\r\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\r\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\r\n        return str;\r\n      }\r\n    },\r\n    {\r\n      // a=end-of-candidates (keep after the candidates line for readability)\r\n      name: 'endOfCandidates',\r\n      reg: /^(end-of-candidates)/\r\n    },\r\n    {\r\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\r\n      name: 'remoteCandidates',\r\n      reg: /^remote-candidates:(.*)/,\r\n      format: 'remote-candidates:%s'\r\n    },\r\n    {\r\n      // a=ice-options:google-ice\r\n      name: 'iceOptions',\r\n      reg: /^ice-options:(\\S*)/,\r\n      format: 'ice-options:%s'\r\n    },\r\n    {\r\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\r\n      push: 'ssrcs',\r\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\r\n      names: ['id', 'attribute', 'value'],\r\n      format: function (o) {\r\n        var str = 'ssrc:%d';\r\n        if (o.attribute != null) {\r\n          str += ' %s';\r\n          if (o.value != null) {\r\n            str += ':%s';\r\n          }\r\n        }\r\n        return str;\r\n      }\r\n    },\r\n    {\r\n      // a=ssrc-group:FEC 1 2\r\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\r\n      push: 'ssrcGroups',\r\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\r\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\r\n      names: ['semantics', 'ssrcs'],\r\n      format: 'ssrc-group:%s %s'\r\n    },\r\n    {\r\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\r\n      name: 'msidSemantic',\r\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\r\n      names: ['semantic', 'token'],\r\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\r\n    },\r\n    {\r\n      // a=group:BUNDLE audio video\r\n      push: 'groups',\r\n      reg: /^group:(\\w*) (.*)/,\r\n      names: ['type', 'mids'],\r\n      format: 'group:%s %s'\r\n    },\r\n    {\r\n      // a=rtcp-mux\r\n      name: 'rtcpMux',\r\n      reg: /^(rtcp-mux)/\r\n    },\r\n    {\r\n      // a=rtcp-rsize\r\n      name: 'rtcpRsize',\r\n      reg: /^(rtcp-rsize)/\r\n    },\r\n    {\r\n      // a=sctpmap:5000 webrtc-datachannel 1024\r\n      name: 'sctpmap',\r\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\r\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\r\n      format: function (o) {\r\n        return (o.maxMessageSize != null)\r\n          ? 'sctpmap:%s %s %s'\r\n          : 'sctpmap:%s %s';\r\n      }\r\n    },\r\n    {\r\n      // a=x-google-flag:conference\r\n      name: 'xGoogleFlag',\r\n      reg: /^x-google-flag:([^\\s]*)/,\r\n      format: 'x-google-flag:%s'\r\n    },\r\n    {\r\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\r\n      push: 'rids',\r\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\r\n      names: ['id', 'direction', 'params'],\r\n      format: function (o) {\r\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\r\n      }\r\n    },\r\n    {\r\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\r\n      // a=imageattr:* send [x=800,y=640] recv *\r\n      // a=imageattr:100 recv [x=320,y=240]\r\n      push: 'imageattrs',\r\n      reg: new RegExp(\r\n        // a=imageattr:97\r\n        '^imageattr:(\\\\d+|\\\\*)' +\r\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\r\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\r\n        // recv [x=330,y=250]\r\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\r\n      ),\r\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\r\n      format: function (o) {\r\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\r\n      }\r\n    },\r\n    {\r\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\r\n      // a=simulcast:recv 1;4,5 send 6;7\r\n      name: 'simulcast',\r\n      reg: new RegExp(\r\n        // a=simulcast:\r\n        '^simulcast:' +\r\n        // send 1,2,3;~4,~5\r\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\r\n        // space + recv 6;~7,~8\r\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\r\n        // end\r\n        '$'\r\n      ),\r\n      names: ['dir1', 'list1', 'dir2', 'list2'],\r\n      format: function (o) {\r\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\r\n      }\r\n    },\r\n    {\r\n      // old simulcast draft 03 (implemented by Firefox)\r\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\r\n      // a=simulcast: recv pt=97;98 send pt=97\r\n      // a=simulcast: send rid=5;6;7 paused=6,7\r\n      name: 'simulcast_03',\r\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\r\n      names: ['value'],\r\n      format: 'simulcast: %s'\r\n    },\r\n    {\r\n      // a=framerate:25\r\n      // a=framerate:29.97\r\n      name: 'framerate',\r\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\r\n      format: 'framerate:%s'\r\n    },\r\n    {\r\n      // RFC4570\r\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\r\n      name: 'sourceFilter',\r\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\r\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\r\n      format: 'source-filter: %s %s %s %s %s'\r\n    },\r\n    {\r\n      // a=bundle-only\r\n      name: 'bundleOnly',\r\n      reg: /^(bundle-only)/\r\n    },\r\n    {\r\n      // a=label:1\r\n      name: 'label',\r\n      reg: /^label:(.+)/,\r\n      format: 'label:%s'\r\n    },\r\n    {\r\n      // RFC version 26 for SCTP over DTLS\r\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\r\n      name: 'sctpPort',\r\n      reg: /^sctp-port:(\\d+)$/,\r\n      format: 'sctp-port:%s'\r\n    },\r\n    {\r\n      // RFC version 26 for SCTP over DTLS\r\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\r\n      name: 'maxMessageSize',\r\n      reg: /^max-message-size:(\\d+)$/,\r\n      format: 'max-message-size:%s'\r\n    },\r\n    {\r\n      // RFC7273\r\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\r\n      push:'tsRefClocks',\r\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\r\n      names: ['clksrc', 'clksrcExt'],\r\n      format: function (o) {\r\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\r\n      }\r\n    },\r\n    {\r\n      // RFC7273\r\n      // a=mediaclk:direct=963214424\r\n      name:'mediaClk',\r\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\r\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\r\n      format: function (o) {\r\n        var str = 'mediaclk:';\r\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\r\n        str += (o.mediaClockValue != null ? '=%s' : '');\r\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\r\n        str += (o.rateDenominator != null ? '/%s' : '');\r\n        return str;\r\n      }\r\n    },\r\n    {\r\n      // a=keywds:keywords\r\n      name: 'keywords',\r\n      reg: /^keywds:(.+)$/,\r\n      format: 'keywds:%s'\r\n    },\r\n    {\r\n      // a=content:main\r\n      name: 'content',\r\n      reg: /^content:(.+)/,\r\n      format: 'content:%s'\r\n    },\r\n    // BFCP https://tools.ietf.org/html/rfc4583\r\n    {\r\n      // a=floorctrl:c-s\r\n      name: 'bfcpFloorCtrl',\r\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\r\n      format: 'floorctrl:%s'\r\n    },\r\n    {\r\n      // a=confid:1\r\n      name: 'bfcpConfId',\r\n      reg: /^confid:(\\d+)/,\r\n      format: 'confid:%s'\r\n    },\r\n    {\r\n      // a=userid:1\r\n      name: 'bfcpUserId',\r\n      reg: /^userid:(\\d+)/,\r\n      format: 'userid:%s'\r\n    },\r\n    {\r\n      // a=floorid:1\r\n      name: 'bfcpFloorId',\r\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\r\n      names: ['id', 'mStream'],\r\n      format: 'floorid:%s mstrm:%s'\r\n    },\r\n    {\r\n      // any a= that we don't understand is kept verbatim on media.invalid\r\n      push: 'invalid',\r\n      names: ['value']\r\n    }\r\n  ]\r\n};\r\n\r\n// set sensible defaults to avoid polluting the grammar with boring details\r\nObject.keys(grammar).forEach(function (key) {\r\n  var objs = grammar[key];\r\n  objs.forEach(function (obj) {\r\n    if (!obj.reg) {\r\n      obj.reg = /(.*)/;\r\n    }\r\n    if (!obj.format) {\r\n      obj.format = '%s';\r\n    }\r\n  });\r\n});\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-transform/lib/index.js\":\r\n/*!*************************************************!*\\\r\n  !*** ./node_modules/sdp-transform/lib/index.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar parser = __webpack_require__(/*! ./parser */ \"./node_modules/sdp-transform/lib/parser.js\");\r\nvar writer = __webpack_require__(/*! ./writer */ \"./node_modules/sdp-transform/lib/writer.js\");\r\n\r\nexports.write = writer;\r\nexports.parse = parser.parse;\r\nexports.parseParams = parser.parseParams;\r\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\r\nexports.parsePayloads = parser.parsePayloads;\r\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\r\nexports.parseImageAttributes = parser.parseImageAttributes;\r\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-transform/lib/parser.js\":\r\n/*!**************************************************!*\\\r\n  !*** ./node_modules/sdp-transform/lib/parser.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar toIntIfInt = function (v) {\r\n  return String(Number(v)) === v ? Number(v) : v;\r\n};\r\n\r\nvar attachProperties = function (match, location, names, rawName) {\r\n  if (rawName && !names) {\r\n    location[rawName] = toIntIfInt(match[1]);\r\n  }\r\n  else {\r\n    for (var i = 0; i < names.length; i += 1) {\r\n      if (match[i+1] != null) {\r\n        location[names[i]] = toIntIfInt(match[i+1]);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nvar parseReg = function (obj, location, content) {\r\n  var needsBlank = obj.name && obj.names;\r\n  if (obj.push && !location[obj.push]) {\r\n    location[obj.push] = [];\r\n  }\r\n  else if (needsBlank && !location[obj.name]) {\r\n    location[obj.name] = {};\r\n  }\r\n  var keyLocation = obj.push ?\r\n    {} :  // blank object that will be pushed\r\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\r\n\r\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\r\n\r\n  if (obj.push) {\r\n    location[obj.push].push(keyLocation);\r\n  }\r\n};\r\n\r\nvar grammar = __webpack_require__(/*! ./grammar */ \"./node_modules/sdp-transform/lib/grammar.js\");\r\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\r\n\r\nexports.parse = function (sdp) {\r\n  var session = {}\r\n    , media = []\r\n    , location = session; // points at where properties go under (one of the above)\r\n\r\n  // parse lines we understand\r\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\r\n    var type = l[0];\r\n    var content = l.slice(2);\r\n    if (type === 'm') {\r\n      media.push({rtp: [], fmtp: []});\r\n      location = media[media.length-1]; // point at latest media line\r\n    }\r\n\r\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\r\n      var obj = grammar[type][j];\r\n      if (obj.reg.test(content)) {\r\n        return parseReg(obj, location, content);\r\n      }\r\n    }\r\n  });\r\n\r\n  session.media = media; // link it up\r\n  return session;\r\n};\r\n\r\nvar paramReducer = function (acc, expr) {\r\n  var s = expr.split(/=(.+)/, 2);\r\n  if (s.length === 2) {\r\n    acc[s[0]] = toIntIfInt(s[1]);\r\n  } else if (s.length === 1 && expr.length > 1) {\r\n    acc[s[0]] = undefined;\r\n  }\r\n  return acc;\r\n};\r\n\r\nexports.parseParams = function (str) {\r\n  return str.split(/;\\s?/).reduce(paramReducer, {});\r\n};\r\n\r\n// For backward compatibility - alias will be removed in 3.0.0\r\nexports.parseFmtpConfig = exports.parseParams;\r\n\r\nexports.parsePayloads = function (str) {\r\n  return str.toString().split(' ').map(Number);\r\n};\r\n\r\nexports.parseRemoteCandidates = function (str) {\r\n  var candidates = [];\r\n  var parts = str.split(' ').map(toIntIfInt);\r\n  for (var i = 0; i < parts.length; i += 3) {\r\n    candidates.push({\r\n      component: parts[i],\r\n      ip: parts[i + 1],\r\n      port: parts[i + 2]\r\n    });\r\n  }\r\n  return candidates;\r\n};\r\n\r\nexports.parseImageAttributes = function (str) {\r\n  return str.split(' ').map(function (item) {\r\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\r\n  });\r\n};\r\n\r\nexports.parseSimulcastStreamList = function (str) {\r\n  return str.split(';').map(function (stream) {\r\n    return stream.split(',').map(function (format) {\r\n      var scid, paused = false;\r\n\r\n      if (format[0] !== '~') {\r\n        scid = toIntIfInt(format);\r\n      } else {\r\n        scid = toIntIfInt(format.substring(1, format.length));\r\n        paused = true;\r\n      }\r\n\r\n      return {\r\n        scid: scid,\r\n        paused: paused\r\n      };\r\n    });\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/sdp-transform/lib/writer.js\":\r\n/*!**************************************************!*\\\r\n  !*** ./node_modules/sdp-transform/lib/writer.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar grammar = __webpack_require__(/*! ./grammar */ \"./node_modules/sdp-transform/lib/grammar.js\");\r\n\r\n// customized util.format - discards excess arguments and can void middle ones\r\nvar formatRegExp = /%[sdv%]/g;\r\nvar format = function (formatStr) {\r\n  var i = 1;\r\n  var args = arguments;\r\n  var len = args.length;\r\n  return formatStr.replace(formatRegExp, function (x) {\r\n    if (i >= len) {\r\n      return x; // missing argument\r\n    }\r\n    var arg = args[i];\r\n    i += 1;\r\n    switch (x) {\r\n    case '%%':\r\n      return '%';\r\n    case '%s':\r\n      return String(arg);\r\n    case '%d':\r\n      return Number(arg);\r\n    case '%v':\r\n      return '';\r\n    }\r\n  });\r\n  // NB: we discard excess arguments - they are typically undefined from makeLine\r\n};\r\n\r\nvar makeLine = function (type, obj, location) {\r\n  var str = obj.format instanceof Function ?\r\n    (obj.format(obj.push ? location : location[obj.name])) :\r\n    obj.format;\r\n\r\n  var args = [type + '=' + str];\r\n  if (obj.names) {\r\n    for (var i = 0; i < obj.names.length; i += 1) {\r\n      var n = obj.names[i];\r\n      if (obj.name) {\r\n        args.push(location[obj.name][n]);\r\n      }\r\n      else { // for mLine and push attributes\r\n        args.push(location[obj.names[i]]);\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    args.push(location[obj.name]);\r\n  }\r\n  return format.apply(null, args);\r\n};\r\n\r\n// RFC specified order\r\n// TODO: extend this with all the rest\r\nvar defaultOuterOrder = [\r\n  'v', 'o', 's', 'i',\r\n  'u', 'e', 'p', 'c',\r\n  'b', 't', 'r', 'z', 'a'\r\n];\r\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\r\n\r\n\r\nmodule.exports = function (session, opts) {\r\n  opts = opts || {};\r\n  // ensure certain properties exist\r\n  if (session.version == null) {\r\n    session.version = 0; // 'v=0' must be there (only defined version atm)\r\n  }\r\n  if (session.name == null) {\r\n    session.name = ' '; // 's= ' must be there if no meaningful name set\r\n  }\r\n  session.media.forEach(function (mLine) {\r\n    if (mLine.payloads == null) {\r\n      mLine.payloads = '';\r\n    }\r\n  });\r\n\r\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\r\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\r\n  var sdp = [];\r\n\r\n  // loop through outerOrder for matching properties on session\r\n  outerOrder.forEach(function (type) {\r\n    grammar[type].forEach(function (obj) {\r\n      if (obj.name in session && session[obj.name] != null) {\r\n        sdp.push(makeLine(type, obj, session));\r\n      }\r\n      else if (obj.push in session && session[obj.push] != null) {\r\n        session[obj.push].forEach(function (el) {\r\n          sdp.push(makeLine(type, obj, el));\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // then for each media line, follow the innerOrder\r\n  session.media.forEach(function (mLine) {\r\n    sdp.push(makeLine('m', grammar.m[0], mLine));\r\n\r\n    innerOrder.forEach(function (type) {\r\n      grammar[type].forEach(function (obj) {\r\n        if (obj.name in mLine && mLine[obj.name] != null) {\r\n          sdp.push(makeLine(type, obj, mLine));\r\n        }\r\n        else if (obj.push in mLine && mLine[obj.push] != null) {\r\n          mLine[obj.push].forEach(function (el) {\r\n            sdp.push(makeLine(type, obj, el));\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  return sdp.join('\\r\\n') + '\\r\\n';\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-client/lib/index.js\":\r\n/*!****************************************************!*\\\r\n  !*** ./node_modules/socket.io-client/lib/index.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar url = __webpack_require__(/*! ./url */ \"./node_modules/socket.io-client/lib/url.js\");\r\nvar parser = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/index.js\");\r\nvar Manager = __webpack_require__(/*! ./manager */ \"./node_modules/socket.io-client/lib/manager.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")('socket.io-client');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = lookup;\r\n\r\n/**\r\n * Managers cache.\r\n */\r\n\r\nvar cache = exports.managers = {};\r\n\r\n/**\r\n * Looks up an existing `Manager` for multiplexing.\r\n * If the user summons:\r\n *\r\n *   `io('http://localhost/a');`\r\n *   `io('http://localhost/b');`\r\n *\r\n * We reuse the existing instance based on same scheme/port/host,\r\n * and we initialize sockets for each namespace.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction lookup (uri, opts) {\r\n  if (typeof uri === 'object') {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n\r\n  opts = opts || {};\r\n\r\n  var parsed = url(uri);\r\n  var source = parsed.source;\r\n  var id = parsed.id;\r\n  var path = parsed.path;\r\n  var sameNamespace = cache[id] && path in cache[id].nsps;\r\n  var newConnection = opts.forceNew || opts['force new connection'] ||\r\n                      false === opts.multiplex || sameNamespace;\r\n\r\n  var io;\r\n\r\n  if (newConnection) {\r\n    debug('ignoring socket cache for %s', source);\r\n    io = Manager(source, opts);\r\n  } else {\r\n    if (!cache[id]) {\r\n      debug('new io instance for %s', source);\r\n      cache[id] = Manager(source, opts);\r\n    }\r\n    io = cache[id];\r\n  }\r\n  if (parsed.query && !opts.query) {\r\n    opts.query = parsed.query;\r\n  }\r\n  return io.socket(parsed.path, opts);\r\n}\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.protocol = parser.protocol;\r\n\r\n/**\r\n * `connect`.\r\n *\r\n * @param {String} uri\r\n * @api public\r\n */\r\n\r\nexports.connect = lookup;\r\n\r\n/**\r\n * Expose constructors for standalone build.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.Manager = __webpack_require__(/*! ./manager */ \"./node_modules/socket.io-client/lib/manager.js\");\r\nexports.Socket = __webpack_require__(/*! ./socket */ \"./node_modules/socket.io-client/lib/socket.js\");\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-client/lib/manager.js\":\r\n/*!******************************************************!*\\\r\n  !*** ./node_modules/socket.io-client/lib/manager.js ***!\r\n  \\******************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar eio = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/lib/index.js\");\r\nvar Socket = __webpack_require__(/*! ./socket */ \"./node_modules/socket.io-client/lib/socket.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\r\nvar parser = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/index.js\");\r\nvar on = __webpack_require__(/*! ./on */ \"./node_modules/socket.io-client/lib/on.js\");\r\nvar bind = __webpack_require__(/*! component-bind */ \"./node_modules/component-bind/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")('socket.io-client:manager');\r\nvar indexOf = __webpack_require__(/*! indexof */ \"./node_modules/indexof/index.js\");\r\nvar Backoff = __webpack_require__(/*! backo2 */ \"./node_modules/backo2/index.js\");\r\n\r\n/**\r\n * IE6+ hasOwnProperty\r\n */\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Module exports\r\n */\r\n\r\nmodule.exports = Manager;\r\n\r\n/**\r\n * `Manager` constructor.\r\n *\r\n * @param {String} engine instance or engine uri/opts\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Manager (uri, opts) {\r\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\r\n  if (uri && ('object' === typeof uri)) {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n  opts = opts || {};\r\n\r\n  opts.path = opts.path || '/socket.io';\r\n  this.nsps = {};\r\n  this.subs = [];\r\n  this.opts = opts;\r\n  this.reconnection(opts.reconnection !== false);\r\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\r\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\r\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\r\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\r\n  this.backoff = new Backoff({\r\n    min: this.reconnectionDelay(),\r\n    max: this.reconnectionDelayMax(),\r\n    jitter: this.randomizationFactor()\r\n  });\r\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\r\n  this.readyState = 'closed';\r\n  this.uri = uri;\r\n  this.connecting = [];\r\n  this.lastPing = null;\r\n  this.encoding = false;\r\n  this.packetBuffer = [];\r\n  var _parser = opts.parser || parser;\r\n  this.encoder = new _parser.Encoder();\r\n  this.decoder = new _parser.Decoder();\r\n  this.autoConnect = opts.autoConnect !== false;\r\n  if (this.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Propagate given event to sockets and emit on `this`\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.emitAll = function () {\r\n  this.emit.apply(this, arguments);\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Update `socket.id` of all sockets\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.updateSocketIds = function () {\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].id = this.generateId(nsp);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * generate `socket.id` for the given `nsp`\r\n *\r\n * @param {String} nsp\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nManager.prototype.generateId = function (nsp) {\r\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\r\n};\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Manager.prototype);\r\n\r\n/**\r\n * Sets the `reconnection` config.\r\n *\r\n * @param {Boolean} true/false if it should automatically reconnect\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnection = function (v) {\r\n  if (!arguments.length) return this._reconnection;\r\n  this._reconnection = !!v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the reconnection attempts config.\r\n *\r\n * @param {Number} max reconnection attempts before giving up\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionAttempts = function (v) {\r\n  if (!arguments.length) return this._reconnectionAttempts;\r\n  this._reconnectionAttempts = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelay = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelay;\r\n  this._reconnectionDelay = v;\r\n  this.backoff && this.backoff.setMin(v);\r\n  return this;\r\n};\r\n\r\nManager.prototype.randomizationFactor = function (v) {\r\n  if (!arguments.length) return this._randomizationFactor;\r\n  this._randomizationFactor = v;\r\n  this.backoff && this.backoff.setJitter(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the maximum delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelayMax = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelayMax;\r\n  this._reconnectionDelayMax = v;\r\n  this.backoff && this.backoff.setMax(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the connection timeout. `false` to disable\r\n *\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.timeout = function (v) {\r\n  if (!arguments.length) return this._timeout;\r\n  this._timeout = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Starts trying to reconnect if reconnection is enabled and we have not\r\n * started reconnecting yet\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.maybeReconnectOnOpen = function () {\r\n  // Only try to reconnect if it's the first time we're connecting\r\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\r\n    // keeps reconnection from firing twice for the same reconnection loop\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Sets the current transport `socket`.\r\n *\r\n * @param {Function} optional, callback\r\n * @return {Manager} self\r\n * @api public\r\n */\r\n\r\nManager.prototype.open =\r\nManager.prototype.connect = function (fn, opts) {\r\n  debug('readyState %s', this.readyState);\r\n  if (~this.readyState.indexOf('open')) return this;\r\n\r\n  debug('opening %s', this.uri);\r\n  this.engine = eio(this.uri, this.opts);\r\n  var socket = this.engine;\r\n  var self = this;\r\n  this.readyState = 'opening';\r\n  this.skipReconnect = false;\r\n\r\n  // emit `open`\r\n  var openSub = on(socket, 'open', function () {\r\n    self.onopen();\r\n    fn && fn();\r\n  });\r\n\r\n  // emit `connect_error`\r\n  var errorSub = on(socket, 'error', function (data) {\r\n    debug('connect_error');\r\n    self.cleanup();\r\n    self.readyState = 'closed';\r\n    self.emitAll('connect_error', data);\r\n    if (fn) {\r\n      var err = new Error('Connection error');\r\n      err.data = data;\r\n      fn(err);\r\n    } else {\r\n      // Only do this if there is no fn to handle the error\r\n      self.maybeReconnectOnOpen();\r\n    }\r\n  });\r\n\r\n  // emit `connect_timeout`\r\n  if (false !== this._timeout) {\r\n    var timeout = this._timeout;\r\n    debug('connect attempt will timeout after %d', timeout);\r\n\r\n    // set timer\r\n    var timer = setTimeout(function () {\r\n      debug('connect attempt timed out after %d', timeout);\r\n      openSub.destroy();\r\n      socket.close();\r\n      socket.emit('error', 'timeout');\r\n      self.emitAll('connect_timeout', timeout);\r\n    }, timeout);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n\r\n  this.subs.push(openSub);\r\n  this.subs.push(errorSub);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon transport open.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onopen = function () {\r\n  debug('open');\r\n\r\n  // clear old subs\r\n  this.cleanup();\r\n\r\n  // mark as open\r\n  this.readyState = 'open';\r\n  this.emit('open');\r\n\r\n  // add new subs\r\n  var socket = this.engine;\r\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\r\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\r\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\r\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\r\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\r\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\r\n};\r\n\r\n/**\r\n * Called upon a ping.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onping = function () {\r\n  this.lastPing = new Date();\r\n  this.emitAll('ping');\r\n};\r\n\r\n/**\r\n * Called upon a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onpong = function () {\r\n  this.emitAll('pong', new Date() - this.lastPing);\r\n};\r\n\r\n/**\r\n * Called with data.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondata = function (data) {\r\n  this.decoder.add(data);\r\n};\r\n\r\n/**\r\n * Called when parser fully decodes a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondecoded = function (packet) {\r\n  this.emit('packet', packet);\r\n};\r\n\r\n/**\r\n * Called upon socket error.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onerror = function (err) {\r\n  debug('error', err);\r\n  this.emitAll('error', err);\r\n};\r\n\r\n/**\r\n * Creates a new socket for the given `nsp`.\r\n *\r\n * @return {Socket}\r\n * @api public\r\n */\r\n\r\nManager.prototype.socket = function (nsp, opts) {\r\n  var socket = this.nsps[nsp];\r\n  if (!socket) {\r\n    socket = new Socket(this, nsp, opts);\r\n    this.nsps[nsp] = socket;\r\n    var self = this;\r\n    socket.on('connecting', onConnecting);\r\n    socket.on('connect', function () {\r\n      socket.id = self.generateId(nsp);\r\n    });\r\n\r\n    if (this.autoConnect) {\r\n      // manually call here since connecting event is fired before listening\r\n      onConnecting();\r\n    }\r\n  }\r\n\r\n  function onConnecting () {\r\n    if (!~indexOf(self.connecting, socket)) {\r\n      self.connecting.push(socket);\r\n    }\r\n  }\r\n\r\n  return socket;\r\n};\r\n\r\n/**\r\n * Called upon a socket close.\r\n *\r\n * @param {Socket} socket\r\n */\r\n\r\nManager.prototype.destroy = function (socket) {\r\n  var index = indexOf(this.connecting, socket);\r\n  if (~index) this.connecting.splice(index, 1);\r\n  if (this.connecting.length) return;\r\n\r\n  this.close();\r\n};\r\n\r\n/**\r\n * Writes a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nManager.prototype.packet = function (packet) {\r\n  debug('writing packet %j', packet);\r\n  var self = this;\r\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\r\n\r\n  if (!self.encoding) {\r\n    // encode, then write to engine with result\r\n    self.encoding = true;\r\n    this.encoder.encode(packet, function (encodedPackets) {\r\n      for (var i = 0; i < encodedPackets.length; i++) {\r\n        self.engine.write(encodedPackets[i], packet.options);\r\n      }\r\n      self.encoding = false;\r\n      self.processPacketQueue();\r\n    });\r\n  } else { // add packet to the queue\r\n    self.packetBuffer.push(packet);\r\n  }\r\n};\r\n\r\n/**\r\n * If packet buffer is non-empty, begins encoding the\r\n * next packet in line.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.processPacketQueue = function () {\r\n  if (this.packetBuffer.length > 0 && !this.encoding) {\r\n    var pack = this.packetBuffer.shift();\r\n    this.packet(pack);\r\n  }\r\n};\r\n\r\n/**\r\n * Clean up transport subscriptions and packet buffer.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.cleanup = function () {\r\n  debug('cleanup');\r\n\r\n  var subsLength = this.subs.length;\r\n  for (var i = 0; i < subsLength; i++) {\r\n    var sub = this.subs.shift();\r\n    sub.destroy();\r\n  }\r\n\r\n  this.packetBuffer = [];\r\n  this.encoding = false;\r\n  this.lastPing = null;\r\n\r\n  this.decoder.destroy();\r\n};\r\n\r\n/**\r\n * Close the current socket.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.close =\r\nManager.prototype.disconnect = function () {\r\n  debug('disconnect');\r\n  this.skipReconnect = true;\r\n  this.reconnecting = false;\r\n  if ('opening' === this.readyState) {\r\n    // `onclose` will not fire because\r\n    // an open event never happened\r\n    this.cleanup();\r\n  }\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  if (this.engine) this.engine.close();\r\n};\r\n\r\n/**\r\n * Called upon engine close.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onclose = function (reason) {\r\n  debug('onclose');\r\n\r\n  this.cleanup();\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  this.emit('close', reason);\r\n\r\n  if (this._reconnection && !this.skipReconnect) {\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Attempt a reconnection.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.reconnect = function () {\r\n  if (this.reconnecting || this.skipReconnect) return this;\r\n\r\n  var self = this;\r\n\r\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\r\n    debug('reconnect failed');\r\n    this.backoff.reset();\r\n    this.emitAll('reconnect_failed');\r\n    this.reconnecting = false;\r\n  } else {\r\n    var delay = this.backoff.duration();\r\n    debug('will wait %dms before reconnect attempt', delay);\r\n\r\n    this.reconnecting = true;\r\n    var timer = setTimeout(function () {\r\n      if (self.skipReconnect) return;\r\n\r\n      debug('attempting reconnect');\r\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\r\n      self.emitAll('reconnecting', self.backoff.attempts);\r\n\r\n      // check again for the case socket closed in above events\r\n      if (self.skipReconnect) return;\r\n\r\n      self.open(function (err) {\r\n        if (err) {\r\n          debug('reconnect attempt error');\r\n          self.reconnecting = false;\r\n          self.reconnect();\r\n          self.emitAll('reconnect_error', err.data);\r\n        } else {\r\n          debug('reconnect success');\r\n          self.onreconnect();\r\n        }\r\n      });\r\n    }, delay);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful reconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onreconnect = function () {\r\n  var attempt = this.backoff.attempts;\r\n  this.reconnecting = false;\r\n  this.backoff.reset();\r\n  this.updateSocketIds();\r\n  this.emitAll('reconnect', attempt);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-client/lib/on.js\":\r\n/*!*************************************************!*\\\r\n  !*** ./node_modules/socket.io-client/lib/on.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = on;\r\n\r\n/**\r\n * Helper for subscriptions.\r\n *\r\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\r\n * @param {String} event name\r\n * @param {Function} callback\r\n * @api public\r\n */\r\n\r\nfunction on (obj, ev, fn) {\r\n  obj.on(ev, fn);\r\n  return {\r\n    destroy: function () {\r\n      obj.removeListener(ev, fn);\r\n    }\r\n  };\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-client/lib/socket.js\":\r\n/*!*****************************************************!*\\\r\n  !*** ./node_modules/socket.io-client/lib/socket.js ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/index.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\r\nvar toArray = __webpack_require__(/*! to-array */ \"./node_modules/to-array/index.js\");\r\nvar on = __webpack_require__(/*! ./on */ \"./node_modules/socket.io-client/lib/on.js\");\r\nvar bind = __webpack_require__(/*! component-bind */ \"./node_modules/component-bind/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")('socket.io-client:socket');\r\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\r\nvar hasBin = __webpack_require__(/*! has-binary2 */ \"./node_modules/has-binary2/index.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = Socket;\r\n\r\n/**\r\n * Internal events (blacklisted).\r\n * These events can't be emitted by the user.\r\n *\r\n * @api private\r\n */\r\n\r\nvar events = {\r\n  connect: 1,\r\n  connect_error: 1,\r\n  connect_timeout: 1,\r\n  connecting: 1,\r\n  disconnect: 1,\r\n  error: 1,\r\n  reconnect: 1,\r\n  reconnect_attempt: 1,\r\n  reconnect_failed: 1,\r\n  reconnect_error: 1,\r\n  reconnecting: 1,\r\n  ping: 1,\r\n  pong: 1\r\n};\r\n\r\n/**\r\n * Shortcut to `Emitter#emit`.\r\n */\r\n\r\nvar emit = Emitter.prototype.emit;\r\n\r\n/**\r\n * `Socket` constructor.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Socket (io, nsp, opts) {\r\n  this.io = io;\r\n  this.nsp = nsp;\r\n  this.json = this; // compat\r\n  this.ids = 0;\r\n  this.acks = {};\r\n  this.receiveBuffer = [];\r\n  this.sendBuffer = [];\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  this.flags = {};\r\n  if (opts && opts.query) {\r\n    this.query = opts.query;\r\n  }\r\n  if (this.io.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Subscribe to open, close and packet events\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.subEvents = function () {\r\n  if (this.subs) return;\r\n\r\n  var io = this.io;\r\n  this.subs = [\r\n    on(io, 'open', bind(this, 'onopen')),\r\n    on(io, 'packet', bind(this, 'onpacket')),\r\n    on(io, 'close', bind(this, 'onclose'))\r\n  ];\r\n};\r\n\r\n/**\r\n * \"Opens\" the socket.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.prototype.open =\r\nSocket.prototype.connect = function () {\r\n  if (this.connected) return this;\r\n\r\n  this.subEvents();\r\n  this.io.open(); // ensure open\r\n  if ('open' === this.io.readyState) this.onopen();\r\n  this.emit('connecting');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a `message` event.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.send = function () {\r\n  var args = toArray(arguments);\r\n  args.unshift('message');\r\n  this.emit.apply(this, args);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Override `emit`.\r\n * If the event is in `events`, it's emitted normally.\r\n *\r\n * @param {String} event name\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.emit = function (ev) {\r\n  if (events.hasOwnProperty(ev)) {\r\n    emit.apply(this, arguments);\r\n    return this;\r\n  }\r\n\r\n  var args = toArray(arguments);\r\n  var packet = {\r\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\r\n    data: args\r\n  };\r\n\r\n  packet.options = {};\r\n  packet.options.compress = !this.flags || false !== this.flags.compress;\r\n\r\n  // event ack callback\r\n  if ('function' === typeof args[args.length - 1]) {\r\n    debug('emitting packet with ack id %d', this.ids);\r\n    this.acks[this.ids] = args.pop();\r\n    packet.id = this.ids++;\r\n  }\r\n\r\n  if (this.connected) {\r\n    this.packet(packet);\r\n  } else {\r\n    this.sendBuffer.push(packet);\r\n  }\r\n\r\n  this.flags = {};\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.packet = function (packet) {\r\n  packet.nsp = this.nsp;\r\n  this.io.packet(packet);\r\n};\r\n\r\n/**\r\n * Called upon engine `open`.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onopen = function () {\r\n  debug('transport is open - connecting');\r\n\r\n  // write connect packet if necessary\r\n  if ('/' !== this.nsp) {\r\n    if (this.query) {\r\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\r\n      debug('sending connect packet with query %s', query);\r\n      this.packet({type: parser.CONNECT, query: query});\r\n    } else {\r\n      this.packet({type: parser.CONNECT});\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon engine `close`.\r\n *\r\n * @param {String} reason\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onclose = function (reason) {\r\n  debug('close (%s)', reason);\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  delete this.id;\r\n  this.emit('disconnect', reason);\r\n};\r\n\r\n/**\r\n * Called with socket packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onpacket = function (packet) {\r\n  var sameNamespace = packet.nsp === this.nsp;\r\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\r\n\r\n  if (!sameNamespace && !rootNamespaceError) return;\r\n\r\n  switch (packet.type) {\r\n    case parser.CONNECT:\r\n      this.onconnect();\r\n      break;\r\n\r\n    case parser.EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.BINARY_EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.BINARY_ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.DISCONNECT:\r\n      this.ondisconnect();\r\n      break;\r\n\r\n    case parser.ERROR:\r\n      this.emit('error', packet.data);\r\n      break;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon a server event.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onevent = function (packet) {\r\n  var args = packet.data || [];\r\n  debug('emitting event %j', args);\r\n\r\n  if (null != packet.id) {\r\n    debug('attaching ack callback to event');\r\n    args.push(this.ack(packet.id));\r\n  }\r\n\r\n  if (this.connected) {\r\n    emit.apply(this, args);\r\n  } else {\r\n    this.receiveBuffer.push(args);\r\n  }\r\n};\r\n\r\n/**\r\n * Produces an ack callback to emit with an event.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ack = function (id) {\r\n  var self = this;\r\n  var sent = false;\r\n  return function () {\r\n    // prevent double callbacks\r\n    if (sent) return;\r\n    sent = true;\r\n    var args = toArray(arguments);\r\n    debug('sending ack %j', args);\r\n\r\n    self.packet({\r\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\r\n      id: id,\r\n      data: args\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * Called upon a server acknowlegement.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onack = function (packet) {\r\n  var ack = this.acks[packet.id];\r\n  if ('function' === typeof ack) {\r\n    debug('calling ack %s with %j', packet.id, packet.data);\r\n    ack.apply(this, packet.data);\r\n    delete this.acks[packet.id];\r\n  } else {\r\n    debug('bad ack %s', packet.id);\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon server connect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onconnect = function () {\r\n  this.connected = true;\r\n  this.disconnected = false;\r\n  this.emit('connect');\r\n  this.emitBuffered();\r\n};\r\n\r\n/**\r\n * Emit buffered events (received and emitted).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.emitBuffered = function () {\r\n  var i;\r\n  for (i = 0; i < this.receiveBuffer.length; i++) {\r\n    emit.apply(this, this.receiveBuffer[i]);\r\n  }\r\n  this.receiveBuffer = [];\r\n\r\n  for (i = 0; i < this.sendBuffer.length; i++) {\r\n    this.packet(this.sendBuffer[i]);\r\n  }\r\n  this.sendBuffer = [];\r\n};\r\n\r\n/**\r\n * Called upon server disconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ondisconnect = function () {\r\n  debug('server disconnect (%s)', this.nsp);\r\n  this.destroy();\r\n  this.onclose('io server disconnect');\r\n};\r\n\r\n/**\r\n * Called upon forced client/server side disconnections,\r\n * this method ensures the manager stops tracking us and\r\n * that reconnections don't get triggered for this.\r\n *\r\n * @api private.\r\n */\r\n\r\nSocket.prototype.destroy = function () {\r\n  if (this.subs) {\r\n    // clean subscriptions to avoid reconnections\r\n    for (var i = 0; i < this.subs.length; i++) {\r\n      this.subs[i].destroy();\r\n    }\r\n    this.subs = null;\r\n  }\r\n\r\n  this.io.destroy(this);\r\n};\r\n\r\n/**\r\n * Disconnects the socket manually.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.close =\r\nSocket.prototype.disconnect = function () {\r\n  if (this.connected) {\r\n    debug('performing disconnect (%s)', this.nsp);\r\n    this.packet({ type: parser.DISCONNECT });\r\n  }\r\n\r\n  // remove socket from pool\r\n  this.destroy();\r\n\r\n  if (this.connected) {\r\n    // fire events\r\n    this.onclose('io client disconnect');\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the compress flag.\r\n *\r\n * @param {Boolean} if `true`, compresses the sending data\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.compress = function (compress) {\r\n  this.flags.compress = compress;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the binary flag\r\n *\r\n * @param {Boolean} whether the emitted data contains binary\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.binary = function (binary) {\r\n  this.flags.binary = binary;\r\n  return this;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-client/lib/url.js\":\r\n/*!**************************************************!*\\\r\n  !*** ./node_modules/socket.io-client/lib/url.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parseuri = __webpack_require__(/*! parseuri */ \"./node_modules/parseuri/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")('socket.io-client:url');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = url;\r\n\r\n/**\r\n * URL parser.\r\n *\r\n * @param {String} url\r\n * @param {Object} An object meant to mimic window.location.\r\n *                 Defaults to window.location.\r\n * @api public\r\n */\r\n\r\nfunction url (uri, loc) {\r\n  var obj = uri;\r\n\r\n  // default to window.location\r\n  loc = loc || (typeof location !== 'undefined' && location);\r\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\r\n\r\n  // relative path support\r\n  if ('string' === typeof uri) {\r\n    if ('/' === uri.charAt(0)) {\r\n      if ('/' === uri.charAt(1)) {\r\n        uri = loc.protocol + uri;\r\n      } else {\r\n        uri = loc.host + uri;\r\n      }\r\n    }\r\n\r\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\r\n      debug('protocol-less url %s', uri);\r\n      if ('undefined' !== typeof loc) {\r\n        uri = loc.protocol + '//' + uri;\r\n      } else {\r\n        uri = 'https://' + uri;\r\n      }\r\n    }\r\n\r\n    // parse\r\n    debug('parse %s', uri);\r\n    obj = parseuri(uri);\r\n  }\r\n\r\n  // make sure we treat `localhost:80` and `localhost` equally\r\n  if (!obj.port) {\r\n    if (/^(http|ws)$/.test(obj.protocol)) {\r\n      obj.port = '80';\r\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\r\n      obj.port = '443';\r\n    }\r\n  }\r\n\r\n  obj.path = obj.path || '/';\r\n\r\n  var ipv6 = obj.host.indexOf(':') !== -1;\r\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\r\n\r\n  // define unique id\r\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\r\n  // define href\r\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\r\n\r\n  return obj;\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-parser/binary.js\":\r\n/*!*************************************************!*\\\r\n  !*** ./node_modules/socket.io-parser/binary.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/*global Blob,File*/\r\n\r\n/**\r\n * Module requirements\r\n */\r\n\r\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\r\nvar isBuf = __webpack_require__(/*! ./is-buffer */ \"./node_modules/socket.io-parser/is-buffer.js\");\r\nvar toString = Object.prototype.toString;\r\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\r\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\r\n\r\n/**\r\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\r\n * Anything with blobs or files should be fed through removeBlobs before coming\r\n * here.\r\n *\r\n * @param {Object} packet - socket.io event packet\r\n * @return {Object} with deconstructed packet and list of buffers\r\n * @api public\r\n */\r\n\r\nexports.deconstructPacket = function(packet) {\r\n  var buffers = [];\r\n  var packetData = packet.data;\r\n  var pack = packet;\r\n  pack.data = _deconstructPacket(packetData, buffers);\r\n  pack.attachments = buffers.length; // number of binary 'attachments'\r\n  return {packet: pack, buffers: buffers};\r\n};\r\n\r\nfunction _deconstructPacket(data, buffers) {\r\n  if (!data) return data;\r\n\r\n  if (isBuf(data)) {\r\n    var placeholder = { _placeholder: true, num: buffers.length };\r\n    buffers.push(data);\r\n    return placeholder;\r\n  } else if (isArray(data)) {\r\n    var newData = new Array(data.length);\r\n    for (var i = 0; i < data.length; i++) {\r\n      newData[i] = _deconstructPacket(data[i], buffers);\r\n    }\r\n    return newData;\r\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\r\n    var newData = {};\r\n    for (var key in data) {\r\n      newData[key] = _deconstructPacket(data[key], buffers);\r\n    }\r\n    return newData;\r\n  }\r\n  return data;\r\n}\r\n\r\n/**\r\n * Reconstructs a binary packet from its placeholder packet and buffers\r\n *\r\n * @param {Object} packet - event packet with placeholders\r\n * @param {Array} buffers - binary buffers to put in placeholder positions\r\n * @return {Object} reconstructed packet\r\n * @api public\r\n */\r\n\r\nexports.reconstructPacket = function(packet, buffers) {\r\n  packet.data = _reconstructPacket(packet.data, buffers);\r\n  packet.attachments = undefined; // no longer useful\r\n  return packet;\r\n};\r\n\r\nfunction _reconstructPacket(data, buffers) {\r\n  if (!data) return data;\r\n\r\n  if (data && data._placeholder) {\r\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\r\n  } else if (isArray(data)) {\r\n    for (var i = 0; i < data.length; i++) {\r\n      data[i] = _reconstructPacket(data[i], buffers);\r\n    }\r\n  } else if (typeof data === 'object') {\r\n    for (var key in data) {\r\n      data[key] = _reconstructPacket(data[key], buffers);\r\n    }\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Asynchronously removes Blobs or Files from data via\r\n * FileReader's readAsArrayBuffer method. Used before encoding\r\n * data as msgpack. Calls callback with the blobless data.\r\n *\r\n * @param {Object} data\r\n * @param {Function} callback\r\n * @api private\r\n */\r\n\r\nexports.removeBlobs = function(data, callback) {\r\n  function _removeBlobs(obj, curKey, containingObject) {\r\n    if (!obj) return obj;\r\n\r\n    // convert any blob\r\n    if ((withNativeBlob && obj instanceof Blob) ||\r\n        (withNativeFile && obj instanceof File)) {\r\n      pendingBlobs++;\r\n\r\n      // async filereader\r\n      var fileReader = new FileReader();\r\n      fileReader.onload = function() { // this.result == arraybuffer\r\n        if (containingObject) {\r\n          containingObject[curKey] = this.result;\r\n        }\r\n        else {\r\n          bloblessData = this.result;\r\n        }\r\n\r\n        // if nothing pending its callback time\r\n        if(! --pendingBlobs) {\r\n          callback(bloblessData);\r\n        }\r\n      };\r\n\r\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\r\n    } else if (isArray(obj)) { // handle array\r\n      for (var i = 0; i < obj.length; i++) {\r\n        _removeBlobs(obj[i], i, obj);\r\n      }\r\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\r\n      for (var key in obj) {\r\n        _removeBlobs(obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n\r\n  var pendingBlobs = 0;\r\n  var bloblessData = data;\r\n  _removeBlobs(bloblessData);\r\n  if (!pendingBlobs) {\r\n    callback(bloblessData);\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-parser/index.js\":\r\n/*!************************************************!*\\\r\n  !*** ./node_modules/socket.io-parser/index.js ***!\r\n  \\************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-parser/node_modules/debug/src/browser.js\")('socket.io-parser');\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\r\nvar binary = __webpack_require__(/*! ./binary */ \"./node_modules/socket.io-parser/binary.js\");\r\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\r\nvar isBuf = __webpack_require__(/*! ./is-buffer */ \"./node_modules/socket.io-parser/is-buffer.js\");\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.protocol = 4;\r\n\r\n/**\r\n * Packet types.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.types = [\r\n  'CONNECT',\r\n  'DISCONNECT',\r\n  'EVENT',\r\n  'ACK',\r\n  'ERROR',\r\n  'BINARY_EVENT',\r\n  'BINARY_ACK'\r\n];\r\n\r\n/**\r\n * Packet type `connect`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.CONNECT = 0;\r\n\r\n/**\r\n * Packet type `disconnect`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.DISCONNECT = 1;\r\n\r\n/**\r\n * Packet type `event`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.EVENT = 2;\r\n\r\n/**\r\n * Packet type `ack`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.ACK = 3;\r\n\r\n/**\r\n * Packet type `error`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.ERROR = 4;\r\n\r\n/**\r\n * Packet type 'binary event'\r\n *\r\n * @api public\r\n */\r\n\r\nexports.BINARY_EVENT = 5;\r\n\r\n/**\r\n * Packet type `binary ack`. For acks with binary arguments.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.BINARY_ACK = 6;\r\n\r\n/**\r\n * Encoder constructor.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.Encoder = Encoder;\r\n\r\n/**\r\n * Decoder constructor.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.Decoder = Decoder;\r\n\r\n/**\r\n * A socket.io Encoder instance\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Encoder() {}\r\n\r\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\r\n\r\n/**\r\n * Encode a packet as a single string if non-binary, or as a\r\n * buffer sequence, depending on packet type.\r\n *\r\n * @param {Object} obj - packet object\r\n * @param {Function} callback - function to handle encodings (likely engine.write)\r\n * @return Calls callback with Array of encodings\r\n * @api public\r\n */\r\n\r\nEncoder.prototype.encode = function(obj, callback){\r\n  debug('encoding packet %j', obj);\r\n\r\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\r\n    encodeAsBinary(obj, callback);\r\n  } else {\r\n    var encoding = encodeAsString(obj);\r\n    callback([encoding]);\r\n  }\r\n};\r\n\r\n/**\r\n * Encode packet as string.\r\n *\r\n * @param {Object} packet\r\n * @return {String} encoded\r\n * @api private\r\n */\r\n\r\nfunction encodeAsString(obj) {\r\n\r\n  // first is type\r\n  var str = '' + obj.type;\r\n\r\n  // attachments if we have them\r\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\r\n    str += obj.attachments + '-';\r\n  }\r\n\r\n  // if we have a namespace other than `/`\r\n  // we append it followed by a comma `,`\r\n  if (obj.nsp && '/' !== obj.nsp) {\r\n    str += obj.nsp + ',';\r\n  }\r\n\r\n  // immediately followed by the id\r\n  if (null != obj.id) {\r\n    str += obj.id;\r\n  }\r\n\r\n  // json data\r\n  if (null != obj.data) {\r\n    var payload = tryStringify(obj.data);\r\n    if (payload !== false) {\r\n      str += payload;\r\n    } else {\r\n      return ERROR_PACKET;\r\n    }\r\n  }\r\n\r\n  debug('encoded %j as %s', obj, str);\r\n  return str;\r\n}\r\n\r\nfunction tryStringify(str) {\r\n  try {\r\n    return JSON.stringify(str);\r\n  } catch(e){\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Encode packet as 'buffer sequence' by removing blobs, and\r\n * deconstructing packet into object with placeholders and\r\n * a list of buffers.\r\n *\r\n * @param {Object} packet\r\n * @return {Buffer} encoded\r\n * @api private\r\n */\r\n\r\nfunction encodeAsBinary(obj, callback) {\r\n\r\n  function writeEncoding(bloblessData) {\r\n    var deconstruction = binary.deconstructPacket(bloblessData);\r\n    var pack = encodeAsString(deconstruction.packet);\r\n    var buffers = deconstruction.buffers;\r\n\r\n    buffers.unshift(pack); // add packet info to beginning of data list\r\n    callback(buffers); // write all the buffers\r\n  }\r\n\r\n  binary.removeBlobs(obj, writeEncoding);\r\n}\r\n\r\n/**\r\n * A socket.io Decoder instance\r\n *\r\n * @return {Object} decoder\r\n * @api public\r\n */\r\n\r\nfunction Decoder() {\r\n  this.reconstructor = null;\r\n}\r\n\r\n/**\r\n * Mix in `Emitter` with Decoder.\r\n */\r\n\r\nEmitter(Decoder.prototype);\r\n\r\n/**\r\n * Decodes an encoded packet string into packet JSON.\r\n *\r\n * @param {String} obj - encoded packet\r\n * @return {Object} packet\r\n * @api public\r\n */\r\n\r\nDecoder.prototype.add = function(obj) {\r\n  var packet;\r\n  if (typeof obj === 'string') {\r\n    packet = decodeString(obj);\r\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\r\n      this.reconstructor = new BinaryReconstructor(packet);\r\n\r\n      // no attachments, labeled binary but no binary data to follow\r\n      if (this.reconstructor.reconPack.attachments === 0) {\r\n        this.emit('decoded', packet);\r\n      }\r\n    } else { // non-binary full packet\r\n      this.emit('decoded', packet);\r\n    }\r\n  } else if (isBuf(obj) || obj.base64) { // raw binary data\r\n    if (!this.reconstructor) {\r\n      throw new Error('got binary data when not reconstructing a packet');\r\n    } else {\r\n      packet = this.reconstructor.takeBinaryData(obj);\r\n      if (packet) { // received final buffer\r\n        this.reconstructor = null;\r\n        this.emit('decoded', packet);\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Unknown type: ' + obj);\r\n  }\r\n};\r\n\r\n/**\r\n * Decode a packet String (JSON data)\r\n *\r\n * @param {String} str\r\n * @return {Object} packet\r\n * @api private\r\n */\r\n\r\nfunction decodeString(str) {\r\n  var i = 0;\r\n  // look up type\r\n  var p = {\r\n    type: Number(str.charAt(0))\r\n  };\r\n\r\n  if (null == exports.types[p.type]) {\r\n    return error('unknown packet type ' + p.type);\r\n  }\r\n\r\n  // look up attachments if type binary\r\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\r\n    var buf = '';\r\n    while (str.charAt(++i) !== '-') {\r\n      buf += str.charAt(i);\r\n      if (i == str.length) break;\r\n    }\r\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\r\n      throw new Error('Illegal attachments');\r\n    }\r\n    p.attachments = Number(buf);\r\n  }\r\n\r\n  // look up namespace (if any)\r\n  if ('/' === str.charAt(i + 1)) {\r\n    p.nsp = '';\r\n    while (++i) {\r\n      var c = str.charAt(i);\r\n      if (',' === c) break;\r\n      p.nsp += c;\r\n      if (i === str.length) break;\r\n    }\r\n  } else {\r\n    p.nsp = '/';\r\n  }\r\n\r\n  // look up id\r\n  var next = str.charAt(i + 1);\r\n  if ('' !== next && Number(next) == next) {\r\n    p.id = '';\r\n    while (++i) {\r\n      var c = str.charAt(i);\r\n      if (null == c || Number(c) != c) {\r\n        --i;\r\n        break;\r\n      }\r\n      p.id += str.charAt(i);\r\n      if (i === str.length) break;\r\n    }\r\n    p.id = Number(p.id);\r\n  }\r\n\r\n  // look up json data\r\n  if (str.charAt(++i)) {\r\n    var payload = tryParse(str.substr(i));\r\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\r\n    if (isPayloadValid) {\r\n      p.data = payload;\r\n    } else {\r\n      return error('invalid payload');\r\n    }\r\n  }\r\n\r\n  debug('decoded %s as %j', str, p);\r\n  return p;\r\n}\r\n\r\nfunction tryParse(str) {\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch(e){\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Deallocates a parser's resources\r\n *\r\n * @api public\r\n */\r\n\r\nDecoder.prototype.destroy = function() {\r\n  if (this.reconstructor) {\r\n    this.reconstructor.finishedReconstruction();\r\n  }\r\n};\r\n\r\n/**\r\n * A manager of a binary event's 'buffer sequence'. Should\r\n * be constructed whenever a packet of type BINARY_EVENT is\r\n * decoded.\r\n *\r\n * @param {Object} packet\r\n * @return {BinaryReconstructor} initialized reconstructor\r\n * @api private\r\n */\r\n\r\nfunction BinaryReconstructor(packet) {\r\n  this.reconPack = packet;\r\n  this.buffers = [];\r\n}\r\n\r\n/**\r\n * Method to be called when binary data received from connection\r\n * after a BINARY_EVENT packet.\r\n *\r\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\r\n * @return {null | Object} returns null if more binary data is expected or\r\n *   a reconstructed packet object if all buffers have been received.\r\n * @api private\r\n */\r\n\r\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\r\n  this.buffers.push(binData);\r\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\r\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\r\n    this.finishedReconstruction();\r\n    return packet;\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Cleans up binary packet reconstruction variables.\r\n *\r\n * @api private\r\n */\r\n\r\nBinaryReconstructor.prototype.finishedReconstruction = function() {\r\n  this.reconPack = null;\r\n  this.buffers = [];\r\n};\r\n\r\nfunction error(msg) {\r\n  return {\r\n    type: exports.ERROR,\r\n    data: 'parser error: ' + msg\r\n  };\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-parser/is-buffer.js\":\r\n/*!****************************************************!*\\\r\n  !*** ./node_modules/socket.io-parser/is-buffer.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/* WEBPACK VAR INJECTION */(function(Buffer) {\r\nmodule.exports = isBuf;\r\n\r\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\r\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\r\n\r\nvar isView = function (obj) {\r\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\r\n};\r\n\r\n/**\r\n * Returns true if obj is a buffer or an arraybuffer.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction isBuf(obj) {\r\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\r\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\r\n}\r\n\r\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-parser/node_modules/debug/src/browser.js\":\r\n/*!*************************************************************************!*\\\r\n  !*** ./node_modules/socket.io-parser/node_modules/debug/src/browser.js ***!\r\n  \\*************************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/* WEBPACK VAR INJECTION */(function(process) {/**\r\n * This is the web browser implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/socket.io-parser/node_modules/debug/src/debug.js\");\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = 'undefined' != typeof chrome\r\n               && 'undefined' != typeof chrome.storage\r\n                  ? chrome.storage.local\r\n                  : localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\r\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\r\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\r\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\r\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\r\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\r\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\r\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\r\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\r\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\r\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\nfunction useColors() {\r\n  // NB: In an Electron preload script, document will be defined but not fully\r\n  // initialized. Since we know we're in Chrome, we'll just detect this case\r\n  // explicitly\r\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\r\n    return true;\r\n  }\r\n\r\n  // Internet Explorer and Edge do not support colors.\r\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n    return false;\r\n  }\r\n\r\n  // is webkit? http://stackoverflow.com/a/16459606/376773\r\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n    // is firebug? http://stackoverflow.com/a/398120/376773\r\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n    // is firefox >= v31?\r\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n    // double check webkit in userAgent just in case we are in a worker\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nexports.formatters.j = function(v) {\r\n  try {\r\n    return JSON.stringify(v);\r\n  } catch (err) {\r\n    return '[UnexpectedJSONParseError]: ' + err.message;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var useColors = this.useColors;\r\n\r\n  args[0] = (useColors ? '%c' : '')\r\n    + this.namespace\r\n    + (useColors ? ' %c' : ' ')\r\n    + args[0]\r\n    + (useColors ? '%c ' : ' ')\r\n    + '+' + exports.humanize(this.diff);\r\n\r\n  if (!useColors) return;\r\n\r\n  var c = 'color: ' + this.color;\r\n  args.splice(1, 0, c, 'color: inherit')\r\n\r\n  // the final \"%c\" is somewhat tricky, because there could be other\r\n  // arguments passed either before or after the %c, so we need to\r\n  // figure out the correct index to insert the CSS into\r\n  var index = 0;\r\n  var lastC = 0;\r\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\r\n    if ('%%' === match) return;\r\n    index++;\r\n    if ('%c' === match) {\r\n      // we only are interested in the *last* %c\r\n      // (the user may have provided their own)\r\n      lastC = index;\r\n    }\r\n  });\r\n\r\n  args.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\n\r\nfunction log() {\r\n  // this hackery is required for IE8/9, where\r\n  // the `console.log` function doesn't have 'apply'\r\n  return 'object' === typeof console\r\n    && console.log\r\n    && Function.prototype.apply.call(console.log, console, arguments);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  try {\r\n    if (null == namespaces) {\r\n      exports.storage.removeItem('debug');\r\n    } else {\r\n      exports.storage.debug = namespaces;\r\n    }\r\n  } catch(e) {}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  var r;\r\n  try {\r\n    r = exports.storage.debug;\r\n  } catch(e) {}\r\n\r\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\r\n    r = process.env.DEBUG;\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `localStorage.debug` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n  try {\r\n    return window.localStorage;\r\n  } catch (e) {}\r\n}\r\n\r\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-parser/node_modules/debug/src/debug.js\":\r\n/*!***********************************************************************!*\\\r\n  !*** ./node_modules/socket.io-parser/node_modules/debug/src/debug.js ***!\r\n  \\***********************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\r\nexports.coerce = coerce;\r\nexports.disable = disable;\r\nexports.enable = enable;\r\nexports.enabled = enabled;\r\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/socket.io-parser/node_modules/ms/index.js\");\r\n\r\n/**\r\n * Active `debug` instances.\r\n */\r\nexports.instances = [];\r\n\r\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\r\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\r\n\r\nexports.formatters = {};\r\n\r\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction selectColor(namespace) {\r\n  var hash = 0, i;\r\n\r\n  for (i in namespace) {\r\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n\r\n  return exports.colors[Math.abs(hash) % exports.colors.length];\r\n}\r\n\r\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction createDebug(namespace) {\r\n\r\n  var prevTime;\r\n\r\n  function debug() {\r\n    // disabled?\r\n    if (!debug.enabled) return;\r\n\r\n    var self = debug;\r\n\r\n    // set `diff` timestamp\r\n    var curr = +new Date();\r\n    var ms = curr - (prevTime || curr);\r\n    self.diff = ms;\r\n    self.prev = prevTime;\r\n    self.curr = curr;\r\n    prevTime = curr;\r\n\r\n    // turn the `arguments` into a proper Array\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n\r\n    args[0] = exports.coerce(args[0]);\r\n\r\n    if ('string' !== typeof args[0]) {\r\n      // anything else let's inspect with %O\r\n      args.unshift('%O');\r\n    }\r\n\r\n    // apply any `formatters` transformations\r\n    var index = 0;\r\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\r\n      // if we encounter an escaped % then don't increase the array index\r\n      if (match === '%%') return match;\r\n      index++;\r\n      var formatter = exports.formatters[format];\r\n      if ('function' === typeof formatter) {\r\n        var val = args[index];\r\n        match = formatter.call(self, val);\r\n\r\n        // now we need to remove `args[index]` since it's inlined in the `format`\r\n        args.splice(index, 1);\r\n        index--;\r\n      }\r\n      return match;\r\n    });\r\n\r\n    // apply env-specific formatting (colors, etc.)\r\n    exports.formatArgs.call(self, args);\r\n\r\n    var logFn = debug.log || exports.log || console.log.bind(console);\r\n    logFn.apply(self, args);\r\n  }\r\n\r\n  debug.namespace = namespace;\r\n  debug.enabled = exports.enabled(namespace);\r\n  debug.useColors = exports.useColors();\r\n  debug.color = selectColor(namespace);\r\n  debug.destroy = destroy;\r\n\r\n  // env-specific initialization logic for debug instances\r\n  if ('function' === typeof exports.init) {\r\n    exports.init(debug);\r\n  }\r\n\r\n  exports.instances.push(debug);\r\n\r\n  return debug;\r\n}\r\n\r\nfunction destroy () {\r\n  var index = exports.instances.indexOf(this);\r\n  if (index !== -1) {\r\n    exports.instances.splice(index, 1);\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\r\n\r\nfunction enable(namespaces) {\r\n  exports.save(namespaces);\r\n\r\n  exports.names = [];\r\n  exports.skips = [];\r\n\r\n  var i;\r\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r\n  for (i = 0; i < len; i++) {\r\n    if (!split[i]) continue; // ignore empty strings\r\n    namespaces = split[i].replace(/\\*/g, '.*?');\r\n    if (namespaces[0] === '-') {\r\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n    } else {\r\n      exports.names.push(new RegExp('^' + namespaces + '$'));\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < exports.instances.length; i++) {\r\n    var instance = exports.instances[i];\r\n    instance.enabled = exports.enabled(instance.namespace);\r\n  }\r\n}\r\n\r\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction disable() {\r\n  exports.enable('');\r\n}\r\n\r\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction enabled(name) {\r\n  if (name[name.length - 1] === '*') {\r\n    return true;\r\n  }\r\n  var i, len;\r\n  for (i = 0, len = exports.skips.length; i < len; i++) {\r\n    if (exports.skips[i].test(name)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.names.length; i < len; i++) {\r\n    if (exports.names[i].test(name)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\r\n\r\nfunction coerce(val) {\r\n  if (val instanceof Error) return val.stack || val.message;\r\n  return val;\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/socket.io-parser/node_modules/ms/index.js\":\r\n/*!****************************************************************!*\\\r\n  !*** ./node_modules/socket.io-parser/node_modules/ms/index.js ***!\r\n  \\****************************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isNaN(val) === false) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  if (ms >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (ms >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (ms >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (ms >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  return plural(ms, d, 'day') ||\r\n    plural(ms, h, 'hour') ||\r\n    plural(ms, m, 'minute') ||\r\n    plural(ms, s, 'second') ||\r\n    ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, n, name) {\r\n  if (ms < n) {\r\n    return;\r\n  }\r\n  if (ms < n * 1.5) {\r\n    return Math.floor(ms / n) + ' ' + name;\r\n  }\r\n  return Math.ceil(ms / n) + ' ' + name + 's';\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/split-on-first/index.js\":\r\n/*!**********************************************!*\\\r\n  !*** ./node_modules/split-on-first/index.js ***!\r\n  \\**********************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = (string, separator) => {\r\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\r\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\r\n\t}\r\n\r\n\tif (separator === '') {\r\n\t\treturn [string];\r\n\t}\r\n\r\n\tconst separatorIndex = string.indexOf(separator);\r\n\r\n\tif (separatorIndex === -1) {\r\n\t\treturn [string];\r\n\t}\r\n\r\n\treturn [\r\n\t\tstring.slice(0, separatorIndex),\r\n\t\tstring.slice(separatorIndex + separator.length)\r\n\t];\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/strict-uri-encode/index.js\":\r\n/*!*************************************************!*\\\r\n  !*** ./node_modules/strict-uri-encode/index.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/to-array/index.js\":\r\n/*!****************************************!*\\\r\n  !*** ./node_modules/to-array/index.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = toArray\r\n\r\nfunction toArray(list, index) {\r\n    var array = []\r\n\r\n    index = index || 0\r\n\r\n    for (var i = index || 0; i < list.length; i++) {\r\n        array[i - index] = list[i]\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/webpack/buildin/global.js\":\r\n/*!***********************************!*\\\r\n  !*** (webpack)/buildin/global.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || new Function(\"return this\")();\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./node_modules/yeast/index.js\":\r\n/*!*************************************!*\\\r\n  !*** ./node_modules/yeast/index.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\r\n  , length = 64\r\n  , map = {}\r\n  , seed = 0\r\n  , i = 0\r\n  , prev;\r\n\r\n/**\r\n * Return a string representing the specified number.\r\n *\r\n * @param {Number} num The number to convert.\r\n * @returns {String} The string representation of the number.\r\n * @api public\r\n */\r\nfunction encode(num) {\r\n  var encoded = '';\r\n\r\n  do {\r\n    encoded = alphabet[num % length] + encoded;\r\n    num = Math.floor(num / length);\r\n  } while (num > 0);\r\n\r\n  return encoded;\r\n}\r\n\r\n/**\r\n * Return the integer value specified by the given string.\r\n *\r\n * @param {String} str The string to convert.\r\n * @returns {Number} The integer value represented by the string.\r\n * @api public\r\n */\r\nfunction decode(str) {\r\n  var decoded = 0;\r\n\r\n  for (i = 0; i < str.length; i++) {\r\n    decoded = decoded * length + map[str.charAt(i)];\r\n  }\r\n\r\n  return decoded;\r\n}\r\n\r\n/**\r\n * Yeast: A tiny growing id generator.\r\n *\r\n * @returns {String} A unique id.\r\n * @api public\r\n */\r\nfunction yeast() {\r\n  var now = encode(+new Date());\r\n\r\n  if (now !== prev) return seed = 0, prev = now;\r\n  return now +'.'+ encode(seed++);\r\n}\r\n\r\n//\r\n// Map each character to its index.\r\n//\r\nfor (; i < length; i++) map[alphabet[i]] = i;\r\n\r\n//\r\n// Expose the `yeast`, `encode` and `decode` functions.\r\n//\r\nyeast.encode = encode;\r\nyeast.decode = decode;\r\nmodule.exports = yeast;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, module, types, scripts, repository, files, author, license, devDependencies, dependencies, default */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"skyway-js\\\",\\\"version\\\":\\\"3.0.1\\\",\\\"description\\\":\\\"The official JavaScript SDK for SkyWay\\\",\\\"main\\\":\\\"dist/skyway.js\\\",\\\"module\\\":\\\"src/peer.js\\\",\\\"types\\\":\\\"skyway-js.d.ts\\\",\\\"scripts\\\":{\\\"test\\\":\\\"karma start ./karma.conf.js\\\",\\\"clean\\\":\\\"del ./dist\\\",\\\"lint\\\":\\\"eslint .\\\",\\\"build\\\":\\\"NODE_ENV=production webpack\\\",\\\"dev\\\":\\\"webpack -w\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"git+https://github.com/skyway/skyway-js-sdk\\\"},\\\"files\\\":[\\\"dist/skyway.js\\\",\\\"skyway-js.d.ts\\\",\\\"LICENSE\\\",\\\"CHANGELOG.md\\\",\\\"README.md\\\"],\\\"author\\\":\\\"NTT Communications Corp.\\\",\\\"license\\\":\\\"Apache-2.0\\\",\\\"devDependencies\\\":{\\\"babel-loader\\\":\\\"7.1.5\\\",\\\"babel-plugin-espower\\\":\\\"2.4.0\\\",\\\"babel-plugin-istanbul\\\":\\\"4.1.6\\\",\\\"babel-preset-es2015\\\":\\\"^6.24.1\\\",\\\"del-cli\\\":\\\"^2.0.0\\\",\\\"eslint\\\":\\\"^6.1.0\\\",\\\"eslint-config-prettier\\\":\\\"^6.0.0\\\",\\\"eslint-plugin-prettier\\\":\\\"^3.1.0\\\",\\\"inject-loader\\\":\\\"^4.0.1\\\",\\\"karma\\\":\\\"^4.2.0\\\",\\\"karma-chrome-launcher\\\":\\\"^3.0.0\\\",\\\"karma-coverage\\\":\\\"^1.1.2\\\",\\\"karma-mocha\\\":\\\"^1.3.0\\\",\\\"karma-mocha-reporter\\\":\\\"^2.2.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.7\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"mocha\\\":\\\"^6.2.0\\\",\\\"power-assert\\\":\\\"^1.6.1\\\",\\\"prettier\\\":\\\"^1.18.2\\\",\\\"sinon\\\":\\\"^7.3.2\\\",\\\"webpack\\\":\\\"^4.38.0\\\",\\\"webpack-cli\\\":\\\"^3.3.6\\\"},\\\"dependencies\\\":{\\\"@types/node\\\":\\\"^12.6.8\\\",\\\"detect-browser\\\":\\\"^4.6.0\\\",\\\"enum\\\":\\\"git+https://github.com/eastandwest/enum.git#react-native\\\",\\\"events\\\":\\\"^3.0.0\\\",\\\"js-binarypack\\\":\\\"0.0.9\\\",\\\"object-sizeof\\\":\\\"^1.4.0\\\",\\\"query-string\\\":\\\"^6.8.2\\\",\\\"sdp-interop\\\":\\\"^0.1.13\\\",\\\"sdp-transform\\\":\\\"^2.11.0\\\",\\\"socket.io-client\\\":\\\"^2.2.0\\\",\\\"socket.io-parser\\\":\\\"~3.3.0\\\"}}\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./src/peer.js\":\r\n/*!**********************************!*\\\r\n  !*** ./src/peer.js + 12 modules ***!\r\n  \\**********************************/\r\n/*! exports provided: default */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/detect-browser/index.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/enum/index.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/events/events.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/has-binary2/index.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/js-binarypack/lib/binarypack.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/object-sizeof/index.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/query-string/index.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/sdp-interop/lib/index.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/sdp-transform/lib/index.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/socket.io-client/lib/index.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/socket.io-parser/index.js (<- Module is not an ECMAScript module) */\r\n/*! ModuleConcatenation bailout: Cannot concat with ./package.json (<- Module is not an ECMAScript module) */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n// ESM COMPAT FLAG\r\n__webpack_require__.r(__webpack_exports__);\r\n\r\n// EXTERNAL MODULE: ./node_modules/events/events.js\r\nvar events = __webpack_require__(\"./node_modules/events/events.js\");\r\nvar events_default = /*#__PURE__*/__webpack_require__.n(events);\r\n\r\n// EXTERNAL MODULE: ./node_modules/enum/index.js\r\nvar node_modules_enum = __webpack_require__(\"./node_modules/enum/index.js\");\r\nvar enum_default = /*#__PURE__*/__webpack_require__.n(node_modules_enum);\r\n\r\n// EXTERNAL MODULE: ./node_modules/socket.io-client/lib/index.js\r\nvar lib = __webpack_require__(\"./node_modules/socket.io-client/lib/index.js\");\r\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\r\n\r\n// EXTERNAL MODULE: ./node_modules/query-string/index.js\r\nvar query_string = __webpack_require__(\"./node_modules/query-string/index.js\");\r\nvar query_string_default = /*#__PURE__*/__webpack_require__.n(query_string);\r\n\r\n// CONCATENATED MODULE: ./src/shared/config.js\r\n\r\n\r\nconst DISPATCHER_HOST = 'dispatcher.webrtc.ecl.ntt.com';\r\nconst DISPATCHER_PORT = 443;\r\nconst DISPATCHER_SECURE = true;\r\nconst DISPATCHER_TIMEOUT = 10000;\r\n\r\nconst TURN_HOST = 'turn.webrtc.ecl.ntt.com';\r\nconst TURN_PORT = 443;\r\n\r\nconst MESSAGE_TYPES = {\r\n  CLIENT: new enum_default.a([\r\n    'SEND_OFFER',\r\n    'SEND_ANSWER',\r\n    'SEND_CANDIDATE',\r\n    'SEND_LEAVE',\r\n    'ROOM_JOIN',\r\n    'ROOM_LEAVE',\r\n    'ROOM_GET_LOGS',\r\n    'ROOM_GET_USERS',\r\n    'ROOM_SEND_DATA',\r\n    'SFU_GET_OFFER',\r\n    'SFU_ANSWER',\r\n    'SFU_CANDIDATE',\r\n    'PING',\r\n    'UPDATE_CREDENTIAL',\r\n    'SEND_FORCE_CLOSE',\r\n  ]),\r\n  SERVER: new enum_default.a([\r\n    'OPEN',\r\n    'ERROR',\r\n    'OFFER',\r\n    'ANSWER',\r\n    'CANDIDATE',\r\n    'LEAVE',\r\n    'AUTH_EXPIRES_IN',\r\n    'ROOM_LOGS',\r\n    'ROOM_USERS',\r\n    'ROOM_DATA',\r\n    'ROOM_USER_JOIN',\r\n    'ROOM_USER_LEAVE',\r\n    'SFU_OFFER',\r\n    'FORCE_CLOSE',\r\n  ]),\r\n};\r\n\r\n// Current recommended maximum chunksize is 16KB (DataChannel spec)\r\n// https://tools.ietf.org/html/draft-ietf-rtcweb-data-channel-13\r\n// The actual chunk size is adjusted in dataChannel to accomodate metaData\r\nconst maxChunkSize = 16300;\r\n\r\n// The maximum size of data that can be sent at one time by using Room.send() is 20 MB\r\nconst config_maxDataSize = 20 * 1024 * 1024;\r\n\r\n// The minimum interval of using Room.send() is 100 ms\r\nconst minBroadcastIntervalMs = 100;\r\n\r\n// Number of reconnection attempts to the same server before giving up\r\nconst reconnectionAttempts = 2;\r\n\r\n// Number of times to try changing servers before giving up\r\nconst numberServersToTry = 3;\r\n\r\n// Send loop interval in milliseconds\r\nconst config_sendInterval = 1;\r\n\r\n// Ping interval in milliseconds\r\nconst pingInterval = 25000;\r\n\r\nconst defaultConfig = {\r\n  iceServers: [\r\n    {\r\n      urls: 'stun:stun.webrtc.ecl.ntt.com:3478',\r\n      url: 'stun:stun.webrtc.ecl.ntt.com:3478',\r\n    },\r\n  ],\r\n  iceTransportPolicy: 'all',\r\n};\r\n\r\n/* harmony default export */ var config = ({\r\n  DISPATCHER_HOST,\r\n  DISPATCHER_PORT,\r\n  DISPATCHER_SECURE,\r\n  DISPATCHER_TIMEOUT,\r\n  TURN_HOST,\r\n  TURN_PORT,\r\n  MESSAGE_TYPES,\r\n  maxChunkSize,\r\n  maxDataSize: config_maxDataSize,\r\n  minBroadcastIntervalMs,\r\n  reconnectionAttempts,\r\n  numberServersToTry,\r\n  sendInterval: config_sendInterval,\r\n  pingInterval,\r\n  defaultConfig,\r\n});\r\n\r\n// CONCATENATED MODULE: ./src/shared/logger.js\r\n\r\n\r\nconst LOG_PREFIX = 'SkyWay: ';\r\nconst LogLevel = new enum_default.a({\r\n  NONE: 0,\r\n  ERROR: 1,\r\n  WARN: 2,\r\n  FULL: 3,\r\n});\r\n\r\n/**\r\n * Class for logging\r\n * This class exports only one instance(a.k.a. Singleton)\r\n */\r\nclass Logger {\r\n  /**\r\n   * Create a Logger instance.\r\n   *\r\n   */\r\n  constructor() {\r\n    this._logLevel = LogLevel.NONE.value;\r\n    this.LOG_LEVELS = LogLevel;\r\n  }\r\n\r\n  /**\r\n   * Set the level of log.\r\n   * @param {number} [level=0] The log level. 0: NONE, 1: ERROR, 2: WARN, 3:FULL.\r\n   */\r\n  setLogLevel(level) {\r\n    if (level.value) {\r\n      level = level.value;\r\n    }\r\n\r\n    const debugLevel = parseInt(level, 10);\r\n\r\n    switch (debugLevel) {\r\n      case 0:\r\n        this._logLevel = LogLevel.NONE.value;\r\n        break;\r\n      case 1:\r\n        this._logLevel = LogLevel.ERROR.value;\r\n        break;\r\n      case 2:\r\n        this._logLevel = LogLevel.WARN.value;\r\n        break;\r\n      case 3:\r\n        this._logLevel = LogLevel.FULL.value;\r\n        break;\r\n      default:\r\n        this._logLevel = LogLevel.NONE.value;\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Output a warning message to the Web Console.\r\n   * @param {...*} args - arguments to warn.\r\n   */\r\n  warn(...args) {\r\n    if (this._logLevel >= LogLevel.WARN.value) {\r\n      console.warn(LOG_PREFIX, ...args);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Output an error message to the Web Console.\r\n   * @param {...*} args - arguments to error.\r\n   */\r\n  error(...args) {\r\n    if (this._logLevel >= LogLevel.ERROR.value) {\r\n      console.error(LOG_PREFIX, ...args);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Output a log message to the Web Console.\r\n   * @param {...*} args - arguments to log.\r\n   */\r\n  log(...args) {\r\n    if (this._logLevel >= LogLevel.FULL.value) {\r\n      console.log(LOG_PREFIX, ...args);\r\n    }\r\n  }\r\n}\r\n\r\n/* harmony default export */ var logger = (new Logger());\r\n\r\n// EXTERNAL MODULE: ./package.json\r\nvar package_0 = __webpack_require__(\"./package.json\");\r\n\r\n// CONCATENATED MODULE: ./src/peer/socket.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class to handle WS/HTTP communication with the signalling server\r\n * @extends EventEmitter\r\n */\r\nclass socket_Socket extends events_default.a {\r\n  /**\r\n   * Creates an instance of Socket.\r\n   * @param {string} key - The apiKey to connect using.\r\n   * @param {Object} options - Socket connection options.\r\n   * @param {boolean} options.secure - True if signalling server supports HTTPS/WSS.\r\n   * @param {string} options.host - The signalling server host.\r\n   * @param {number | string} options.port - The port the signalling server is listening to.\r\n   * @param {boolean} options.dispatcherSecure - True if dispatcher server supports HTTPS/WSS.\r\n   * @param {string} options.dispatcherHost - The signalling server host.\r\n   * @param {number | string} options.dispatcherPort - The port the signalling server is listening to.\r\n   */\r\n  constructor(key, options) {\r\n    super();\r\n\r\n    this._isOpen = false;\r\n    this._isPeerIdSet = false;\r\n    this._queue = [];\r\n\r\n    this._io = null;\r\n    this._key = key;\r\n    this._reconnectAttempts = 0;\r\n\r\n    if (options.host && options.port) {\r\n      const httpProtocol = options.secure ? 'https://' : 'http://';\r\n      this.signalingServerUrl = `${httpProtocol}${options.host}:${options.port}`;\r\n    } else {\r\n      const dispatcherHost = options.dispatcherHost || config.DISPATCHER_HOST;\r\n      const dispatcherPort = options.dispatcherPort || config.DISPATCHER_PORT;\r\n      const dispatcherSecure =\r\n        options.dispatcherSecure || config.DISPATCHER_SECURE;\r\n\r\n      const httpProtocol = dispatcherSecure ? 'https://' : 'http://';\r\n      this._dispatcherUrl = `${httpProtocol}${dispatcherHost}:${dispatcherPort}/signaling`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the socket is connecting to the signalling server or not.\r\n   * @type {boolean}\r\n   */\r\n  get isOpen() {\r\n    return Boolean(this._io && this._io.connected && this._isOpen);\r\n  }\r\n\r\n  /**\r\n   * Connect to the signalling server.\r\n   * @param {string} id - Unique peerId to identify the client.\r\n   * @param {string} token - Token to identify the session.\r\n   * @param {object} credential - The credential used to authenticate peer.\r\n   * @param {number} [credential.timestamp] - Current UNIX timestamp.\r\n   + @param {number} [credential.ttl] - Time to live; The credential expires at timestamp + ttl.\r\n   + @param {string} [credential.authToken] - Credential token calculated with HMAC.\r\n   * @return {Promise<void>} Promise that resolves when starting is done.\r\n   * @fires Socket#error\r\n   */\r\n  async start(id, token, credential) {\r\n    let query =\r\n      `apiKey=${this._key}&token=${token}` +\r\n      `&platform=javascript&sdk_version=${package_0[\"version\"]}`;\r\n\r\n    if (id) {\r\n      query += `&peerId=${id}`;\r\n      this._isPeerIdSet = true;\r\n    }\r\n\r\n    if (credential) {\r\n      const encodedCredentialStr = encodeURIComponent(\r\n        JSON.stringify(credential)\r\n      );\r\n      query += `&credential=${encodedCredentialStr}`;\r\n    }\r\n\r\n    if (this._dispatcherUrl) {\r\n      let serverInfo;\r\n      try {\r\n        serverInfo = await this._getSignalingServer();\r\n      } catch (err) {\r\n        this.emit('error', err);\r\n        return;\r\n      }\r\n      const httpProtocol = serverInfo.secure ? 'https://' : 'http://';\r\n      this.signalingServerUrl = `${httpProtocol}${serverInfo.host}:${serverInfo.port}`;\r\n    }\r\n\r\n    this._io = lib_default()(this.signalingServerUrl, {\r\n      'force new connection': true,\r\n      query: query,\r\n      reconnectionAttempts: config.reconnectionAttempts,\r\n    });\r\n\r\n    this._io.on('reconnect_failed', () => {\r\n      this._stopPings();\r\n      this._connectToNewServer();\r\n    });\r\n\r\n    this._io.on('error', e => {\r\n      logger.error(e);\r\n    });\r\n\r\n    this._setupMessageHandlers();\r\n  }\r\n\r\n  /**\r\n   * Connect to \"new\" signaling server. Attempts up to 10 times before giving up and emitting an error on the socket.\r\n   * @param {number} [numAttempts=0] - Current number of attempts.\r\n   * @return {Promise<void>} A promise that resolves with new connection has done.\r\n   * @private\r\n   */\r\n  async _connectToNewServer(numAttempts = 0) {\r\n    // max number of attempts to get a new server from the dispatcher.\r\n    const maxNumberOfAttempts = 10;\r\n    if (\r\n      numAttempts >= maxNumberOfAttempts ||\r\n      this._reconnectAttempts >= config.numberServersToTry\r\n    ) {\r\n      this.emit('error', 'Could not connect to server.');\r\n      return;\r\n    }\r\n\r\n    // Keep trying until we connect to a new server because consul can take some time to remove from the active list.\r\n    let serverInfo;\r\n    try {\r\n      serverInfo = await this._getSignalingServer();\r\n    } catch (err) {\r\n      this.emit('error', err);\r\n      return;\r\n    }\r\n\r\n    if (this.signalingServerUrl.indexOf(serverInfo.host) === -1) {\r\n      const httpProtocol = serverInfo.secure ? 'https://' : 'http://';\r\n      this.signalingServerUrl = `${httpProtocol}${serverInfo.host}:${serverInfo.port}`;\r\n\r\n      this._io.io.uri = this.signalingServerUrl;\r\n      this._io.connect();\r\n      this._reconnectAttempts++;\r\n    } else {\r\n      this._connectToNewServer(++numAttempts);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return object including signaling server info.\r\n   * @return {Promise<Object>} A promise that resolves with signaling server info\r\n   and rejects if there's no response or status code isn't 200.\r\n   */\r\n  _getSignalingServer() {\r\n    return new Promise((resolve, reject) => {\r\n      const http = new XMLHttpRequest();\r\n\r\n      http.timeout = config.DISPATCHER_TIMEOUT;\r\n      http.open('GET', this._dispatcherUrl, true);\r\n      /* istanbul ignore next */\r\n      http.onerror = () => {\r\n        reject(\r\n          new Error(\r\n            'There was a problem with the request for the dispatcher. Check your peer options and network connections.'\r\n          )\r\n        );\r\n      };\r\n\r\n      http.onabort = () => {\r\n        reject(new Error('The request for the dispatcher was aborted.'));\r\n      };\r\n\r\n      http.ontimeout = () => {\r\n        reject(\r\n          new Error(\r\n            'The request for the dispatcher timed out. Check your firewall, network speed, SkyWay failure information'\r\n          )\r\n        );\r\n      };\r\n      http.onload = () => {\r\n        if (http.status !== 200) {\r\n          reject(\r\n            new Error('Connection failed. Unexpected response: ' + http.status)\r\n          );\r\n          return;\r\n        }\r\n        try {\r\n          const res = JSON.parse(http.responseText);\r\n          if (res && res.domain) {\r\n            resolve({ host: res.domain, port: 443, secure: true });\r\n            return;\r\n          }\r\n          reject(\r\n            new Error(\r\n              'The dispatcher server returned an invalid JSON response. have no signaling server domain in JSON.'\r\n            )\r\n          );\r\n        } catch (err) {\r\n          reject(\r\n            new Error(\r\n              'The dispatcher server returned an invalid JSON response.'\r\n            )\r\n          );\r\n        }\r\n      };\r\n      http.send(null);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send a message to the signalling server. Queue the messages if not connected yet.\r\n   * @param {string} type - The signalling message type. Message types are defined in config.MESSAGE_TYPES.\r\n   * @param {string | object} message - The message to send to the server.\r\n   */\r\n  send(type, message) {\r\n    if (!type) {\r\n      this._io.emit('error', 'Invalid message');\r\n      return;\r\n    }\r\n\r\n    // If we are not connected yet, queue the message\r\n    if (!this.isOpen) {\r\n      this._queue.push({ type: type, message: message });\r\n      return;\r\n    }\r\n\r\n    if (this._io.connected === true) {\r\n      this._io.emit(type, message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disconnect from the signalling server.\r\n   */\r\n  close() {\r\n    if (this.isOpen) {\r\n      this._stopPings();\r\n      this._io.disconnect();\r\n      this._isOpen = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reconnect to the signaling server.\r\n   */\r\n  reconnect() {\r\n    this._io.connect();\r\n  }\r\n\r\n  /**\r\n   * Update Credential by sending the new credential to the signaling server.\r\n   * Also set the new one to the Socket.io.opts's query string for reconnection.\r\n   * @param {object} newCredential - The new credential generated by user.\r\n   * @param {number} [newCredential.timestamp] - Current UNIX timestamp.\r\n   + @param {number} [newCredential.ttl] - Time to live; The credential expires at timestamp + ttl.\r\n   + @param {string} [newCredential.authToken] - Credential token calculated with HMAC.\r\n   */\r\n  updateCredential(newCredential) {\r\n    // Parse the current queryString and replace the new credential with old one\r\n    const parseQuery = query_string_default.a.parse(this._io.io.opts.query);\r\n    if (parseQuery.credential) {\r\n      parseQuery.credential = encodeURIComponent(JSON.stringify(newCredential));\r\n    } else {\r\n      // For future development; here we can tell the the developer\r\n      // which connection(p2p/turn/sfu) should be authenticated.\r\n      logger.warn(\"Adding a credential when one wasn't specified before.\");\r\n    }\r\n    this._io.io.opts.query = query_string_default.a.stringify(parseQuery);\r\n\r\n    this.send(config.MESSAGE_TYPES.CLIENT.UPDATE_CREDENTIAL.key, newCredential);\r\n  }\r\n\r\n  /**\r\n   * Set up the signalling message handlers.\r\n   * @private\r\n   * @fires Socket#OPEN\r\n   * @fires Socket#OFFER\r\n   * @fires Socket#ANSWER\r\n   * @fires Socket#CANDIDATE\r\n   * @fires Socket#LEAVE\r\n   * @fires Socket#AUTH_EXPIRES_IN\r\n   * @fires Socket#ROOM_OFFER\r\n   * @fires Socket#ROOM_USER_JOIN\r\n   * @fires Socket#ROOM_USER_LEAVE\r\n   * @fires Socket#ROOM_DATA\r\n   * @fires Socket#FORCE_CLOSE\r\n   */\r\n  _setupMessageHandlers() {\r\n    config.MESSAGE_TYPES.SERVER.enums.forEach(type => {\r\n      if (type.key === config.MESSAGE_TYPES.SERVER.OPEN.key) {\r\n        this._io.on(type.key, openMessage => {\r\n          if (!openMessage || !openMessage.peerId) {\r\n            return;\r\n          }\r\n          if (!this._isPeerIdSet) {\r\n            // set peerId for when reconnecting to the server\r\n            this._io.io.opts.query += `&peerId=${openMessage.peerId}`;\r\n            this._isPeerIdSet = true;\r\n          }\r\n          this._reconnectAttempts = 0;\r\n\r\n          this._startPings();\r\n          this._sendQueuedMessages();\r\n\r\n          if (!this._isOpen) {\r\n            this._isOpen = true;\r\n\r\n            // To inform the peer that the socket successfully connected\r\n            this.emit(type.key, openMessage);\r\n          }\r\n        });\r\n      } else {\r\n        this._io.on(type.key, message => {\r\n          this.emit(type.key, message);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send messages that were queued when the client wasn't connected to the signalling server yet.\r\n   * @private\r\n   */\r\n  _sendQueuedMessages() {\r\n    for (const data of this._queue) {\r\n      this.send(data.type, data.message);\r\n    }\r\n    this._queue = [];\r\n  }\r\n\r\n  /**\r\n   * Start sending ping messages if they aren't already\r\n   * @private\r\n   */\r\n  _startPings() {\r\n    if (!this._pingIntervalId) {\r\n      this._pingIntervalId = setInterval(() => {\r\n        this.send(config.MESSAGE_TYPES.CLIENT.PING.key);\r\n      }, config.pingInterval);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop sending ping messages\r\n   * @private\r\n   */\r\n  _stopPings() {\r\n    clearInterval(this._pingIntervalId);\r\n    this._pingIntervalId = undefined;\r\n  }\r\n\r\n  /**\r\n   * Error occurred.\r\n   *\r\n   * @event Connection#error\r\n   * @type {Error}\r\n   */\r\n\r\n  /**\r\n   * Socket opened.\r\n   *\r\n   * @event Socket#OPEN\r\n   * @type {object}\r\n   * @property {string} peerId - The peerId of the client.\r\n   * @property {string} [turnCredential] - The turn credentials for this client.\r\n   */\r\n\r\n  /**\r\n   * Signalling server error.\r\n   *\r\n   * @event Socket#ERROR\r\n   * @type {string}\r\n   */\r\n\r\n  /**\r\n   * ICE candidate received from peer.\r\n   *\r\n   * @event Socket#CANDIDATE\r\n   * @type {object}\r\n   * @property {RTCIceCandidate} candidate - The ice candidate.\r\n   * @property {string} src - Sender peerId.\r\n   * @property {string} dst - Recipient peerId.\r\n   * @property {string} connectionId - The connection id.\r\n   * @property {string} connectionType - The connection type.\r\n   */\r\n\r\n  /**\r\n   * Offer received from peer.\r\n   *\r\n   * @event Socket#OFFER\r\n   * @type {object}\r\n   * @property {RTCSessionDescription} offer - The remote peer's offer.\r\n   * @property {string} src - Sender peerId.\r\n   * @property {string} dst - Recipient peerId.\r\n   * @property {string} connectionId - The connection id.\r\n   * @property {string} connectionType - The connection type.\r\n   * @property {object} metadata - Any extra data sent with the connection.\r\n   */\r\n\r\n  /**\r\n   * Answer received from peer.\r\n   *\r\n   * @event Socket#ANSWER\r\n   * @type {object}\r\n   * @property {RTCSessionDescription} answer - The remote peer's answer.\r\n   * @property {string} src - Sender peerId.\r\n   * @property {string} dst - Recipient peerId.\r\n   * @property {string} connectionId - The connection id.\r\n   * @property {string} connectionType - The connection type.\r\n   */\r\n\r\n  /**\r\n   * Peer has left.\r\n   *\r\n   * @event Socket#LEAVE\r\n   * @type {string}\r\n   */\r\n\r\n  /**\r\n   * Message sent to peer has failed.\r\n   *\r\n   * @event Socket#EXPIRE\r\n   * @type {string}\r\n   */\r\n\r\n  /**\r\n   * Room offer sdp received.\r\n   *\r\n   * @event Socket#ROOM_OFFER\r\n   * @type {object}\r\n   * @property {string} roomName - The name of the room the offer is for.\r\n   * @property {RTCSessionDescription} offer - The offer object.\r\n   */\r\n\r\n  /**\r\n   * User has joined the room.\r\n   *\r\n   * @event Socket#ROOM_USER_JOIN\r\n   * @type {object}\r\n   * @property {string} src - The peerId of the user who joined the room.\r\n   * @property {string} roomName - The name of the room joined.\r\n   */\r\n\r\n  /**\r\n   * User has left the room.\r\n   *\r\n   * @event Socket#ROOM_USER_LEAVE\r\n   * @type {object}\r\n   * @property {string} src - The peerId of the user who left the room.\r\n   * @property {string} roomName - The name of the room left.\r\n   */\r\n\r\n  /**\r\n   * Received a data message from a user in a room.\r\n   *\r\n   * @event Socket#ROOM_DATA\r\n   * @type {object}\r\n   * @property {string} src - The peerId of the user who sent the message.\r\n   * @property {string} roomName - The name of the room left.\r\n   * @property {*} data - The data that was sent.\r\n   */\r\n\r\n  /**\r\n   * Remote Peer requested to close a connection.\r\n   *\r\n   * @event Socket#FORCE_CLOSE\r\n   * @type {object}\r\n   * @property {string} src - Sender peerId.\r\n   * @property {string} dst - Recipient peerId.\r\n   * @property {string} connectionId - The connection id.\r\n   */\r\n}\r\n\r\n/* harmony default export */ var socket = (socket_Socket);\r\n\r\n// EXTERNAL MODULE: ./node_modules/sdp-transform/lib/index.js\r\nvar sdp_transform_lib = __webpack_require__(\"./node_modules/sdp-transform/lib/index.js\");\r\nvar sdp_transform_lib_default = /*#__PURE__*/__webpack_require__.n(sdp_transform_lib);\r\n\r\n// EXTERNAL MODULE: ./node_modules/sdp-interop/lib/index.js\r\nvar sdp_interop_lib = __webpack_require__(\"./node_modules/sdp-interop/lib/index.js\");\r\n\r\n// CONCATENATED MODULE: ./src/shared/sdpUtil.js\r\n\r\n\r\n\r\n/**\r\n * Class that contains utility functions for SDP munging.\r\n */\r\nclass sdpUtil_SdpUtil {\r\n  /**\r\n   * Convert unified plan SDP to Plan B SDP\r\n   * @param {RTCSessionDescriptionInit} offer unified plan SDP\r\n   * @return {RTCSessionDescription} Plan B SDP\r\n   */\r\n  unifiedToPlanB(offer) {\r\n    const interop = new sdp_interop_lib[\"Interop\"]();\r\n    const oldSdp = interop.toPlanB(offer).sdp;\r\n\r\n    // use a set to avoid duplicates\r\n    const msids = new Set();\r\n    // extract msids from the offer sdp\r\n    const msidRegexp = /a=ssrc:\\d+ msid:(\\w+)/g;\r\n    let matches;\r\n    // loop while matches is truthy\r\n    // double parentheses for explicit conditional assignment (lint)\r\n    while ((matches = msidRegexp.exec(oldSdp))) {\r\n      msids.add(matches[1]);\r\n    }\r\n\r\n    // replace msid-semantic line with planB version\r\n    const newSdp = oldSdp.replace(\r\n      'a=msid-semantic:WMS *',\r\n      `a=msid-semantic:WMS ${Array.from(msids).join(' ')}`\r\n    );\r\n\r\n    return new RTCSessionDescription({\r\n      type: 'offer',\r\n      sdp: newSdp,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add b=AS to m=video section and return the SDP.\r\n   * @param {string} sdp - A SDP.\r\n   * @param {number} bandwidth - video Bandwidth (kbps)\r\n   * @return {string} A SDP which include b=AS in m=video section\r\n   */\r\n  addVideoBandwidth(sdp, bandwidth) {\r\n    this._validateBandwidth(bandwidth);\r\n    return this._addBandwidth(sdp, bandwidth, 'video');\r\n  }\r\n\r\n  /**\r\n   * Add b=AS to m=audio section and return the SDP\r\n   * @param {string} sdp - A SDP.\r\n   * @param {number} bandwidth - audio Bandwidth (kbps)\r\n   * @return {string} A SDP which include b=AS in m=audio section\r\n   */\r\n  addAudioBandwidth(sdp, bandwidth) {\r\n    this._validateBandwidth(bandwidth);\r\n    return this._addBandwidth(sdp, bandwidth, 'audio');\r\n  }\r\n\r\n  /**\r\n   * Remove video codecs in SDP except argument's codec.\r\n   * If the codec doesn't exist, throw error.\r\n   * @param {string} sdp - A SDP.\r\n   * @param {string} codec - Video codec name (e.g. H264)\r\n   * @return {string} A SDP which contains the codecs except argument's codec\r\n   */\r\n  filterVideoCodec(sdp, codec) {\r\n    return this._filterCodec(sdp, codec, 'video');\r\n  }\r\n\r\n  /**\r\n   * Remove audio codecs in SDP except argument's codec.\r\n   * If the codec doesn't exist, throw error.\r\n   * @param {string} sdp - A SDP.\r\n   * @param {string} codec - Audio codec name (e.g. PCMU)\r\n   * @return {string} A SDP which contains the codecs except argument's codec\r\n   */\r\n  filterAudioCodec(sdp, codec) {\r\n    return this._filterCodec(sdp, codec, 'audio');\r\n  }\r\n\r\n  /**\r\n   * Our signaling server determines client's SDP semantics\r\n   * by checking answer SDP includes `a=msid-semantic:WMS *` or NOT.\r\n   *\r\n   * Currenly, Firefox prints exact string,\r\n   * but Chrome does not. even using `unified-plan`.\r\n   * Therefore Chrome needs to pretend Firefox to join SFU rooms.\r\n   *\r\n   * At a glance, using `sdp-transform` is better choice to munge SDP,\r\n   * but if you do so, it prints `a=msid-semantic: WMS *`.\r\n   * The problem is the space before the word `WMS`,\r\n   * our signaling server can not handle this as `unified-plan` SDP...\r\n   *\r\n   * @param {string} sdp - A SDP.\r\n   * @return {string} A SDP which has `a=msid-semantic:WMS *`.\r\n   */\r\n  ensureUnifiedPlan(sdp) {\r\n    const delimiter = '\\r\\n';\r\n    return sdp\r\n      .split(delimiter)\r\n      .map(line => {\r\n        return line.startsWith('a=msid-semantic')\r\n          ? 'a=msid-semantic:WMS *'\r\n          : line;\r\n      })\r\n      .join(delimiter);\r\n  }\r\n\r\n  /**\r\n   * Remove codecs except the codec passed as argument and return the SDP\r\n   *\r\n   * @param {string} sdp - A SDP.\r\n   * @param {string} codec - The codec name, case sensitive.\r\n   * @param {string} mediaType - 'audio' or 'video'\r\n   * @return {string} A SDP which contains the codecs except argument's codec\r\n   * @private\r\n   */\r\n  _filterCodec(sdp, codec, mediaType) {\r\n    if (codec === undefined) {\r\n      throw new Error('codec is not passed');\r\n    }\r\n\r\n    const sdpObject = sdp_transform_lib_default.a.parse(sdp);\r\n\r\n    sdpObject.media = sdpObject.media.map(media => {\r\n      if (media.type === mediaType) {\r\n        media.rtp = media.rtp.filter(rtp => {\r\n          return rtp.codec === codec;\r\n        });\r\n\r\n        // Extract the payload number into Array, like [126, 97];\r\n        // Note, there are cases the length of Array is more than 2.\r\n        //   e.g. Firefox generates two 'H264' video codecs: 126, 97;\r\n        //   e.g. Chrome generates three 'CN' audio codecs:  106, 105, 13;\r\n        const payloadNumbers = media.rtp.reduce((prev, curr) => {\r\n          return [...prev, curr.payload];\r\n        }, []);\r\n\r\n        // At this point, 0 means there's no codec, so let's throw Error.\r\n        if (media.rtp.length === 0) {\r\n          throw new Error(`${codec} does not exist`);\r\n        }\r\n\r\n        // fmtp is optional though most codecs have this parameter.\r\n        if (media.fmtp) {\r\n          media.fmtp = media.fmtp.filter(fmtp => {\r\n            return payloadNumbers.includes(fmtp.payload);\r\n          });\r\n        }\r\n\r\n        // rtcpFb is optional. Especially, m=audio doesn't have rtcpFb.\r\n        if (media.rtcpFb) {\r\n          media.rtcpFb = media.rtcpFb.filter(rtcpFb => {\r\n            return payloadNumbers.includes(rtcpFb.payload);\r\n          });\r\n        }\r\n\r\n        media.payloads = payloadNumbers.join(' ');\r\n      }\r\n      return media;\r\n    });\r\n\r\n    return sdp_transform_lib_default.a.write(sdpObject);\r\n  }\r\n\r\n  /**\r\n   * Add b=AS to 'm=audio' or 'm=video' section and return the SDP\r\n   *\r\n   * @param {string} sdp - A SDP.\r\n   * @param {number} bandwidth - bandidth of 'audio' or 'video'\r\n   * @param {string} mediaType - 'audio' or 'video'\r\n   * @return {string} A SDP which include b=AS in m=audio or m=video section\r\n   * @private\r\n   */\r\n  _addBandwidth(sdp, bandwidth, mediaType) {\r\n    const sdpObject = sdp_transform_lib_default.a.parse(sdp);\r\n    sdpObject.media = sdpObject.media.map(media => {\r\n      if (media.type === mediaType) {\r\n        media.bandwidth = [\r\n          {\r\n            // Chrome supports only 'AS'\r\n            type: 'AS',\r\n            limit: bandwidth.toString(),\r\n          },\r\n          {\r\n            // Firefox Supports only 'TIAS' from M49\r\n            type: 'TIAS',\r\n            limit: (bandwidth * 1000).toString(),\r\n          },\r\n        ];\r\n      }\r\n      return media;\r\n    });\r\n    return sdp_transform_lib_default.a.write(sdpObject);\r\n  }\r\n\r\n  /**\r\n   * Check bandwidth is valid or not. If invalid, throw Error\r\n   * @param {number} bandwidth - bandwidth of 'audio' or 'video'\r\n   * @private\r\n   */\r\n  _validateBandwidth(bandwidth) {\r\n    if (bandwidth === undefined) {\r\n      throw new Error('bandwidth is not passed');\r\n    }\r\n\r\n    if (!/^\\d+$/.test(bandwidth)) {\r\n      throw new Error(`${bandwidth} is not a number`);\r\n    }\r\n  }\r\n}\r\n\r\n/* harmony default export */ var sdpUtil = (new sdpUtil_SdpUtil());\r\n\r\n// CONCATENATED MODULE: ./src/peer/negotiator.js\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst NegotiatorEvents = new enum_default.a([\r\n  'addStream',\r\n  'dcCreated',\r\n  'offerCreated',\r\n  'answerCreated',\r\n  'iceCandidate',\r\n  'iceConnectionFailed',\r\n  'negotiationNeeded',\r\n  'error',\r\n]);\r\n\r\n/**\r\n * Class that manages RTCPeerConnection and SDP exchange.\r\n * @extends EventEmitter\r\n */\r\nclass negotiator_Negotiator extends events_default.a {\r\n  /**\r\n   * Create a negotiator\r\n   * @param {string} name - Room name.\r\n   */\r\n  constructor() {\r\n    super();\r\n    this._offerQueue = [];\r\n    this._isExpectingAnswer = false;\r\n    this._replaceStreamCalled = false;\r\n    this._isNegotiationAllowed = true;\r\n    this.hasRemoteDescription = false;\r\n  }\r\n\r\n  /**\r\n   * Class that manages RTCPeerConnection and SDP exchange.\r\n   * @param {object} [options] - Optional arguments for starting connection.\r\n   * @param {string} [options.type] - Type of connection. One of 'media' or 'data'.\r\n   * @param {MediaStream} [options._stream] - The MediaStream to be sent to the remote peer.\r\n   * @param {string} [options.label] - Label to easily identify the connection on either peer.\r\n   * @param {Object} [options.dcInit] - Options passed to createDataChannel() as a RTCDataChannelInit.\r\n   *                  See https://www.w3.org/TR/webrtc/#dom-rtcdatachannelinit\r\n   * @param {boolean} [options.originator] - true means the peer is the originator of the connection.\r\n   * @param {RTCSessionDescription} [options.offer]\r\n   *        - The local description. If the peer is originator, handleOffer is called with it.\r\n   * @param {object} [options.pcConfig] - A RTCConfiguration dictionary for the RTCPeerConnection.\r\n   * @param {number} [options.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [options.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [options.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [options.audioCodec] - A video codec like 'PCMU'\r\n   * @param {boolean} [options.videoReceiveEnabled] - A flag to set video recvonly\r\n   * @param {boolean} [options.audioReceiveEnabled] - A flag to set audio recvonly\r\n   * @return {Promise<void>} Promise that resolves when starting is done.\r\n   */\r\n  async startConnection(options = {}) {\r\n    this._pc = this._createPeerConnection(options.pcConfig);\r\n    this._setupPCListeners();\r\n    this.originator = options.originator;\r\n    this._audioBandwidth = options.audioBandwidth;\r\n    this._videoBandwidth = options.videoBandwidth;\r\n    this._audioCodec = options.audioCodec;\r\n    this._videoCodec = options.videoCodec;\r\n    this._type = options.type;\r\n\r\n    // Trigger negotiationneeded event\r\n    if (this._type === 'media') {\r\n      // video+audio or video only or audio only stream passed\r\n      if (options.stream) {\r\n        const vTracks = options.stream.getVideoTracks();\r\n        const aTracks = options.stream.getAudioTracks();\r\n        const recvonlyState = this._getReceiveOnlyState(options);\r\n\r\n        // create m= section w/ direction sendrecv\r\n        if (vTracks.length > 0) {\r\n          vTracks.forEach(track => this._pc.addTrack(track, options.stream));\r\n        }\r\n        // create m= section w/ direction recvonly or omit whole m= section\r\n        else {\r\n          recvonlyState.video &&\r\n            this._pc.addTransceiver('video', { direction: 'recvonly' });\r\n        }\r\n\r\n        if (aTracks.length > 0) {\r\n          aTracks.forEach(track => this._pc.addTrack(track, options.stream));\r\n        } else {\r\n          recvonlyState.audio &&\r\n            this._pc.addTransceiver('audio', { direction: 'recvonly' });\r\n        }\r\n      }\r\n      // if offer side and stream not passed, make it recvonly(= backward compat)\r\n      else if (this.originator) {\r\n        this._pc.addTransceiver('audio', { direction: 'recvonly' });\r\n        this._pc.addTransceiver('video', { direction: 'recvonly' });\r\n      }\r\n    }\r\n\r\n    if (this.originator) {\r\n      if (this._type === 'data') {\r\n        const label = options.label || '';\r\n        const dcInit = options.dcInit || {};\r\n        const dc = this._pc.createDataChannel(label, dcInit);\r\n        this.emit(negotiator_Negotiator.EVENTS.dcCreated.key, dc);\r\n      }\r\n    } else {\r\n      await this.handleOffer(options.offer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replace the stream being sent with a new one.\r\n   * Video and audio tracks are updated per track by using `{add|replace|remove}Track` methods.\r\n   * We assume that there is at most 1 audio and at most 1 video in local stream.\r\n   * @param {MediaStream} newStream - The stream to replace the old stream with.\r\n   * @private\r\n   */\r\n  replaceStream(newStream) {\r\n    // If negotiator is null\r\n    // or replaceStream was called but `onnegotiationneeded` event has not finished yet.\r\n    if (!this._pc) {\r\n      return;\r\n    }\r\n\r\n    this._isNegotiationAllowed = true;\r\n\r\n    const _this = this;\r\n    const vTracks = newStream.getVideoTracks();\r\n    const aTracks = newStream.getAudioTracks();\r\n\r\n    const senders = this._pc.getSenders();\r\n    const vSender = senders.find(\r\n      sender => sender.track && sender.track.kind === 'video'\r\n    );\r\n    const aSender = senders.find(\r\n      sender => sender.track && sender.track.kind === 'audio'\r\n    );\r\n\r\n    _updateSenderWithTrack(vSender, vTracks[0], newStream);\r\n    _updateSenderWithTrack(aSender, aTracks[0], newStream);\r\n\r\n    /**\r\n     * Replace a track being sent with a new one.\r\n     * @param {RTCRtpSender} sender - The sender which type is video or audio.\r\n     * @param {MediaStreamTrack} track - The track of new stream.\r\n     * @param {MediaStream} stream - The stream which contains the track.\r\n     * @private\r\n     */\r\n    function _updateSenderWithTrack(sender, track, stream) {\r\n      if (track === undefined && sender === undefined) {\r\n        return;\r\n      }\r\n      // remove video or audio sender if not passed\r\n      if (track === undefined) {\r\n        _this._pc.removeTrack(sender);\r\n        return;\r\n      }\r\n      // if passed, replace track or create sender\r\n      if (sender === undefined) {\r\n        _this._pc.addTrack(track, stream);\r\n        return;\r\n      }\r\n      // if track was not replaced, do nothing\r\n      if (sender.track.id === track.id) {\r\n        return;\r\n      }\r\n      sender.replaceTrack(track);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set remote description with remote Offer SDP, then create Answer SDP and emit it.\r\n   * @param {object} [offerSdp] - An object containing Offer SDP.\r\n   * @return {Promise<void>} Promise that resolves when handling offer is done.\r\n   */\r\n  async handleOffer(offerSdp) {\r\n    // Avoid unnecessary processing by short circuiting the code if nothing has changed in the sdp.\r\n    if (this._lastOffer && offerSdp && this._lastOffer.sdp === offerSdp.sdp) {\r\n      return;\r\n    }\r\n\r\n    this._isNegotiationAllowed = true;\r\n\r\n    if (!offerSdp) {\r\n      offerSdp = this._lastOffer;\r\n    }\r\n\r\n    this._lastOffer = offerSdp;\r\n\r\n    // Enqueue and skip while signalingState is wrong state.\r\n    // (when room is SFU and there are multiple conns in a same time, it happens)\r\n    if (this._pc.signalingState === 'have-remote-offer') {\r\n      this._offerQueue.push(offerSdp);\r\n      return;\r\n    }\r\n\r\n    await this._setRemoteDescription(offerSdp);\r\n    const answer = await this._makeAnswerSdp().catch(err => logger.error(err));\r\n    this.emit(negotiator_Negotiator.EVENTS.answerCreated.key, answer);\r\n  }\r\n\r\n  /**\r\n   * Set remote description with Answer SDP.\r\n   * @param {object} answerSdp - An object containing Answer SDP.\r\n   */\r\n  async handleAnswer(answerSdp) {\r\n    this._isNegotiationAllowed = true;\r\n\r\n    if (this._isExpectingAnswer) {\r\n      await this._setRemoteDescription(answerSdp);\r\n      this._isExpectingAnswer = false;\r\n    } else if (this._pc.onnegotiationneeded) {\r\n      // manually trigger negotiation\r\n      this._pc.onnegotiationneeded();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set ice candidate with Candidate SDP.\r\n   * @param {object} candidate - An object containing Candidate SDP.\r\n   * @return {Promise<void>} Promise that resolves when handling candidate is done.\r\n   */\r\n  async handleCandidate(candidate) {\r\n    await this._pc\r\n      .addIceCandidate(new RTCIceCandidate(candidate))\r\n      .then(() => logger.log('Successfully added ICE candidate'))\r\n      .catch(err => logger.error('Failed to add ICE candidate', err));\r\n  }\r\n\r\n  /**\r\n   * Close a PeerConnection.\r\n   */\r\n  cleanup() {\r\n    logger.log('Cleaning up PeerConnection');\r\n\r\n    if (\r\n      this._pc &&\r\n      (this._pc.readyState !== 'closed' || this._pc.signalingState !== 'closed')\r\n    ) {\r\n      this._pc.close();\r\n    }\r\n    this._pc = null;\r\n  }\r\n\r\n  /**\r\n   * Create new RTCPeerConnection.\r\n   * @param {object} pcConfig - A RTCConfiguration dictionary for the RTCPeerConnection.\r\n   * @return {RTCPeerConnection} An instance of RTCPeerConnection.\r\n   * @private\r\n   */\r\n  _createPeerConnection(pcConfig = {}) {\r\n    logger.log('Creating RTCPeerConnection');\r\n    // prevent from user passing plan-b\r\n    pcConfig.sdpSemantics = 'unified-plan';\r\n    return new RTCPeerConnection(pcConfig);\r\n  }\r\n\r\n  /**\r\n   * Set up event handlers of RTCPeerConnection events.\r\n   * @private\r\n   */\r\n  _setupPCListeners() {\r\n    const pc = this._pc;\r\n\r\n    pc.ontrack = evt => {\r\n      logger.log('Received remote media stream track');\r\n      evt.streams.forEach(stream => {\r\n        this.emit(negotiator_Negotiator.EVENTS.addStream.key, stream);\r\n      });\r\n    };\r\n\r\n    pc.ondatachannel = evt => {\r\n      logger.log('Received data channel');\r\n      const dc = evt.channel;\r\n      this.emit(negotiator_Negotiator.EVENTS.dcCreated.key, dc);\r\n    };\r\n\r\n    pc.onicecandidate = evt => {\r\n      /**\r\n       * Signals end-of-candidates by\r\n       *\r\n       * Firefox 68~\r\n       * evt = { candidate: RTCIceCandidate({ candidate: \"\" }) and\r\n       * evt = { candidate: null }\r\n       *\r\n       * Firefox ~67, Chrome, Safari\r\n       * evt = { candidate: null }\r\n       */\r\n      if (!evt.candidate || evt.candidate.candidate === '') {\r\n        logger.log('ICE candidates gathering complete');\r\n        return;\r\n      }\r\n\r\n      logger.log('Generated ICE candidate for:', evt.candidate);\r\n      this.emit(negotiator_Negotiator.EVENTS.iceCandidate.key, evt.candidate);\r\n    };\r\n\r\n    pc.oniceconnectionstatechange = () => {\r\n      switch (pc.iceConnectionState) {\r\n        case 'completed':\r\n          logger.log('iceConnectionState is completed');\r\n          // istanbul ignore next\r\n          pc.onicecandidate = () => {};\r\n          break;\r\n        case 'disconnected':\r\n          /**\r\n           * Browsers(Chrome/Safari/Firefox) implement iceRestart with createOffer(),\r\n           * but it seems buggy at 2017/08, so we don't use iceRestart to reconnect intensionally.\r\n           * Ref: https://github.com/nttcom-webcore/ECLRTC-JS-SDK/pull/37\r\n           */\r\n          logger.log(\r\n            'iceConnectionState is disconnected, trying reconnect by browser'\r\n          );\r\n          break;\r\n        case 'failed':\r\n          logger.log('iceConnectionState is failed, closing connection');\r\n          this.emit(negotiator_Negotiator.EVENTS.iceConnectionFailed.key);\r\n          break;\r\n        default:\r\n          logger.log(`iceConnectionState is ${pc.iceConnectionState}`);\r\n          break;\r\n      }\r\n    };\r\n    // from M76, iceConnectionState does not go to `failed` when connection dropps.\r\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=982793\r\n    // we polyfill it until it is resolved w/ API only Chrome implements to keep SDK behavior.\r\n    pc.onconnectionstatechange = () => {\r\n      logger.log(`connectionState is ${pc.connectionState}`);\r\n      if (\r\n        pc.connectionState === 'failed' &&\r\n        // this must be `disconnected`, but ensure it\r\n        pc.iceConnectionState === 'disconnected'\r\n      ) {\r\n        logger.log('connectionState is failed, closing connection');\r\n        this.emit(negotiator_Negotiator.EVENTS.iceConnectionFailed.key);\r\n      }\r\n    };\r\n\r\n    pc.onnegotiationneeded = async () => {\r\n      logger.log('`negotiationneeded` triggered');\r\n\r\n      // Don't make a new offer if it's not stable or if onnegotiationneeded is called consecutively.\r\n      // Chrome 65+ called onnegotiationneeded once per addTrack so force it to run only once.\r\n      if (pc.signalingState === 'stable' && this._isNegotiationAllowed) {\r\n        this._isNegotiationAllowed = false;\r\n        // Emit negotiationNeeded event in case additional handling is needed.\r\n        if (this.originator) {\r\n          const offer = await this._makeOfferSdp();\r\n          this._setLocalDescription(offer);\r\n          this.emit(negotiator_Negotiator.EVENTS.negotiationNeeded.key);\r\n        } else if (this._replaceStreamCalled) {\r\n          this.handleOffer();\r\n        }\r\n\r\n        this._replaceStreamCalled = false;\r\n      }\r\n    };\r\n\r\n    pc.onsignalingstatechange = () => {\r\n      logger.log(`signalingState is ${pc.signalingState}`);\r\n\r\n      // After signaling state is getting back to 'stable',\r\n      // apply pended remote offer, which was stored when simultaneous multiple conns happened in SFU room,\r\n      // Note that this code very rarely applies the old remote offer.\r\n      // E.g. \"Offer A -> Offer B\" should be the right order but for some reason like NW unstablity,\r\n      //      offerQueue might keep \"Offer B\" first and handle \"Offer A\" later.\r\n      if (pc.signalingState === 'stable') {\r\n        const offer = this._offerQueue.shift();\r\n        if (offer) {\r\n          this.handleOffer(offer);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create Offer SDP.\r\n   * @return {Promise<Object>} A promise that resolves with Offer SDP.\r\n   * @private\r\n   */\r\n  async _makeOfferSdp() {\r\n    let offer;\r\n\r\n    try {\r\n      offer = await this._pc.createOffer();\r\n    } catch (err) {\r\n      err.type = 'webrtc';\r\n      logger.error(err);\r\n      this.emit(negotiator_Negotiator.EVENTS.error.key, err);\r\n\r\n      logger.log('Failed to createOffer, ', err);\r\n      throw err;\r\n    }\r\n\r\n    logger.log('Created offer.');\r\n\r\n    if (this._audioBandwidth) {\r\n      offer.sdp = sdpUtil.addAudioBandwidth(offer.sdp, this._audioBandwidth);\r\n    }\r\n    if (this._videoBandwidth) {\r\n      offer.sdp = sdpUtil.addVideoBandwidth(offer.sdp, this._videoBandwidth);\r\n    }\r\n    if (this._audioCodec) {\r\n      offer.sdp = sdpUtil.filterAudioCodec(offer.sdp, this._audioCodec);\r\n    }\r\n    if (this._videoCodec) {\r\n      offer.sdp = sdpUtil.filterVideoCodec(offer.sdp, this._videoCodec);\r\n    }\r\n\r\n    return offer;\r\n  }\r\n\r\n  /**\r\n   * Make Answer SDP and set it as local description.\r\n   * @return {Promise<Object>} A promise that is resolved with answer when setting local SDP is completed.\r\n   * @private\r\n   */\r\n  async _makeAnswerSdp() {\r\n    let answer;\r\n    try {\r\n      answer = await this._pc.createAnswer();\r\n    } catch (err) {\r\n      err.type = 'webrtc';\r\n      logger.error(err);\r\n      this.emit(negotiator_Negotiator.EVENTS.error.key, err);\r\n\r\n      logger.log('Failed to createAnswer, ', err);\r\n      throw err;\r\n    }\r\n\r\n    logger.log('Created answer.');\r\n\r\n    if (this._audioBandwidth) {\r\n      answer.sdp = sdpUtil.addAudioBandwidth(answer.sdp, this._audioBandwidth);\r\n    }\r\n    if (this._videoBandwidth) {\r\n      answer.sdp = sdpUtil.addVideoBandwidth(answer.sdp, this._videoBandwidth);\r\n    }\r\n    if (this._audioCodec) {\r\n      answer.sdp = sdpUtil.filterAudioCodec(answer.sdp, this._audioCodec);\r\n    }\r\n    if (this._videoCodec) {\r\n      answer.sdp = sdpUtil.filterVideoCodec(answer.sdp, this._videoCodec);\r\n    }\r\n\r\n    try {\r\n      await this._pc.setLocalDescription(answer);\r\n    } catch (err) {\r\n      err.type = 'webrtc';\r\n      logger.error(err);\r\n      this.emit(negotiator_Negotiator.EVENTS.error.key, err);\r\n\r\n      logger.log('Failed to setLocalDescription, ', err);\r\n      throw err;\r\n    }\r\n\r\n    logger.log('Set localDescription: answer');\r\n    logger.log(`Setting local description ${JSON.stringify(answer.sdp)}`);\r\n\r\n    return answer;\r\n  }\r\n\r\n  /**\r\n   * Set local description with Offer SDP and emit offerCreated event.\r\n   * @param {RTCSessionDescription} offer - Offer SDP.\r\n   * @return {Promise<void>} A promise that is resolved when setting local SDP is completed.\r\n   * @private\r\n   */\r\n  async _setLocalDescription(offer) {\r\n    logger.log(`Setting local description ${JSON.stringify(offer.sdp)}`);\r\n\r\n    try {\r\n      await this._pc.setLocalDescription(offer);\r\n    } catch (err) {\r\n      err.type = 'webrtc';\r\n      logger.error(err);\r\n      this.emit(negotiator_Negotiator.EVENTS.error.key, err);\r\n\r\n      logger.log('Failed to setLocalDescription, ', err);\r\n      throw err;\r\n    }\r\n\r\n    logger.log('Set localDescription: offer');\r\n    this._isExpectingAnswer = true;\r\n    this.emit(negotiator_Negotiator.EVENTS.offerCreated.key, offer);\r\n  }\r\n\r\n  /**\r\n   * Set remote SDP.\r\n   * @param {object} sdp - An object containing remote SDP.\r\n   * @return {Promise<void>} A promise that is resolved when setting remote SDP is completed.\r\n   * @private\r\n   */\r\n  async _setRemoteDescription(sdp) {\r\n    logger.log(`Setting remote description ${JSON.stringify(sdp)}`);\r\n\r\n    try {\r\n      await this._pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n      this.hasRemoteDescription = true;\r\n    } catch (err) {\r\n      err.type = 'webrtc';\r\n      logger.error(err);\r\n      this.emit(negotiator_Negotiator.EVENTS.error.key, err);\r\n\r\n      logger.log('Failed to setRemoteDescription: ', err);\r\n      throw err;\r\n    }\r\n\r\n    logger.log('Set remoteDescription:', sdp.type);\r\n  }\r\n\r\n  /**\r\n   * Get map object describes which kinds of tracks should be marked as recvonly\r\n   * @param {Object} options - Options of peer.call()\r\n   * @return {Object} Map object which streamTrack will be recvonly or not\r\n   */\r\n  _getReceiveOnlyState(options = {}) {\r\n    const state = {\r\n      audio: false,\r\n      video: false,\r\n    };\r\n\r\n    const hasStream = options.stream instanceof MediaStream;\r\n    const hasAudioTrack = hasStream\r\n      ? options.stream.getAudioTracks().length !== 0\r\n      : false;\r\n    const hasVideoTrack = hasStream\r\n      ? options.stream.getVideoTracks().length !== 0\r\n      : false;\r\n\r\n    // force true if stream not passed(backward compatibility)\r\n    if (\r\n      hasStream === false &&\r\n      options.audioReceiveEnabled === undefined &&\r\n      options.videoReceiveEnabled === undefined\r\n    ) {\r\n      state.audio = true;\r\n      state.video = true;\r\n      return state;\r\n    }\r\n\r\n    // Set recvonly to true if `stream does not have track` and `option is true` case only\r\n    if (options.audioReceiveEnabled && hasAudioTrack === false) {\r\n      state.audio = true;\r\n    }\r\n    if (options.videoReceiveEnabled && hasVideoTrack === false) {\r\n      state.video = true;\r\n    }\r\n\r\n    // If stream has track, ignore options, which results in setting sendrecv internally.\r\n    if (options.audioReceiveEnabled === false && hasAudioTrack) {\r\n      logger.warn(\r\n        'Option audioReceiveEnabled will be treated as true, because passed stream has MediaStreamTrack(kind = audio)'\r\n      );\r\n    }\r\n    if (options.videoReceiveEnabled === false && hasVideoTrack) {\r\n      logger.warn(\r\n        'Option videoReceiveEnabled will be treated as true, because passed stream has MediaStreamTrack(kind = video)'\r\n      );\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  /**\r\n   * Events the Negotiator class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get EVENTS() {\r\n    return NegotiatorEvents;\r\n  }\r\n\r\n  /**\r\n   * Remote media stream received.\r\n   *\r\n   * @event Negotiator#addStream\r\n   * @type {MediaStream}\r\n   */\r\n\r\n  /**\r\n   * DataConnection is ready.\r\n   *\r\n   * @event Negotiator#dcCreated\r\n   * @type {DataConnection}\r\n   */\r\n\r\n  /**\r\n   * Offer SDP created.\r\n   *\r\n   * @event Negotiator#offerCreated\r\n   * @type {RTCSessionDescription}\r\n   */\r\n\r\n  /**\r\n   * Answer SDP created.\r\n   *\r\n   * @event Negotiator#answerCreated\r\n   * @type {RTCSessionDescription}\r\n   */\r\n\r\n  /**\r\n   * Ice Candidate created.\r\n   *\r\n   * @event Negotiator#iceCandidate\r\n   * @type {RTCIceCandidate}\r\n   */\r\n\r\n  /**\r\n   * Ice connection failed.\r\n   *\r\n   * @event Negotiator#iceConnectionFailed\r\n   */\r\n\r\n  /**\r\n   * Session needs negotiation.\r\n   *\r\n   * @event Negotiator#negotiationNeeded\r\n   */\r\n\r\n  /**\r\n   * Error occurred.\r\n   *\r\n   * @event Negotiator#error\r\n   * @type {Error}\r\n   */\r\n}\r\n\r\n/* harmony default export */ var negotiator = (negotiator_Negotiator);\r\n\r\n// EXTERNAL MODULE: ./node_modules/detect-browser/index.js\r\nvar detect_browser = __webpack_require__(\"./node_modules/detect-browser/index.js\");\r\n\r\n// CONCATENATED MODULE: ./src/shared/util.js\r\n\r\n\r\n/**\r\n * Validate the Peer ID format.\r\n * @param {string} [id] - A Peer ID.\r\n * @return {boolean} True if the peerId format is valid. False if not.\r\n */\r\nfunction validateId(id) {\r\n  // Allow empty ids\r\n  return !id || /^[A-Za-z0-9_-]+(?:[ _-][A-Za-z0-9]+)*$/.exec(id);\r\n}\r\n\r\n/**\r\n * Validate the API key.\r\n * @param {string} [key] A SkyWay API key.\r\n * @return {boolean} True if the API key format is valid. False if not.\r\n */\r\nfunction validateKey(key) {\r\n  // Allow empty keys\r\n  return !key || /^[a-z0-9]{8}(-[a-z0-9]{4}){3}-[a-z0-9]{12}$/.exec(key);\r\n}\r\n\r\n/**\r\n * Return random ID.\r\n * @return {string} A text consisting of 16 chars.\r\n */\r\nfunction randomId() {\r\n  const keyLength = 16;\r\n  // '36' means that we want to convert the number to a string using chars in\r\n  // the range of '0-9a-z'. The concatenated 0's are for padding the key,\r\n  // as Math.random() may produce a key shorter than 16 chars in length\r\n  const randString = Math.random().toString(36) + '0000000000000000000';\r\n  return randString.substr(2, keyLength);\r\n}\r\n\r\n/**\r\n * Generate random token.\r\n * @return {string} A token consisting of random alphabet and integer.\r\n */\r\nfunction randomToken() {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substr(2);\r\n}\r\n\r\n/**\r\n * Combine the sliced ArrayBuffers.\r\n * @param {Array} buffers - An Array of ArrayBuffer.\r\n * @return {ArrayBuffer} The combined ArrayBuffer.\r\n */\r\nfunction joinArrayBuffers(buffers) {\r\n  const size = buffers.reduce((sum, buffer) => {\r\n    return sum + buffer.byteLength;\r\n  }, 0);\r\n  const tmpArray = new Uint8Array(size);\r\n  let currPos = 0;\r\n  for (const buffer of buffers) {\r\n    tmpArray.set(new Uint8Array(buffer), currPos);\r\n    currPos += buffer.byteLength;\r\n  }\r\n  return tmpArray.buffer;\r\n}\r\n\r\n/**\r\n * Convert Blob to ArrayBuffer.\r\n * @param {Blob} blob - The Blob to be read as ArrayBuffer.\r\n * @param {Function} cb - Callback function that called after load event fired.\r\n */\r\nfunction blobToArrayBuffer(blob, cb) {\r\n  const fr = new FileReader();\r\n  fr.onload = event => {\r\n    cb(event.target.result);\r\n  };\r\n  fr.readAsArrayBuffer(blob);\r\n}\r\n\r\n/**\r\n * Whether the protocol is https or not.\r\n * @return {boolean} Whether the protocol is https or not.\r\n */\r\nfunction isSecure() {\r\n  return location.protocol === 'https:';\r\n}\r\n\r\n/**\r\n * Detect browser name and version.\r\n * @return {Object} Browser name and major, minor and patch versions. Object is empty if info can't be obtained.\r\n */\r\nfunction detectBrowser() {\r\n  const { name, version } = Object(detect_browser[\"detect\"])();\r\n  const [major, minor, patch] = version.split('.').map(i => parseInt(i));\r\n  return {\r\n    name,\r\n    major,\r\n    minor,\r\n    patch,\r\n  };\r\n}\r\n\r\n/**\r\n * Safari 12.1 may use plan-b sdp and also unified-plan sdp.\r\n * It depends on user settings.\r\n * See https://webkit.org/blog/8672/on-the-road-to-webrtc-1-0-including-vp8/\r\n *\r\n * @return {boolean} Browser is plan-b Safari or NOT\r\n */\r\nfunction isPlanBSafari() {\r\n  const { name } = Object(detect_browser[\"detect\"])();\r\n\r\n  // safari for macOS, ios for iOS\r\n  if (!(name === 'safari' || name === 'ios')) {\r\n    return false;\r\n  }\r\n  // supports unified-plan\r\n  if (RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection')) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/* harmony default export */ var util = ({\r\n  validateId,\r\n  validateKey,\r\n  randomId,\r\n  randomToken,\r\n  joinArrayBuffers,\r\n  blobToArrayBuffer,\r\n  isSecure,\r\n  detectBrowser,\r\n  isPlanBSafari,\r\n});\r\n\r\n// CONCATENATED MODULE: ./src/peer/connection.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ConnectionEvents = new enum_default.a([\r\n  'candidate',\r\n  'offer',\r\n  'answer',\r\n  'close',\r\n  'forceClose',\r\n]);\r\n\r\n/**\r\n * Class that manages connections to other peers.\r\n * @extends EventEmitter\r\n */\r\nclass connection_Connection extends events_default.a {\r\n  /**\r\n   * Create a connection to another peer. Cannot be called directly. Must be called by a subclass.\r\n   * @param {string} remoteId - The peerId of the peer you are connecting to.\r\n   * @param {object} [options] - Optional arguments for the connection.\r\n   * @param {string} [options.connectionId] - An ID to uniquely identify the connection.\r\n   *                                          Defaults to random string if not specified.\r\n   */\r\n  constructor(remoteId, options) {\r\n    super();\r\n\r\n    options = options || {};\r\n\r\n    // Abstract class\r\n    if (this.constructor === connection_Connection) {\r\n      throw new TypeError('Cannot construct Connection instances directly');\r\n    }\r\n\r\n    this._options = options;\r\n\r\n    /**\r\n     * Whether the Connection has been opened or not.\r\n     * @type {boolean}\r\n     */\r\n    this.open = false;\r\n\r\n    /**\r\n     * The connection type. Either 'media' or 'data'.\r\n     * @type {string}\r\n     */\r\n    this.type = undefined;\r\n\r\n    /**\r\n     * Any additional information to send to the peer.\r\n     * @type {object}\r\n     */\r\n    this.metadata = this._options.metadata;\r\n\r\n    /**\r\n     * PeerId of the peer this connection is connected to.\r\n     * @type {string}\r\n     */\r\n    this.remoteId = remoteId;\r\n\r\n    this._negotiator = new negotiator();\r\n\r\n    this._idPrefix = 'c_';\r\n    this._randomIdSuffix = util.randomToken();\r\n\r\n    this._setupNegotiatorMessageHandlers();\r\n  }\r\n\r\n  /**\r\n   * An id to uniquely identify the connection.\r\n   */\r\n  get id() {\r\n    return this._options.connectionId || this._idPrefix + this._randomIdSuffix;\r\n  }\r\n\r\n  /**\r\n   * Handle an sdp answer message from the remote peer.\r\n   * @param {object} answerMessage - Message object containing sdp answer.\r\n   */\r\n  async handleAnswer(answerMessage) {\r\n    if (this._pcAvailable) {\r\n      await this._negotiator.handleAnswer(answerMessage.answer);\r\n      this.open = true;\r\n      this._handleQueuedMessages();\r\n    } else {\r\n      logger.log(`Queuing ANSWER message in ${this.id} from ${this.remoteId}`);\r\n      this._queuedMessages.push({\r\n        type: config.MESSAGE_TYPES.SERVER.ANSWER.key,\r\n        payload: answerMessage,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a candidate message from the remote peer.\r\n   * @param {object} candidateMessage - Message object containing a candidate.\r\n   */\r\n  handleCandidate(candidateMessage) {\r\n    // The orginator(caller) should wait for the remote ANSWER arrival and\r\n    // setRemoteDescription(ANSWER) before handleCandidate(addIceCandidate).\r\n    if (this._negotiator.originator && !this._negotiator.hasRemoteDescription) {\r\n      this._queuedMessages.push({\r\n        type: config.MESSAGE_TYPES.SERVER.CANDIDATE.key,\r\n        payload: candidateMessage,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this._pcAvailable) {\r\n      this._negotiator.handleCandidate(candidateMessage.candidate);\r\n    } else {\r\n      logger.log(\r\n        `Queuing CANDIDATE message in ${this.id} from ${this.remoteId}`\r\n      );\r\n      this._queuedMessages.push({\r\n        type: config.MESSAGE_TYPES.SERVER.CANDIDATE.key,\r\n        payload: candidateMessage,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle an offer message from the remote peer. Allows an offer to be updated.\r\n   * @param {object} offerMessage - Message object containing an offer.\r\n   */\r\n  updateOffer(offerMessage) {\r\n    if (this.open) {\r\n      this._negotiator.handleOffer(offerMessage.offer);\r\n    } else {\r\n      this._options.payload = offerMessage;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gives a RTCPeerConnection.\r\n   */\r\n  getPeerConnection() {\r\n    if (!this.open) {\r\n      return null;\r\n    }\r\n    return this._negotiator._pc;\r\n  }\r\n\r\n  /**\r\n   * Process messages received before the RTCPeerConnection is ready.\r\n   * @private\r\n   */\r\n  _handleQueuedMessages() {\r\n    for (const message of this._queuedMessages) {\r\n      switch (message.type) {\r\n        // Should we remove this ANSWER block\r\n        // because ANSWER should be handled immediately?\r\n        case config.MESSAGE_TYPES.SERVER.ANSWER.key:\r\n          this.handleAnswer(message.payload);\r\n          break;\r\n        case config.MESSAGE_TYPES.SERVER.CANDIDATE.key:\r\n          this.handleCandidate(message.payload);\r\n          break;\r\n        default:\r\n          logger.warn(\r\n            'Unrecognized message type:',\r\n            message.type,\r\n            'from peer:',\r\n            this.remoteId\r\n          );\r\n          break;\r\n      }\r\n    }\r\n    this._queuedMessages = [];\r\n  }\r\n\r\n  /**\r\n   * Disconnect from remote peer.\r\n   * @fires Connection#close\r\n   */\r\n  close(forceClose = false) {\r\n    if (!this.open) {\r\n      return;\r\n    }\r\n\r\n    this.open = false;\r\n    this._negotiator.cleanup();\r\n    this.emit(connection_Connection.EVENTS.close.key);\r\n\r\n    if (forceClose) {\r\n      this.emit(connection_Connection.EVENTS.forceClose.key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle messages from the negotiator.\r\n   * @private\r\n   */\r\n  _setupNegotiatorMessageHandlers() {\r\n    this._negotiator.on(negotiator.EVENTS.answerCreated.key, answer => {\r\n      const connectionAnswer = {\r\n        answer: answer,\r\n        dst: this.remoteId,\r\n        connectionId: this.id,\r\n        connectionType: this.type,\r\n      };\r\n      this.emit(connection_Connection.EVENTS.answer.key, connectionAnswer);\r\n    });\r\n\r\n    this._negotiator.on(negotiator.EVENTS.offerCreated.key, offer => {\r\n      const connectionOffer = {\r\n        offer: offer,\r\n        dst: this.remoteId,\r\n        connectionId: this.id,\r\n        connectionType: this.type,\r\n        metadata: this.metadata,\r\n      };\r\n      if (this.serialization) {\r\n        connectionOffer.serialization = this.serialization;\r\n      }\r\n      if (this.label) {\r\n        connectionOffer.label = this.label;\r\n      }\r\n      if (this.dcInit) {\r\n        connectionOffer.dcInit = this.dcInit;\r\n      }\r\n      this.emit(connection_Connection.EVENTS.offer.key, connectionOffer);\r\n    });\r\n\r\n    this._negotiator.on(negotiator.EVENTS.iceCandidate.key, candidate => {\r\n      const connectionCandidate = {\r\n        candidate: candidate,\r\n        dst: this.remoteId,\r\n        connectionId: this.id,\r\n        connectionType: this.type,\r\n      };\r\n      this.emit(connection_Connection.EVENTS.candidate.key, connectionCandidate);\r\n    });\r\n\r\n    this._negotiator.on(negotiator.EVENTS.iceConnectionFailed.key, () => {\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The remote peerId.\r\n   * @type {string}\r\n   * @deprecated Use remoteId instead.\r\n   */\r\n  get peer() {\r\n    logger.warn(\r\n      `${this.constructor.name}.peer is deprecated and may be removed from a future version.` +\r\n        ` Please use ${this.constructor.name}.remoteId instead.`\r\n    );\r\n    return this.remoteId;\r\n  }\r\n\r\n  /**\r\n   * Events the Connection can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get EVENTS() {\r\n    return ConnectionEvents;\r\n  }\r\n\r\n  /**\r\n   * ICE candidate created event.\r\n   *\r\n   * @event Connection#candidate\r\n   * @type {object}\r\n   * @property {RTCIceCandidate} candidate - The ice candidate.\r\n   * @property {string} dst - Destination peerId\r\n   * @property {string} connectionId - This connection's id.\r\n   * @property {string} connectionType - This connection's type.\r\n   */\r\n\r\n  /**\r\n   * Offer created event.\r\n   *\r\n   * @event Connection#offer\r\n   * @type {object}\r\n   * @property {RTCSessionDescription} offer - The local offer to send to the peer.\r\n   * @property {string} dst - Destination peerId\r\n   * @property {string} connectionId - This connection's id.\r\n   * @property {string} connectionType - This connection's type.\r\n   * @property {object} metadata - Any extra data to send with the connection.\r\n   */\r\n\r\n  /**\r\n   * Answer created event.\r\n   *\r\n   * @event Connection#answer\r\n   * @type {object}\r\n   * @property {RTCSessionDescription} answer - The local answer to send to the peer.\r\n   * @property {string} dst - Destination peerId\r\n   * @property {string} connectionId - This connection's id.\r\n   * @property {string} connectionType - This connection's type.\r\n   */\r\n\r\n  /**\r\n   * Connection closed event.\r\n   *\r\n   * @event Connection#close\r\n   */\r\n\r\n  /**\r\n   * Requested to close the connection.\r\n   *\r\n   * @event Connection#forceClose\r\n   */\r\n}\r\n\r\n/* harmony default export */ var peer_connection = (connection_Connection);\r\n\r\n// EXTERNAL MODULE: ./node_modules/js-binarypack/lib/binarypack.js\r\nvar binarypack = __webpack_require__(\"./node_modules/js-binarypack/lib/binarypack.js\");\r\nvar binarypack_default = /*#__PURE__*/__webpack_require__.n(binarypack);\r\n\r\n// EXTERNAL MODULE: ./node_modules/object-sizeof/index.js\r\nvar object_sizeof = __webpack_require__(\"./node_modules/object-sizeof/index.js\");\r\nvar object_sizeof_default = /*#__PURE__*/__webpack_require__.n(object_sizeof);\r\n\r\n// CONCATENATED MODULE: ./src/peer/dataConnection.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DCEvents = new enum_default.a(['open', 'data', 'error']);\r\n\r\nDCEvents.extend(peer_connection.EVENTS.enums);\r\n\r\nconst DCSerializations = new enum_default.a(['binary', 'binary-utf8', 'json', 'none']);\r\n\r\n/**\r\n * Class that manages data connections to other peers.\r\n * @extends Connection\r\n */\r\nclass dataConnection_DataConnection extends peer_connection {\r\n  /**\r\n   * Create a data connection to another peer.\r\n   * @param {string} remoteId - The peerId of the peer you are connecting to.\r\n   * @param {object} [options] - Optional arguments for the connection.\r\n   * @param {string} [options.connectionId] - An ID to uniquely identify the connection. Defaults to random string if not specified.\r\n   * @param {string} [options.serialization] - How to serialize data when sending. One of 'binary', 'json' or 'none'.\r\n   * @param {string} [options.label] - Label to easily identify the connection on either peer.\r\n   * @param {Object} [options.dcInit] - Options passed to createDataChannel() as a RTCDataChannelInit.\r\n   *                  See https://www.w3.org/TR/webrtc/#dom-rtcdatachannelinit\r\n   * @param {string} [options.queuedMessages] - An array of messages that were already received before the connection was created.\r\n   * @param {string} [options.payload] - An offer message that triggered creating this object.\r\n   */\r\n  constructor(remoteId, options) {\r\n    super(remoteId, options);\r\n\r\n    this._idPrefix = 'dc_';\r\n    this.type = 'data';\r\n\r\n    this._isOnOpenCalled = false;\r\n\r\n    /**\r\n     * Label to easily identify the DataConnection on either peer.\r\n     * @type {string}\r\n     */\r\n    this.label = this._options.label || this.id;\r\n\r\n    // Use reliable mode by default\r\n    this.dcInit = this._options.dcInit || {};\r\n\r\n    // Serialization is binary by default\r\n    this.serialization = dataConnection_DataConnection.SERIALIZATIONS.binary.key;\r\n    if (this._options.serialization) {\r\n      if (!dataConnection_DataConnection.SERIALIZATIONS.get(this._options.serialization)) {\r\n        // Can't emit error as there hasn't been a chance to set up listeners\r\n        throw new Error('Invalid serialization');\r\n      }\r\n      this.serialization = this._options.serialization;\r\n\r\n      if (this._isUnreliableDCInit(this.dcInit)) {\r\n        logger.warn(\r\n          'You can not specify serialization with unreliable mode enabled.'\r\n        );\r\n        this.serialization = dataConnection_DataConnection.SERIALIZATIONS.binary.key;\r\n      }\r\n    }\r\n\r\n    // New send code properties\r\n    this._sendBuffer = [];\r\n    this._receivedData = {};\r\n    // Messages stored by peer because DC was not ready yet\r\n    this._queuedMessages = this._options.queuedMessages || [];\r\n\r\n    // This replaces the PeerJS 'initialize' method\r\n    this._negotiator.on(negotiator.EVENTS.dcCreated.key, dc => {\r\n      this._dc = dc;\r\n      this._dc.binaryType = 'arraybuffer';\r\n      this._setupMessageHandlers();\r\n\r\n      // Manually call dataChannel.onopen() if the dataChannel opened before the event handler was set.\r\n      // This can happen if the tab is in the background in Chrome as the event loop is handled differently.\r\n      if (!this._isOnOpenCalled && this._dc.readyState === 'open') {\r\n        this._dc.onopen();\r\n      }\r\n    });\r\n\r\n    // If this is not the originator, we need to set the pcConfig\r\n    if (this._options.payload) {\r\n      this._options.payload.pcConfig = this._options.pcConfig;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start connection via negotiator and handle queued messages.\r\n   * @return {Promise<void>} Promise that resolves when starting is done.\r\n   */\r\n  async startConnection() {\r\n    await this._negotiator.startConnection(\r\n      this._options.payload || {\r\n        originator: true,\r\n        type: 'data',\r\n        label: this.label,\r\n        dcInit: this.dcInit,\r\n        pcConfig: this._options.pcConfig,\r\n      }\r\n    );\r\n\r\n    this._pcAvailable = true;\r\n    this._handleQueuedMessages();\r\n  }\r\n\r\n  /**\r\n   * Set up data channel event and message handlers.\r\n   * @private\r\n   */\r\n  _setupMessageHandlers() {\r\n    this._dc.onopen = () => {\r\n      if (this._isOnOpenCalled) {\r\n        return;\r\n      }\r\n\r\n      logger.log('Data channel connection success');\r\n      this.open = true;\r\n      this._isOnOpenCalled = true;\r\n      this.emit(dataConnection_DataConnection.EVENTS.open.key);\r\n    };\r\n\r\n    // We no longer need the reliable shim here\r\n    this._dc.onmessage = msg => {\r\n      this._handleDataMessage(msg);\r\n    };\r\n\r\n    this._dc.onclose = () => {\r\n      logger.log('DataChannel closed for:', this.id);\r\n      this.close();\r\n    };\r\n\r\n    this._dc.onerror = err => {\r\n      logger.error(err);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Handle a data message from the peer.\r\n   * @param {object} msg - The data message to handle.\r\n   * @private\r\n   */\r\n  _handleDataMessage(msg) {\r\n    if (this.serialization === dataConnection_DataConnection.SERIALIZATIONS.none.key) {\r\n      this.emit(dataConnection_DataConnection.EVENTS.data.key, msg.data);\r\n      return;\r\n    } else if (this.serialization === dataConnection_DataConnection.SERIALIZATIONS.json.key) {\r\n      this.emit(dataConnection_DataConnection.EVENTS.data.key, JSON.parse(msg.data));\r\n      return;\r\n    }\r\n\r\n    // Everything below is for serialization binary or binary-utf8\r\n\r\n    const dataMeta = binarypack_default.a.unpack(msg.data);\r\n\r\n    // If we haven't started receiving pieces of data with a given id, this will be undefined\r\n    // In that case, we need to initialise receivedData[id] to hold incoming file chunks\r\n    let currData = this._receivedData[dataMeta.id];\r\n    if (!currData) {\r\n      currData = this._receivedData[dataMeta.id] = {\r\n        size: dataMeta.size,\r\n        type: dataMeta.type,\r\n        name: dataMeta.name,\r\n        mimeType: dataMeta.mimeType,\r\n        totalParts: dataMeta.totalParts,\r\n        parts: new Array(dataMeta.totalParts),\r\n        receivedParts: 0,\r\n      };\r\n    }\r\n    currData.receivedParts++;\r\n    currData.parts[dataMeta.index] = dataMeta.data;\r\n\r\n    if (currData.receivedParts === currData.totalParts) {\r\n      delete this._receivedData[dataMeta.id];\r\n\r\n      // recombine the sliced arraybuffers\r\n      const ab = util.joinArrayBuffers(currData.parts);\r\n      const unpackedData = binarypack_default.a.unpack(ab);\r\n\r\n      let finalData;\r\n      switch (currData.type) {\r\n        case 'Blob':\r\n          finalData = new Blob([new Uint8Array(unpackedData)], {\r\n            type: currData.mimeType,\r\n          });\r\n          break;\r\n        case 'File':\r\n          finalData = new File([new Uint8Array(unpackedData)], currData.name, {\r\n            type: currData.mimeType,\r\n          });\r\n          break;\r\n        default:\r\n          finalData = unpackedData;\r\n      }\r\n\r\n      this.emit(dataConnection_DataConnection.EVENTS.data.key, finalData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data to peer. If serialization is 'binary', it will chunk it before sending.\r\n   * @param {*} data - The data to send to the peer.\r\n   */\r\n  send(data) {\r\n    if (!this.open) {\r\n      this.emit(\r\n        dataConnection_DataConnection.EVENTS.error.key,\r\n        new Error(\r\n          'Connection is not open. You should listen for the `open` event before sending messages.'\r\n        )\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (data === undefined || data === null) {\r\n      return;\r\n    }\r\n\r\n    if (this.serialization === dataConnection_DataConnection.SERIALIZATIONS.none.key) {\r\n      this._sendBuffer.push(data);\r\n      this._startSendLoop();\r\n      return;\r\n    } else if (this.serialization === dataConnection_DataConnection.SERIALIZATIONS.json.key) {\r\n      this._sendBuffer.push(JSON.stringify(data));\r\n      this._startSendLoop();\r\n      return;\r\n    }\r\n\r\n    // Everything below is for serialization binary or binary-utf8\r\n\r\n    const packedData = binarypack_default.a.pack(data);\r\n    const size = packedData.size;\r\n    const type = data.constructor.name;\r\n\r\n    const dataMeta = {\r\n      id: util.randomId(),\r\n      type: type,\r\n      size: size,\r\n      totalParts: 0,\r\n    };\r\n\r\n    if (type === 'File') {\r\n      dataMeta.name = data.name;\r\n    }\r\n    if (data instanceof Blob) {\r\n      dataMeta.mimeType = data.type;\r\n    }\r\n\r\n    // dataMeta contains all possible parameters by now.\r\n    // Adjust the chunk size to avoid issues with sending\r\n    const chunkSize = config.maxChunkSize - object_sizeof_default()(dataMeta);\r\n    const numSlices = Math.ceil(size / chunkSize);\r\n    dataMeta.totalParts = numSlices;\r\n\r\n    // Perform any required slicing\r\n    for (let sliceIndex = 0; sliceIndex < numSlices; sliceIndex++) {\r\n      const slice = packedData.slice(\r\n        sliceIndex * chunkSize,\r\n        (sliceIndex + 1) * chunkSize\r\n      );\r\n      dataMeta.index = sliceIndex;\r\n      dataMeta.data = slice;\r\n\r\n      // Add all chunks to our buffer and start the send loop (if we haven't already)\r\n      util.blobToArrayBuffer(binarypack_default.a.pack(dataMeta), ab => {\r\n        this._sendBuffer.push(ab);\r\n        this._startSendLoop();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disconnect from remote peer.\r\n   * @fires DataConnection#close\r\n   */\r\n  close(forceClose) {\r\n    super.close(forceClose);\r\n\r\n    this._isOnOpenCalled = false;\r\n  }\r\n\r\n  /**\r\n   * Start sending messages at intervals to allow other threads to run.\r\n   * @private\r\n   */\r\n  _startSendLoop() {\r\n    if (!this.sendInterval) {\r\n      // Define send interval\r\n      // Try sending a new chunk with every callback\r\n      this.sendInterval = setInterval(() => {\r\n        // Might need more extensive buffering than this:\r\n        const currMsg = this._sendBuffer.shift();\r\n        try {\r\n          this._dc.send(currMsg);\r\n        } catch (error) {\r\n          this._sendBuffer.push(currMsg);\r\n        }\r\n\r\n        if (this._sendBuffer.length === 0) {\r\n          clearInterval(this.sendInterval);\r\n          this.sendInterval = undefined;\r\n        }\r\n      }, config.sendInterval);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check dcInit argument is valid to enable unreliable mode.\r\n   * See https://www.w3.org/TR/webrtc/#dom-rtcdatachannelinit\r\n   * @param {Object} dcInit - Options passed to createDataChannel() as a RTCDataChannelInit.\r\n   *                  See https://www.w3.org/TR/webrtc/#dom-rtcdatachannelinit\r\n   * @return {boolean} Returns this dcInit has valid properties to enable unreliable mode.\r\n   */\r\n  _isUnreliableDCInit(dcInit) {\r\n    if (!dcInit) {\r\n      return false;\r\n    }\r\n\r\n    // Either of these props are passed, works on unreliable mode.\r\n    if ('maxRetransmits' in dcInit || 'maxPacketLifeTime' in dcInit) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Possible serializations for the DataConnection.\r\n   * @type {Enum}\r\n   */\r\n  static get SERIALIZATIONS() {\r\n    return DCSerializations;\r\n  }\r\n\r\n  /**\r\n   * Events the DataConnection class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get EVENTS() {\r\n    return DCEvents;\r\n  }\r\n\r\n  /**\r\n   * DataConnection created event.\r\n   *\r\n   * @event DataConnection#open\r\n   */\r\n\r\n  /**\r\n   * Data received from peer.\r\n   *\r\n   * @event DataConnection#data\r\n   * @type {*}\r\n   */\r\n\r\n  /**\r\n   * Error occurred.\r\n   *\r\n   * @event DataConnection#error\r\n   * @type {Error}\r\n   */\r\n}\r\n\r\n/* harmony default export */ var dataConnection = (dataConnection_DataConnection);\r\n\r\n// CONCATENATED MODULE: ./src/peer/mediaConnection.js\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MCEvents = new enum_default.a(['stream']);\r\n\r\nMCEvents.extend(peer_connection.EVENTS.enums);\r\n\r\n/**\r\n * Class that manages data connections to other peers.\r\n * @extends Connection\r\n */\r\nclass mediaConnection_MediaConnection extends peer_connection {\r\n  /**\r\n   * Create a data connection to another peer.\r\n   * @param {string} remoteId - The peerId of the peer you are connecting to.\r\n   * @param {object} [options] - Optional arguments for the connection.\r\n   * @param {string} [options.connectionId] - An ID to uniquely identify the connection. Defaults to random string if not specified.\r\n   * @param {string} [options.label] - Label to easily identify the connection on either peer.\r\n   * @param {object} [options.pcConfig] - A RTCConfiguration dictionary for the RTCPeerConnection.\r\n   * @param {object} [options.stream] - The MediaStream to send to the remote peer. Set only when on the caller side.\r\n   * @param {boolean} [options.originator] - true means the peer is the originator of the connection.\r\n   * @param {string} [options.queuedMessages] - An array of messages that were already received before the connection was created.\r\n   * @param {string} [options.payload] - An offer message that triggered creating this object.\r\n   * @param {number} [options.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [options.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [options.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [options.audioCodec] - A video codec like 'PCMU'\r\n   * @param {boolean} [options.videoReceiveEnabled] - A flag to set video recvonly\r\n   * @param {boolean} [options.audioReceiveEnabled] - A flag to set audio recvonly\r\n   */\r\n  constructor(remoteId, options) {\r\n    super(remoteId, options);\r\n\r\n    this._idPrefix = 'mc_';\r\n    this.type = 'media';\r\n\r\n    /**\r\n     * The local MediaStream.\r\n     * @type {MediaStream}\r\n     */\r\n    this.localStream = this._options.stream;\r\n\r\n    // Messages stored by peer because MC was not ready yet\r\n    this._queuedMessages = this._options.queuedMessages || [];\r\n    this._pcAvailable = false;\r\n  }\r\n\r\n  /**\r\n   * Start connection via negotiator and handle queued messages.\r\n   * @return {Promise<void>} Promise that resolves when starting is done.\r\n   */\r\n  async startConnection() {\r\n    if (!this._options.originator) {\r\n      return;\r\n    }\r\n\r\n    await this._negotiator.startConnection({\r\n      type: 'media',\r\n      stream: this.localStream,\r\n      originator: this._options.originator,\r\n      pcConfig: this._options.pcConfig,\r\n      videoBandwidth: this._options.videoBandwidth,\r\n      audioBandwidth: this._options.audioBandwidth,\r\n      videoCodec: this._options.videoCodec,\r\n      audioCodec: this._options.audioCodec,\r\n      videoReceiveEnabled: this._options.videoReceiveEnabled,\r\n      audioReceiveEnabled: this._options.audioReceiveEnabled,\r\n    });\r\n\r\n    this._pcAvailable = true;\r\n    this._handleQueuedMessages();\r\n  }\r\n\r\n  /**\r\n   * Create and send an answer message.\r\n   * @param {MediaStream} stream - The stream to send to the peer.\r\n   * @param {object} [options] - Optional arguments for the connection.\r\n   * @param {number} [options.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [options.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [options.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [options.audioCodec] - A video codec like 'PCMU'\r\n   */\r\n  answer(stream, options = {}) {\r\n    if (this.localStream) {\r\n      logger.warn(\r\n        'localStream already exists on this MediaConnection. Are you answering a call twice?'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this._options.payload.stream = stream;\r\n\r\n    this.localStream = stream;\r\n    this._negotiator.startConnection({\r\n      type: 'media',\r\n      stream: this.localStream,\r\n      originator: false,\r\n      offer: this._options.payload.offer,\r\n      pcConfig: this._options.pcConfig,\r\n      audioBandwidth: options.audioBandwidth,\r\n      videoBandwidth: options.videoBandwidth,\r\n      videoCodec: options.videoCodec,\r\n      audioCodec: options.audioCodec,\r\n    });\r\n    this._pcAvailable = true;\r\n\r\n    this._handleQueuedMessages();\r\n\r\n    this.open = true;\r\n  }\r\n\r\n  /**\r\n   * Replace the stream being sent with a new one.\r\n   * @param {MediaStream} newStream - The stream to replace the old stream with.\r\n   */\r\n  replaceStream(newStream) {\r\n    this._negotiator.replaceStream(newStream);\r\n    this.localStream = newStream;\r\n  }\r\n\r\n  /**\r\n   * Set up negotiator message handlers.\r\n   * @private\r\n   */\r\n  _setupNegotiatorMessageHandlers() {\r\n    super._setupNegotiatorMessageHandlers();\r\n\r\n    this._negotiator.on(negotiator.EVENTS.addStream.key, remoteStream => {\r\n      logger.log('Receiving stream', remoteStream);\r\n\r\n      // return if the remoteStream which we will add already exists\r\n      if (this.remoteStream && this.remoteStream.id === remoteStream.id) {\r\n        return;\r\n      }\r\n      this.remoteStream = remoteStream;\r\n\r\n      this.emit(mediaConnection_MediaConnection.EVENTS.stream.key, remoteStream);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Events the MediaConnection class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get EVENTS() {\r\n    return MCEvents;\r\n  }\r\n\r\n  /**\r\n   * MediaStream received from peer.\r\n   *\r\n   * @event MediaConnection#stream\r\n   * @type {MediaStream}\r\n   */\r\n}\r\n\r\n/* harmony default export */ var mediaConnection = (mediaConnection_MediaConnection);\r\n\r\n// EXTERNAL MODULE: ./node_modules/socket.io-parser/index.js\r\nvar socket_io_parser = __webpack_require__(\"./node_modules/socket.io-parser/index.js\");\r\nvar socket_io_parser_default = /*#__PURE__*/__webpack_require__.n(socket_io_parser);\r\n\r\n// EXTERNAL MODULE: ./node_modules/has-binary2/index.js\r\nvar has_binary2 = __webpack_require__(\"./node_modules/has-binary2/index.js\");\r\nvar has_binary2_default = /*#__PURE__*/__webpack_require__.n(has_binary2);\r\n\r\n// CONCATENATED MODULE: ./src/peer/room.js\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Events = [\r\n  'stream',\r\n  'open',\r\n  'close',\r\n  'peerJoin',\r\n  'peerLeave',\r\n  'error',\r\n  'data',\r\n  'log',\r\n];\r\n\r\nconst MessageEvents = [\r\n  'offer',\r\n  'answer',\r\n  'candidate',\r\n  'leave',\r\n  'close',\r\n  'getLog',\r\n  'broadcast',\r\n];\r\n\r\nconst RoomEvents = new enum_default.a(Events);\r\nconst RoomMessageEvents = new enum_default.a(MessageEvents);\r\n\r\n/**\r\n * Class to manage rooms where one or more users can participate\r\n * @extends EventEmitter\r\n */\r\nclass room_Room extends events_default.a {\r\n  /**\r\n   * Creates a Room instance.\r\n   * @param {string} name - Room name.\r\n   * @param {string} peerId - User's peerId.\r\n   * @param {object} [options] - Optional arguments for the connection.\r\n   * @param {object} [options.stream] - User's medias stream to send other participants.\r\n   * @param {object} [options.pcConfig] - A RTCConfiguration dictionary for the RTCPeerConnection.\r\n   * @param {number} [options.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [options.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [options.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [options.audioCodec] - A video codec like 'PCMU'\r\n   * @param {boolean} [options.videoReceiveEnabled] - A flag to set video recvonly\r\n   * @param {boolean} [options.audioReceiveEnabled] - A flag to set audio recvonly\r\n   */\r\n  constructor(name, peerId, options = {}) {\r\n    super();\r\n\r\n    // Abstract class\r\n    if (this.constructor === room_Room) {\r\n      throw new TypeError('Cannot construct Room instances directly');\r\n    }\r\n\r\n    this.name = name;\r\n    this._options = options;\r\n    this._peerId = peerId;\r\n    this._localStream = this._options.stream;\r\n\r\n    this._pcConfig = this._options.pcConfig;\r\n\r\n    this.lastSent = 0;\r\n    this.messageQueue = [];\r\n    this.sendIntervalID = null;\r\n  }\r\n\r\n  /**\r\n   * Validate whether the size of data to send is over the limits or not.\r\n   * @param {object} data - The data to Validate.\r\n   */\r\n  validateSendDataSize(data) {\r\n    const isBin = has_binary2_default()([data]);\r\n    const packet = {\r\n      type: isBin ? socket_io_parser_default.a.BINARY_EVENT : socket_io_parser_default.a.EVENT,\r\n      data: [data],\r\n    };\r\n    const encoder = new socket_io_parser_default.a.Encoder();\r\n    let dataSize;\r\n    encoder.encode(packet, encodedPackets => {\r\n      dataSize = isBin\r\n        ? encodedPackets[1].byteLength\r\n        : encodedPackets[0].length;\r\n    });\r\n    const maxDataSize = config.maxDataSize;\r\n    if (dataSize > maxDataSize) {\r\n      throw new Error('The size of data to send must be less than 20 MB');\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Send a message to the room with a delay so that the transmission interval does not exceed the limit.\r\n   * @param {object} msg - The data to send to this room.\r\n   * @param {string} key - The key of broadcast event.\r\n   */\r\n  _sendData(msg, key) {\r\n    const sendInterval = config.minBroadcastIntervalMs;\r\n\r\n    const now = Date.now();\r\n    const diff = now - this.lastsend;\r\n\r\n    // When no queued message and last message is enough old\r\n    if (this.messageQueue.length == 0 && diff >= sendInterval) {\r\n      // Update last send time and send message without queueing.\r\n      this.lastsend = now;\r\n      this.emit(key, msg);\r\n      return;\r\n    }\r\n\r\n    // Send a message to the room with a delay because the transmission interval exceeds the limit.\r\n\r\n    // Push this message into a queue.\r\n    this.messageQueue.push({ msg, key });\r\n\r\n    // Return if setInterval is already set.\r\n    if (this.sendIntervalID !== null) {\r\n      return;\r\n    }\r\n    this.sendIntervalID = setInterval(() => {\r\n      // If all message are sent, remove this interval ID.\r\n      if (this.messageQueue.length === 0) {\r\n        clearInterval(this.sendIntervalID);\r\n        this.sendIntervalID = null;\r\n        return;\r\n      }\r\n      // Update last send time send message.\r\n      const message = this.messageQueue.shift();\r\n      this.lastsend = Date.now();\r\n      this.emit(message.key, message.msg);\r\n    }, sendInterval);\r\n  }\r\n\r\n  /**\r\n   * Handle received data message from other paricipants in the room.\r\n   * It emits data event.\r\n   * @param {object} dataMessage - The data message to handle.\r\n   * @param {ArrayBuffer} dataMessage.data - The data that a peer sent in the room.\r\n   * @param {string} dataMessage.src -  The peerId of the peer who sent the data.\r\n   * @param {string} [dataMessage.roomName] -  The name of the room user is joining.\r\n   */\r\n  handleData(dataMessage) {\r\n    const message = {\r\n      data: dataMessage.data,\r\n      src: dataMessage.src,\r\n    };\r\n    this.emit(room_Room.EVENTS.data.key, message);\r\n  }\r\n\r\n  /**\r\n   * Handle received log message.\r\n   * It emits log event with room's logs.\r\n   * @param {Array} logs - An array containing JSON text.\r\n   */\r\n  handleLog(logs) {\r\n    this.emit(room_Room.EVENTS.log.key, logs);\r\n  }\r\n\r\n  /**\r\n   * Start getting room's logs from SkyWay server.\r\n   */\r\n  getLog() {\r\n    const message = {\r\n      roomName: this.name,\r\n    };\r\n    this.emit(room_Room.MESSAGE_EVENTS.getLog.key, message);\r\n  }\r\n\r\n  /**\r\n   * Events the Room class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get EVENTS() {\r\n    return RoomEvents;\r\n  }\r\n\r\n  /**\r\n   * MediaStream received from peer in the room.\r\n   *\r\n   * @event Room#stream\r\n   * @type {MediaStream}\r\n   */\r\n\r\n  /**\r\n   * Room is ready.\r\n   *\r\n   * @event Room#open\r\n   */\r\n\r\n  /**\r\n   * All connections in the room has closed.\r\n   *\r\n   * @event Room#close\r\n   */\r\n\r\n  /**\r\n   * New peer has joined.\r\n   *\r\n   * @event Room#peerJoin\r\n   * @type {string}\r\n   */\r\n\r\n  /**\r\n   * A peer has left.\r\n   *\r\n   * @event Room#peerLeave\r\n   * @type {string}\r\n   */\r\n\r\n  /**\r\n   * Error occured\r\n   *\r\n   * @event Room#error\r\n   */\r\n\r\n  /**\r\n   * Data received from peer.\r\n   *\r\n   * @event Room#data\r\n   * @type {object}\r\n   * @property {string} src - The peerId of the peer who sent the data.\r\n   * @property {*} data - The data that a peer sent in the room.\r\n   */\r\n\r\n  /**\r\n   * Room's log received.\r\n   *\r\n   * @event Room#log\r\n   * @type {Array}\r\n   */\r\n\r\n  /**\r\n   * Connection closed event.\r\n   *\r\n   * @event Connection#close\r\n   */\r\n\r\n  /**\r\n   * Events the Room class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get MESSAGE_EVENTS() {\r\n    return RoomMessageEvents;\r\n  }\r\n\r\n  /**\r\n   * Offer created event.\r\n   *\r\n   * @event Room#offer\r\n   * @type {object}\r\n   * @property {RTCSessionDescription} offer - The local offer to send to the peer.\r\n   * @property {string} dst - Destination peerId\r\n   * @property {string} connectionId - This connection's id.\r\n   * @property {string} connectionType - This connection's type.\r\n   * @property {object} metadata - Any extra data to send with the connection.\r\n   */\r\n\r\n  /**\r\n   * Answer created event.\r\n   *\r\n   * @event Room#answer\r\n   * @type {object}\r\n   * @property {RTCSessionDescription} answer - The local answer to send to the peer.\r\n   * @property {string} dst - Destination peerId\r\n   * @property {string} connectionId - This connection's id.\r\n   * @property {string} connectionType - This connection's type.\r\n   */\r\n\r\n  /**\r\n   * ICE candidate created event.\r\n   *\r\n   * @event Room#candidate\r\n   * @type {object}\r\n   * @property {RTCIceCandidate} candidate - The ice candidate.\r\n   * @property {string} dst - Destination peerId\r\n   * @property {string} connectionId - This connection's id.\r\n   * @property {string} connectionType - This connection's type.\r\n   */\r\n\r\n  /**\r\n   * Left the room.\r\n   *\r\n   * @event Room#peerLeave\r\n   * @type {object}\r\n   * @property {string} roomName - The room name.\r\n   */\r\n\r\n  /**\r\n   * Get room log from SkyWay server.\r\n   *\r\n   * @event Room#log\r\n   * @type {object}\r\n   * @property {string} roomName - The room name.\r\n   */\r\n}\r\n\r\n/* harmony default export */ var peer_room = (room_Room);\r\n\r\n// CONCATENATED MODULE: ./src/peer/sfuRoom.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst sfuRoom_MessageEvents = ['offerRequest', 'candidate'];\r\n\r\nconst SFUEvents = new enum_default.a([]);\r\nSFUEvents.extend(peer_room.EVENTS.enums);\r\nconst SFUMessageEvents = new enum_default.a(sfuRoom_MessageEvents);\r\nSFUMessageEvents.extend(peer_room.MESSAGE_EVENTS.enums);\r\n\r\n/**\r\n * Class that manages SFU type room.\r\n * @extends Room\r\n */\r\nclass sfuRoom_SFURoom extends peer_room {\r\n  /**\r\n   * Creates a SFU type room.\r\n   * @param {string} name - Room name.\r\n   * @param {string} peerId - peerId - User's peerId.\r\n   * @param {object} [options] - Optional arguments for the connection.\r\n   * @param {MediaStream} [options.stream] - The MediaStream to send to the remote peer.\r\n   * @param {object} [options.pcConfig] - A RTCConfiguration dictionary for the RTCPeerConnection.\r\n   * @param {number} [options.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [options.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [options.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [options.audioCodec] - A video codec like 'PCMU'\r\n   * @param {boolean} [options.videoReceiveEnabled] - A flag to set video recvonly\r\n   * @param {boolean} [options.audioReceiveEnabled] - A flag to set audio recvonly\r\n   */\r\n  constructor(name, peerId, options) {\r\n    super(name, peerId, options);\r\n\r\n    this.remoteStreams = {};\r\n    this.members = [];\r\n\r\n    this._open = false;\r\n    this._msidMap = {};\r\n    this._unknownStreams = {};\r\n\r\n    this._negotiator = new negotiator();\r\n  }\r\n\r\n  /**\r\n   * Send Offer request message to SFU server.\r\n   * @param {MediaStream} [stream] - A media stream to send.\r\n   */\r\n  call(stream) {\r\n    if (stream) {\r\n      this._localStream = stream;\r\n    }\r\n\r\n    const data = {\r\n      roomName: this.name,\r\n    };\r\n\r\n    this.emit(sfuRoom_SFURoom.MESSAGE_EVENTS.offerRequest.key, data);\r\n  }\r\n\r\n  /**\r\n   * Handles Offer message from SFU server.\r\n   * It create new RTCPeerConnection object.\r\n   * @param {object} offerMessage - Message object containing Offer SDP.\r\n   * @param {object} offerMessage.offer - Object containing Offer SDP text.\r\n   */\r\n  handleOffer(offerMessage) {\r\n    let offer = offerMessage.offer;\r\n\r\n    /**\r\n     * Our SFU returns unified-plan SDP.\r\n     * Our support browsers and sdp semantics relations are\r\n     *\r\n     * Chrome: unified-plan\r\n     * Firefox: unified-plan\r\n     * Safari 12.1~: plan-b\r\n     * Safari 12.1~: unified-plan(if user enables)\r\n     * Safari 12.1.1~: unified-plan\r\n     *\r\n     * So we need to convert server offer SDP for plan-b Safari\r\n     * We don't need to convert the answer back to Unified Plan because the server can handle Plan B.\r\n     */\r\n    if (util.isPlanBSafari()) {\r\n      offer = sdpUtil.unifiedToPlanB(offer);\r\n    }\r\n\r\n    // Handle SFU Offer and send Answer to Server\r\n    if (this._connectionStarted) {\r\n      this._negotiator.handleOffer(offer);\r\n    } else {\r\n      this._negotiator.startConnection({\r\n        type: 'media',\r\n        stream: this._localStream,\r\n        pcConfig: this._options.pcConfig,\r\n        offer: offer,\r\n      });\r\n      this._setupNegotiatorMessageHandlers();\r\n      this._connectionStarted = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle messages from the negotiator.\r\n   * @private\r\n   */\r\n  _setupNegotiatorMessageHandlers() {\r\n    this._negotiator.on(negotiator.EVENTS.addStream.key, stream => {\r\n      const remoteStream = stream;\r\n\r\n      if (this._msidMap[remoteStream.id]) {\r\n        remoteStream.peerId = this._msidMap[remoteStream.id];\r\n\r\n        // return if the remoteStream's peerID is my peerID\r\n        if (remoteStream.peerId === this._peerId) {\r\n          return;\r\n        }\r\n\r\n        // return if the cachedStream which we will add already exists\r\n        const cachedStream = this.remoteStreams[remoteStream.id];\r\n        if (cachedStream && cachedStream.id === remoteStream.id) {\r\n          return;\r\n        }\r\n        this.remoteStreams[remoteStream.id] = remoteStream;\r\n        this.emit(sfuRoom_SFURoom.EVENTS.stream.key, remoteStream);\r\n\r\n        logger.log(\r\n          `Received remote media stream for ${remoteStream.peerId} in ${this.name}`\r\n        );\r\n      } else {\r\n        this._unknownStreams[remoteStream.id] = remoteStream;\r\n      }\r\n    });\r\n\r\n    this._negotiator.on(negotiator.EVENTS.negotiationNeeded.key, () => {\r\n      // Renegotiate by requesting an offer then sending an answer when one is created.\r\n      const offerRequestMessage = {\r\n        roomName: this.name,\r\n      };\r\n      this.emit(sfuRoom_SFURoom.MESSAGE_EVENTS.offerRequest.key, offerRequestMessage);\r\n    });\r\n\r\n    this._negotiator.on(negotiator.EVENTS.answerCreated.key, answer => {\r\n      // If we use unified-plan SDP and send it to our SFU,\r\n      // of course it must be treated as unified-plan SDP too.\r\n      // We need to ensure it for some reason.(see its implementation)\r\n      if (!util.isPlanBSafari()) {\r\n        answer.sdp = sdpUtil.ensureUnifiedPlan(answer.sdp);\r\n      }\r\n\r\n      const answerMessage = {\r\n        roomName: this.name,\r\n        answer: answer,\r\n      };\r\n      this.emit(sfuRoom_SFURoom.MESSAGE_EVENTS.answer.key, answerMessage);\r\n    });\r\n\r\n    this._negotiator.on(negotiator.EVENTS.iceConnectionFailed.key, () => {\r\n      this.close();\r\n    });\r\n\r\n    this._negotiator.on(negotiator.EVENTS.iceCandidate.key, candidate => {\r\n      const candidateMessage = {\r\n        roomName: this.name,\r\n        candidate: candidate,\r\n      };\r\n      this.emit(sfuRoom_SFURoom.MESSAGE_EVENTS.candidate.key, candidateMessage);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles Join message from SFU server.\r\n   * It emits peerJoin event and if the message contains user's peerId, also emits open event.\r\n   * @param {Object} joinMessage - Message object.\r\n   * @param {string} joinMessage.src - The peerId of the peer that joined.\r\n   * @param {string} joinMessage.roomName - The name of the joined room.\r\n   * @param {Array} joinMessage.roomMembers - Array of peerId string.\r\n   */\r\n  handleJoin(joinMessage) {\r\n    const { src, roomMembers } = joinMessage;\r\n\r\n    if (src === this._peerId) {\r\n      this._open = true;\r\n\r\n      // init w/ members already in room(ignore myself)\r\n      this.members = roomMembers.filter(peerId => peerId !== src);\r\n\r\n      this.call(this._localStream);\r\n      this.emit(sfuRoom_SFURoom.EVENTS.open.key);\r\n\r\n      // At this stage the Server has acknowledged us joining a room\r\n      return;\r\n    }\r\n\r\n    this.members.push(src);\r\n    this.emit(sfuRoom_SFURoom.EVENTS.peerJoin.key, src);\r\n  }\r\n\r\n  /**\r\n   * Handles Leave message from SFU server.\r\n   * It emits peerLeave message.\r\n   * @param {Object} leaveMessage - Message from SFU server.\r\n   */\r\n  handleLeave(leaveMessage) {\r\n    if (!this._open) {\r\n      return;\r\n    }\r\n\r\n    const src = leaveMessage.src;\r\n\r\n    const index = this.members.indexOf(src);\r\n    if (index >= 0) {\r\n      this.members.splice(index, 1);\r\n    }\r\n\r\n    // Delete leaving peer's streams\r\n    for (const msid in this.remoteStreams) {\r\n      if (this.remoteStreams[msid].peerId === src) {\r\n        delete this.remoteStreams[msid];\r\n        delete this._msidMap[msid];\r\n        delete this._unknownStreams[msid];\r\n      }\r\n    }\r\n\r\n    this.emit(sfuRoom_SFURoom.EVENTS.peerLeave.key, src);\r\n  }\r\n\r\n  /**\r\n   * Send data to all participants in the room with WebSocket.\r\n   * It emits broadcast event.\r\n   * @param {*} data - The data to send.\r\n   */\r\n  send(data) {\r\n    if (!this._open) {\r\n      return;\r\n    }\r\n    if (!this.validateSendDataSize(data)) {\r\n      return;\r\n    }\r\n    const message = {\r\n      roomName: this.name,\r\n      data: data,\r\n    };\r\n    this._sendData(message, sfuRoom_SFURoom.MESSAGE_EVENTS.broadcast.key);\r\n  }\r\n\r\n  /**\r\n   * Close PeerConnection and emit leave and close event.\r\n   */\r\n  close() {\r\n    if (!this._open) {\r\n      return;\r\n    }\r\n\r\n    if (this._negotiator) {\r\n      this._negotiator.cleanup();\r\n    }\r\n\r\n    this._open = false;\r\n\r\n    const message = {\r\n      roomName: this.name,\r\n    };\r\n    this.emit(sfuRoom_SFURoom.MESSAGE_EVENTS.leave.key, message);\r\n    this.emit(sfuRoom_SFURoom.EVENTS.close.key);\r\n  }\r\n\r\n  /**\r\n   * Replace the stream being sent with a new one.\r\n   * @param {MediaStream} newStream - The stream to replace the old stream with.\r\n   */\r\n  replaceStream(newStream) {\r\n    this._localStream = newStream;\r\n    this._negotiator.replaceStream(newStream);\r\n  }\r\n\r\n  /**\r\n   * Update the entries in the msid to peerId map.\r\n   * @param {Object} msids - Object with msids as the key and peerIds as the values.\r\n   */\r\n  updateMsidMap(msids = {}) {\r\n    this._msidMap = msids;\r\n\r\n    for (const msid of Object.keys(this._unknownStreams)) {\r\n      if (this._msidMap[msid]) {\r\n        const remoteStream = this._unknownStreams[msid];\r\n        remoteStream.peerId = this._msidMap[remoteStream.id];\r\n\r\n        delete this._unknownStreams[msid];\r\n\r\n        if (remoteStream.peerId === this._peerId) {\r\n          return;\r\n        }\r\n\r\n        this.remoteStreams[remoteStream.id] = remoteStream;\r\n        this.emit(sfuRoom_SFURoom.EVENTS.stream.key, remoteStream);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Events the SFURoom class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get EVENTS() {\r\n    return SFUEvents;\r\n  }\r\n\r\n  /**\r\n   * Message events the MeshRoom class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get MESSAGE_EVENTS() {\r\n    return SFUMessageEvents;\r\n  }\r\n\r\n  /**\r\n   * Send offer request to SkyWay server.\r\n   *\r\n   * @event SFURoom#offerRequest\r\n   * @type {object}\r\n   * @property {string} roomName - The Room name.\r\n\r\n   */\r\n\r\n  /**\r\n   * Send data to all peers in the room by WebSocket.\r\n   *\r\n   * @event SFURoom#broadcast\r\n   * @type {object}\r\n   * @property {string} roomName - The Room name.\r\n   * @property {*} data - The data to send.\r\n   */\r\n}\r\n\r\n/* harmony default export */ var peer_sfuRoom = (sfuRoom_SFURoom);\r\n\r\n// CONCATENATED MODULE: ./src/peer/meshRoom.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst meshRoom_MessageEvents = ['broadcastByDC', 'getPeers'];\r\n\r\nconst MeshEvents = new enum_default.a([]);\r\nMeshEvents.extend(peer_room.EVENTS.enums);\r\nconst MeshMessageEvents = new enum_default.a(meshRoom_MessageEvents);\r\nMeshMessageEvents.extend(peer_room.MESSAGE_EVENTS.enums);\r\n\r\n/**\r\n * Class that manages fullmesh type room.\r\n * @extends Room\r\n */\r\nclass meshRoom_MeshRoom extends peer_room {\r\n  /**\r\n   * Create a fullmesh room.\r\n   * @param {string} name - Room name.\r\n   * @param {string} peerId - User's peerId.\r\n   * @param {object} [options] - Optional arguments for the connection.\r\n   * @param {MediaStream} [options.stream] - The MediaStream to send to the remote peer.\r\n   * @param {object} [options.pcConfig] - A RTCConfiguration dictionary for the RTCPeerConnection.\r\n   * @param {number} [options.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [options.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [options.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [options.audioCodec] - A video codec like 'PCMU'\r\n   * @param {boolean} [options.videoReceiveEnabled] - A flag to set video recvonly\r\n   * @param {boolean} [options.audioReceiveEnabled] - A flag to set audio recvonly\r\n   */\r\n  constructor(name, peerId, options) {\r\n    super(name, peerId, options);\r\n\r\n    this.connections = {};\r\n\r\n    // messages(candidates) received before connection is ready\r\n    this._queuedMessages = {};\r\n  }\r\n\r\n  /**\r\n   * Called by client app to create MediaConnections.\r\n   * It emit getPeers event for getting peerIds of all of room participant.\r\n   * After getting peerIds, makeMCs is called.\r\n   * @param {MediaStream} [stream] - The MediaStream to send to the remote peer.\r\n   */\r\n  call(stream) {\r\n    if (stream) {\r\n      this._localStream = stream;\r\n    }\r\n\r\n    const data = {\r\n      roomName: this.name,\r\n      type: 'media',\r\n    };\r\n\r\n    this.emit(meshRoom_MeshRoom.MESSAGE_EVENTS.getPeers.key, data);\r\n  }\r\n\r\n  /**\r\n   * Called by client app to create DataConnections.\r\n   * It emit getPeers event for getting peerIds of all of room participant.\r\n   * After getting peerIds, makeDCs is called.\r\n   */\r\n  connect() {\r\n    const data = {\r\n      roomName: this.name,\r\n      type: 'data',\r\n    };\r\n\r\n    this.emit(meshRoom_MeshRoom.MESSAGE_EVENTS.getPeers.key, data);\r\n  }\r\n\r\n  /**\r\n   * Start video call to all participants in the room.\r\n   * @param {Array} peerIds - Array of peerIds you are calling to.\r\n   */\r\n  makeMediaConnections(peerIds) {\r\n    const options = {\r\n      stream: this._localStream,\r\n      pcConfig: this._pcConfig,\r\n      originator: true,\r\n      videoBandwidth: this._options.videoBandwidth,\r\n      audioBandwidth: this._options.audioBandwidth,\r\n      videoCodec: this._options.videoCodec,\r\n      audioCodec: this._options.audioCodec,\r\n      videoReceiveEnabled: this._options.videoReceiveEnabled,\r\n      audioReceiveEnabled: this._options.audioReceiveEnabled,\r\n    };\r\n\r\n    this._makeConnections(peerIds, 'media', options);\r\n  }\r\n\r\n  /**\r\n   * Start data connection to all participants in the room.\r\n   * @param {Array} peerIds - Array of peerIds you are connecting to.\r\n   */\r\n  makeDataConnections(peerIds) {\r\n    const options = {\r\n      pcConfig: this._pcConfig,\r\n    };\r\n\r\n    this._makeConnections(peerIds, 'data', options);\r\n  }\r\n\r\n  /**\r\n   * Handle join message from new participant in the room.\r\n   * It emits peerJoin event and if the message contains user's peerId, also emits open event.\r\n   * @param {Object} joinMessage - Message object.\r\n   * @param {string} joinMessage.src - The peerId of the peer that joined.\r\n   * @param {string} joinMessage.roomName - The name of the joined room.\r\n   */\r\n  handleJoin(joinMessage) {\r\n    const src = joinMessage.src;\r\n    if (src === this._peerId) {\r\n      this.call(this._localStream);\r\n      this.emit(meshRoom_MeshRoom.EVENTS.open.key);\r\n\r\n      // At this stage the Server has acknowledged us joining a room\r\n      return;\r\n    }\r\n\r\n    this.emit(meshRoom_MeshRoom.EVENTS.peerJoin.key, src);\r\n  }\r\n\r\n  /**\r\n   * Handle leave message from other participant in the room.\r\n   * It deletes connection from room's connections property and emits peerLeave event.\r\n   * @param {Object} leaveMessage - Message object.\r\n   * @param {string} leaveMessage.src - The peerId of the peer that left.\r\n   * @param {string} leaveMessage.roomName - The name of the left room.\r\n   */\r\n  handleLeave(leaveMessage) {\r\n    const src = leaveMessage.src;\r\n    this._deleteConnections(src);\r\n    this.emit(meshRoom_MeshRoom.EVENTS.peerLeave.key, src);\r\n  }\r\n\r\n  /**\r\n   * Handle Offer message from new participant and create a Connection instance.\r\n   * @param {object} offerMessage - Message object containing Offer SDP.\r\n   * @param {object} offerMessage.offer - Object containing Offer SDP text.\r\n   * @param {string} offerMessage.connectionId - An ID to uniquely identify the connection.\r\n   * @param {string} offerMessage.connectionType - One of 'media' or 'data'.\r\n   * @param {string} offerMessage.dst - The peerId of the peer who receiving the Offer.\r\n   * @param {string} offerMessage.roomName - The name of the room user is joining.\r\n   * @param {string} offerMessage.src - The peerId of the peer who sent the Offer.\r\n   */\r\n  handleOffer(offerMessage) {\r\n    const connectionId = offerMessage.connectionId;\r\n    let connection = this._getConnection(offerMessage.src, connectionId);\r\n\r\n    if (connection) {\r\n      connection.updateOffer(offerMessage);\r\n      return;\r\n    }\r\n\r\n    if (offerMessage.connectionType === 'media') {\r\n      if (this._hasConnection(offerMessage.src)) {\r\n        // When two or more users join at the same time, they send each other an offer.\r\n        // In order to prevent two connections between peerA and peerB, only the one with a small ID will be processed.\r\n        if (this._peerId > offerMessage.src) return;\r\n      }\r\n      connection = new mediaConnection(offerMessage.src, {\r\n        connectionId: connectionId,\r\n        payload: offerMessage,\r\n        metadata: offerMessage.metadata,\r\n        queuedMessages: this._queuedMessages[connectionId],\r\n        pcConfig: this._pcConfig,\r\n      });\r\n      connection.startConnection();\r\n\r\n      logger.log('MediaConnection created in OFFER');\r\n      this._addConnection(offerMessage.src, connection);\r\n      this._setupMessageHandlers(connection);\r\n\r\n      connection.answer(this._localStream, {\r\n        videoBandwidth: this._options.videoBandwidth,\r\n        audioBandwidth: this._options.audioBandwidth,\r\n        videoCodec: this._options.videoCodec,\r\n        audioCodec: this._options.audioCodec,\r\n        videoReceiveEnabled: this._options.videoReceiveEnabled,\r\n        audioReceiveEnabled: this._options.audioReceiveEnabled,\r\n      });\r\n    } else {\r\n      logger.warn(\r\n        `Received malformed connection type: ${offerMessage.connectionType}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle Answer message from participant in the room.\r\n   * @param {object} answerMessage - Message object containing Answer SDP.\r\n   * @param {object} answerMessage.answer - Object containing Answer SDP text.\r\n   * @param {string} answerMessage.connectionId - An ID to uniquely identify the connection.\r\n   * @param {string} answerMessage.connectionType - One of 'media' or 'data'.\r\n   * @param {string} answerMessage.dst - The peerId of the peer who receiving the Answer.\r\n   * @param {string} answerMessage.roomName - The name of the room user is joining.\r\n   * @param {string} answerMessage.src - The peerId of the peer who sent the Answer.\r\n   */\r\n  handleAnswer(answerMessage) {\r\n    const connection = this._getConnection(\r\n      answerMessage.src,\r\n      answerMessage.connectionId\r\n    );\r\n\r\n    if (connection) {\r\n      connection.handleAnswer(answerMessage);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles Candidate message from participant in the room.\r\n   * @param {object} candidateMessage - Message object containing Candidate SDP.\r\n   * @param {object} candidateMessage.candidate - Object containing Candidate SDP text.\r\n   * @param {string} candidateMessage.connectionId - An ID to uniquely identify the connection.\r\n   * @param {string} candidateMessage.connectionType - One of 'media' or 'data'.\r\n   * @param {string} candidateMessage.dst - The peerId of the peer who receiving the Candidate.\r\n   * @param {string} candidateMessage.roomName - The name of the room user is joining.\r\n   * @param {string} candidateMessage.src - The peerId of the peer who sent the Candidate.\r\n   */\r\n  handleCandidate(candidateMessage) {\r\n    const connection = this._getConnection(\r\n      candidateMessage.src,\r\n      candidateMessage.connectionId\r\n    );\r\n\r\n    if (connection) {\r\n      connection.handleCandidate(candidateMessage);\r\n    } else {\r\n      // Looks like PeerConnection hasn't completed setRemoteDescription\r\n      if (this._queuedMessages[candidateMessage.connectionId] === undefined) {\r\n        this._queuedMessages[candidateMessage.connectionId] = [];\r\n      }\r\n      this._queuedMessages[candidateMessage.connectionId].push({\r\n        type: config.MESSAGE_TYPES.SERVER.CANDIDATE.key,\r\n        payload: candidateMessage,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data to all participants in the room with WebSocket.\r\n   * It emits broadcast event.\r\n   * @param {*} data - The data to send.\r\n   */\r\n  send(data) {\r\n    if (!this.validateSendDataSize(data)) {\r\n      return;\r\n    }\r\n    const message = {\r\n      roomName: this.name,\r\n      data: data,\r\n    };\r\n    this._sendData(message, meshRoom_MeshRoom.MESSAGE_EVENTS.broadcast.key);\r\n  }\r\n\r\n  /**\r\n   * Close all connections in the room.\r\n   */\r\n  close() {\r\n    for (const peerId in this.connections) {\r\n      if (this.connections.hasOwnProperty(peerId)) {\r\n        this.connections[peerId].forEach(connection => {\r\n          connection.close();\r\n        });\r\n      }\r\n    }\r\n    const message = {\r\n      roomName: this.name,\r\n    };\r\n    this.emit(meshRoom_MeshRoom.MESSAGE_EVENTS.leave.key, message);\r\n    this.emit(meshRoom_MeshRoom.EVENTS.close.key);\r\n  }\r\n\r\n  /**\r\n   * Replace the stream being sent on all MediaConnections   with a new one.\r\n   * @param {MediaStream} newStream - The stream to replace the old stream with.\r\n   */\r\n  replaceStream(newStream) {\r\n    this._localStream = newStream;\r\n    for (const peerId in this.connections) {\r\n      if (this.connections.hasOwnProperty(peerId)) {\r\n        this.connections[peerId].forEach(connection => {\r\n          if (connection.type === 'media') {\r\n            connection.replaceStream(newStream);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append a connection to peer's array of connections, stored in room.connections.\r\n   * @param {string} peerId - User's peerID.\r\n   * @param {MediaConnection|DataConnection} connection - An instance of MediaConnection or DataConnection.\r\n   * @private\r\n   */\r\n  _addConnection(peerId, connection) {\r\n    if (!this.connections[peerId]) {\r\n      this.connections[peerId] = [];\r\n    }\r\n    this.connections[peerId].push(connection);\r\n  }\r\n\r\n  /**\r\n   * Start connections and add handlers.\r\n   * @param {Array} peerIds - Array of peerIds you are creating connections for.\r\n   * @param {string} type - Either 'data' or 'media'.\r\n   * @param {Object} options - Options to pass to the connection constructor.\r\n   * @private\r\n   */\r\n  _makeConnections(peerIds, type, options) {\r\n    peerIds\r\n      .filter(peerId => {\r\n        return peerId !== this._peerId;\r\n      })\r\n      .filter(peerId => {\r\n        return !this._hasConnection(peerId);\r\n      })\r\n      .forEach(peerId => {\r\n        let connection;\r\n\r\n        switch (type) {\r\n          case 'data':\r\n            connection = new dataConnection(peerId, options);\r\n            break;\r\n          case 'media':\r\n            connection = new mediaConnection(peerId, options);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n\r\n        connection.startConnection();\r\n        this._addConnection(peerId, connection);\r\n        this._setupMessageHandlers(connection);\r\n\r\n        logger.log(`${type} connection to ${peerId} created in ${this.name}`);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Delete a connection according to given peerId.\r\n   * @param {string} peerId - The id of the peer that will be deleted.\r\n   * @private\r\n   */\r\n  _deleteConnections(peerId) {\r\n    if (this.connections[peerId]) {\r\n      delete this.connections[peerId];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return a connection according to given peerId and connectionId.\r\n   * @param {string} peerId - User's PeerId.\r\n   * @param {string} connectionId - An ID to uniquely identify the connection.\r\n   * @return {Connection} A connection according to given peerId and connectionId.\r\n   * @private\r\n   */\r\n  _getConnection(peerId, connectionId) {\r\n    if (this.connections && this.connections[peerId]) {\r\n      const conn = this.connections[peerId].filter(connection => {\r\n        return connection.id === connectionId;\r\n      });\r\n      return conn[0];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Return whether peer has already made a connection to 'peerId' or not\r\n   * @param {string} peerId - User's PeerId.\r\n   * @return {boolean} - Whether peer has already made a connection to 'peerId' or not\r\n   * @private\r\n   */\r\n  _hasConnection(peerId) {\r\n    return this.connections[peerId] && this.connections[peerId].length > 0;\r\n  }\r\n\r\n  /**\r\n   * Set up connection event and message handlers.\r\n   * @param {MediaConnection|DataConnection} connection - An instance of MediaConnection or DataConnection.\r\n   * @private\r\n   */\r\n  _setupMessageHandlers(connection) {\r\n    connection.on(peer_connection.EVENTS.offer.key, offerMessage => {\r\n      offerMessage.roomName = this.name;\r\n      this.emit(meshRoom_MeshRoom.MESSAGE_EVENTS.offer.key, offerMessage);\r\n    });\r\n\r\n    connection.on(peer_connection.EVENTS.answer.key, answerMessage => {\r\n      answerMessage.roomName = this.name;\r\n      this.emit(meshRoom_MeshRoom.MESSAGE_EVENTS.answer.key, answerMessage);\r\n    });\r\n\r\n    connection.on(peer_connection.EVENTS.candidate.key, candidateMessage => {\r\n      candidateMessage.roomName = this.name;\r\n      this.emit(meshRoom_MeshRoom.MESSAGE_EVENTS.candidate.key, candidateMessage);\r\n    });\r\n\r\n    if (connection.type === 'media') {\r\n      connection.on(mediaConnection.EVENTS.stream.key, remoteStream => {\r\n        remoteStream.peerId = connection.remoteId;\r\n        this.emit(meshRoom_MeshRoom.EVENTS.stream.key, remoteStream);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Events the MeshRoom class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get EVENTS() {\r\n    return MeshEvents;\r\n  }\r\n\r\n  /**\r\n   * Message events the MeshRoom class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get MESSAGE_EVENTS() {\r\n    return MeshMessageEvents;\r\n  }\r\n\r\n  /**\r\n   * Get all peer's peerId joining in the room.\r\n   * @event MeshRoom#getPeers\r\n   * @type {object}\r\n   * @property {string} roomName - The Room name.\r\n   * @property {string} type - One of 'media' or 'data'.\r\n\r\n   */\r\n\r\n  /**\r\n   * Send data to all peers in the room by WebSocket.\r\n   *\r\n   * @event MeshRoom#broadcastByWS\r\n   * @type {object}\r\n   * @property {string} roomName - The Room name.\r\n   * @property {*} data - The data to send.\r\n   */\r\n\r\n  /**\r\n   * Send data to all peers in the room by DataChannel.\r\n   *\r\n   * @event MeshRoom#broadcastByDC\r\n   * @type {object}\r\n   * @property {string} roomName - The Room name.\r\n   * @property {*} data - The data to send.\r\n   */\r\n}\r\n\r\n/* harmony default export */ var peer_meshRoom = (meshRoom_MeshRoom);\r\n\r\n// CONCATENATED MODULE: ./src/peer.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PeerEvents = new enum_default.a([\r\n  'open',\r\n  'error',\r\n  'call',\r\n  'connection',\r\n  'expiresin',\r\n  'close',\r\n  'disconnected',\r\n]);\r\n\r\n/**\r\n * Class that manages all p2p connections and rooms.\r\n * This class contains socket.io message handlers.\r\n * @extends EventEmitter\r\n */\r\nclass peer_Peer extends events_default.a {\r\n  /**\r\n   * Create new Peer instance. This is called by user application.\r\n   * @param {string} [id] - User's peerId.\r\n   * @param {Object} options - Optional arguments for the connection.\r\n   * @param {string} options.key - SkyWay API key.\r\n   * @param {number} [options.debug=0] - Log level. NONE:0, ERROR:1, WARN:2, FULL:3.\r\n   * @param {string} [options.host] - The host name of signaling server.\r\n   * @param {number} [options.port] - The port number of signaling server.\r\n   * @param {string} [options.dispatcherPort=dispatcher.webrtc.ecl.ntt.com] - The host name of the dispatcher server.\r\n   * @param {number} [options.dispatcherPort=443] - The port number of dispatcher server.\r\n   * @param {boolean} [options.dispatcherSecure=true] - True if the dispatcher server supports https.\r\n   * @param {object} [options.config=config.defaultConfig] - A RTCConfiguration dictionary for the RTCPeerConnection.\r\n   * @param {boolean} [options.turn=true] - Whether using TURN or not.\r\n   * @param {object} [options.credential] - The credential used to authenticate peer.\r\n   + @param {number} [options.credential.timestamp] - Current UNIX timestamp.\r\n   + @param {number} [options.credential.ttl] - Time to live; The credential expires at timestamp + ttl.\r\n   + @param {string} [options.credential.authToken] - Credential token calculated with HMAC.\r\n   */\r\n  constructor(id, options) {\r\n    super();\r\n\r\n    this.connections = {};\r\n    this.rooms = {};\r\n\r\n    // messages received before connection is ready\r\n    this._queuedMessages = {};\r\n\r\n    if (id && id.constructor === Object) {\r\n      options = id;\r\n      id = undefined;\r\n    } else if (id) {\r\n      id = id.toString();\r\n    }\r\n\r\n    const defaultOptions = {\r\n      debug: logger.LOG_LEVELS.NONE,\r\n      secure: true,\r\n      config: config.defaultConfig,\r\n      turn: true,\r\n\r\n      dispatcherSecure: config.DISPATCHER_SECURE,\r\n      dispatcherHost: config.DISPATCHER_HOST,\r\n      dispatcherPort: config.DISPATCHER_PORT,\r\n    };\r\n\r\n    this.options = Object.assign({}, defaultOptions, options);\r\n    // do not override by options\r\n    this.options.token = util.randomToken();\r\n\r\n    logger.setLogLevel(this.options.debug);\r\n\r\n    if (!util.validateId(id)) {\r\n      this._abort('invalid-id', `ID \"${id}\" is invalid`);\r\n      return;\r\n    }\r\n\r\n    if (!util.validateKey(options.key)) {\r\n      this._abort('invalid-key', `API KEY \"${this.options.key}\" is invalid`);\r\n      return;\r\n    }\r\n\r\n    if (this.options.host === '/') {\r\n      this.options.host = window.location.hostname;\r\n    }\r\n    if (options.secure === undefined && this.options.port !== 443) {\r\n      this.options.secure = undefined;\r\n    }\r\n    this._initializeServerConnection(id);\r\n  }\r\n\r\n  /**\r\n   * Creates new MediaConnection.\r\n   * @param {string} peerId - The peerId of the peer you are connecting to.\r\n   * @param {MediaStream} [stream] - The MediaStream to send to the remote peer.\r\n   *                               If not set, the caller creates offer SDP with `sendonly` attribute.\r\n   * @param {object} [options] - Optional arguments for the connection.\r\n   * @param {string} [options.connectionId] - An ID to uniquely identify the connection.\r\n   * @param {string} [options.label] - Label to easily identify the connection on either peer.\r\n   * @param {number} [options.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [options.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [options.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [options.audioCodec] - A video codec like 'PCMU'\r\n   * @param {boolean} [options.videoReceiveEnabled] - A flag to set video recvonly\r\n   * @param {boolean} [options.audioReceiveEnabled] - A flag to set audio recvonly\r\n   * @return {MediaConnection} An instance of MediaConnection.\r\n   */\r\n  call(peerId, stream, options = {}) {\r\n    if (!this._checkOpenStatus()) {\r\n      return;\r\n    }\r\n\r\n    options.originator = true;\r\n    options.stream = stream;\r\n    options.pcConfig = this._pcConfig;\r\n    const mc = new mediaConnection(peerId, options);\r\n    mc.startConnection();\r\n    logger.log('MediaConnection created in call method');\r\n    this._addConnection(peerId, mc);\r\n    return mc;\r\n  }\r\n\r\n  /**\r\n   * Creates new DataConnection.\r\n   * @param {string} peerId - User's peerId.\r\n   * @param {Object} [options] - Optional arguments for DataConnection.\r\n   * @param {string} [options.connectionId] - An ID to uniquely identify the connection.\r\n   * @param {string} [options.label] - Label to easily identify the connection on either peer.\r\n   * @param {Object} [options.dcInit] - Options passed to createDataChannel() as a RTCDataChannelInit.\r\n   *                  See https://www.w3.org/TR/webrtc/#dom-rtcdatachannelinit\r\n   * @param {string} [options.serialization] - How to serialize data when sending.\r\n   *                  One of 'binary', 'json' or 'none'.\r\n   * @return {DataConnection} An instance of DataConnection.\r\n   */\r\n  connect(peerId, options = {}) {\r\n    if (!this._checkOpenStatus()) {\r\n      return;\r\n    }\r\n\r\n    options.pcConfig = this._pcConfig;\r\n    const connection = new dataConnection(peerId, options);\r\n    connection.startConnection();\r\n    logger.log('DataConnection created in connect method');\r\n    this._addConnection(peerId, connection);\r\n    return connection;\r\n  }\r\n\r\n  /**\r\n   * Join fullmesh type or SFU type room that two or more users can join.\r\n   * @param {string} roomName - The name of the room user is joining to.\r\n   * @param {object} [roomOptions]- Optional arguments for the RTCPeerConnection.\r\n   * @param {string} [roomOptions.mode='mesh'] - One of 'sfu' or 'mesh'.\r\n   * @param {MediaStream} [roomOptions.stream] - Media stream user wants to emit.\r\n   * @param {number} [roomOptions.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [roomOptions.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [roomOptions.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [roomOptions.audioCodec] - A video codec like 'PCMU'\r\n   * @param {boolean} [options.videoReceiveEnabled] - A flag to set video recvonly\r\n   * @param {boolean} [options.audioReceiveEnabled] - A flag to set audio recvonly\r\n   * @return {SFURoom|MeshRoom} - An instance of SFURoom or MeshRoom.\r\n   */\r\n  joinRoom(roomName, roomOptions = {}) {\r\n    if (!this._checkOpenStatus()) {\r\n      return;\r\n    }\r\n\r\n    if (!roomName) {\r\n      const err = new Error('Room name must be defined.');\r\n      err.type = 'room-error';\r\n      logger.error(err);\r\n      this.emit(peer_Peer.EVENTS.error.key, err);\r\n      return null;\r\n    }\r\n\r\n    roomOptions.pcConfig = this._pcConfig;\r\n    roomOptions.peerId = this.id;\r\n\r\n    if (roomOptions.mode === 'sfu') {\r\n      return this._initializeSfuRoom(roomName, roomOptions);\r\n    }\r\n\r\n    // mode is blank or 'mesh'\r\n    return this._initializeFullMeshRoom(roomName, roomOptions);\r\n  }\r\n\r\n  /**\r\n   * Returns a connection according to given peerId and connectionId.\r\n   * @param {string} peerId - The peerId of the connection to be searched.\r\n   * @param {Object} connectionId - An ID to uniquely identify the connection.\r\n   * @return {MediaConnection|DataConnection} Search result.\r\n   */\r\n  getConnection(peerId, connectionId) {\r\n    if (!this._checkOpenStatus()) {\r\n      return;\r\n    }\r\n\r\n    if (this.connections[peerId]) {\r\n      for (const connection of this.connections[peerId]) {\r\n        if (connection.id === connectionId) {\r\n          return connection;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Whether the socket is connecting to the signalling server or not.\r\n   * @type {boolean} The open status.\r\n   */\r\n  get open() {\r\n    return this.socket && this.socket.isOpen;\r\n  }\r\n\r\n  /**\r\n   * Close all connections and disconnect socket.\r\n   */\r\n  destroy() {\r\n    this._cleanup();\r\n    this.disconnect();\r\n  }\r\n\r\n  /**\r\n   * Close socket and clean up some properties, then emit disconnect event.\r\n   */\r\n  disconnect() {\r\n    if (this.open) {\r\n      this.socket.close();\r\n      this.emit(peer_Peer.EVENTS.disconnected.key, this.id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reconnect to SkyWay server. Does not work after a peer.destroy().\r\n   */\r\n  reconnect() {\r\n    if (!this.open) {\r\n      this.socket.reconnect();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update server-side credential by sending a request in order to extend TTL.\r\n   * @param {object} newCredential - The new credential generated by user.\r\n   * @param {number} [newCredential.timestamp] - Current UNIX timestamp.\r\n   + @param {number} [newCredential.ttl] - Time to live; The credential expires at timestamp + ttl.\r\n   + @param {string} [newCredential.authToken] - Credential token calculated with HMAC.\r\n   */\r\n  updateCredential(newCredential) {\r\n    this.socket.updateCredential(newCredential);\r\n  }\r\n\r\n  /**\r\n   * Call Rest API and get the list of peerIds assciated with API key.\r\n   * @param {function} cb - The callback function that is called after XHR.\r\n   */\r\n  listAllPeers(cb) {\r\n    if (!this._checkOpenStatus()) {\r\n      return;\r\n    }\r\n\r\n    cb = cb || function() {};\r\n    const self = this;\r\n    const http = new XMLHttpRequest();\r\n\r\n    const url = `${this.socket.signalingServerUrl}/api/apikeys/${this.options.key}/clients/`;\r\n\r\n    // If there's no ID we need to wait for one before trying to init socket.\r\n    http.open('get', url, true);\r\n\r\n    /* istanbul ignore next */\r\n    http.onerror = function() {\r\n      self._abort('server-error', 'Could not get peers from the server.');\r\n      cb([]);\r\n    };\r\n    http.onreadystatechange = function() {\r\n      if (http.readyState !== 4) {\r\n        return;\r\n      }\r\n      if (http.status === 401) {\r\n        cb([]);\r\n        const err = new Error(\r\n          \"It doesn't look like you have permission to list peers IDs. \" +\r\n            'Please enable the SkyWay REST API on dashboard'\r\n        );\r\n        err.type = 'list-error';\r\n        logger.error(err);\r\n        self.emit(peer_Peer.EVENTS.error.key, err);\r\n      } else if (http.status === 200) {\r\n        cb(JSON.parse(http.responseText));\r\n      } else {\r\n        cb([]);\r\n      }\r\n    };\r\n    http.send(null);\r\n  }\r\n\r\n  /**\r\n   * Return socket open status and emit error when it's not open.\r\n   * @return {boolean} - The socket status.\r\n   */\r\n  _checkOpenStatus() {\r\n    if (!this.open) {\r\n      this._emitNotConnectedError();\r\n    }\r\n    return this.open;\r\n  }\r\n\r\n  /**\r\n   * Emit not connected error.\r\n   */\r\n  _emitNotConnectedError() {\r\n    logger.warn(\r\n      'You cannot connect to a new Peer because you are not connecting to SkyWay server now.' +\r\n        'You can create a new Peer to reconnect, or call reconnect() ' +\r\n        'on this peer if you believe its ID to still be available.'\r\n    );\r\n\r\n    const err = new Error(\r\n      'Cannot connect to new Peer before connecting to SkyWay server or after disconnecting from the server.'\r\n    );\r\n    err.type = 'disconnected';\r\n    logger.error(err);\r\n    this.emit(peer_Peer.EVENTS.error.key, err);\r\n  }\r\n\r\n  /**\r\n   * Creates new Socket and initalize its message handlers.\r\n   * @param {string} id - User's peerId.\r\n   * @private\r\n   */\r\n  _initializeServerConnection(id) {\r\n    this.socket = new socket(this.options.key, {\r\n      secure: this.options.secure,\r\n      host: this.options.host,\r\n      port: this.options.port,\r\n\r\n      dispatcherSecure: this.options.dispatcherSecure,\r\n      dispatcherHost: this.options.dispatcherHost,\r\n      dispatcherPort: this.options.dispatcherPort,\r\n    });\r\n\r\n    this._setupMessageHandlers();\r\n\r\n    this.socket.on('error', error => {\r\n      this._abort('socket-error', error);\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      // If we haven't explicitly disconnected, emit error and disconnect.\r\n      this.disconnect();\r\n\r\n      const err = new Error('Lost connection to server.');\r\n      err.type = 'socket-error';\r\n      logger.error(err);\r\n      this.emit(peer_Peer.EVENTS.error.key, err);\r\n    });\r\n\r\n    this.socket.start(id, this.options.token, this.options.credential);\r\n  }\r\n\r\n  /**\r\n   * Create and setup a SFURoom instance and emit SFU_JOIN message to SkyWay server.\r\n   * @param {string} roomName - The name of the room user is joining to.\r\n   * @param {object} [roomOptions] - Optional arguments for the RTCPeerConnection.\r\n   * @param {object} [roomOptions.pcConfig] -  A RTCConfiguration dictionary for the RTCPeerConnection.\r\n   * @param {string} [roomOptions.peerId] - User's peerId.\r\n   * @param {string} [roomOptions.mode='mesh'] - One of 'sfu' or 'mesh'.\r\n   * @param {MediaStream} [roomOptions.stream] - Media stream user wants to emit.\r\n   * @param {number} [roomOptions.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [roomOptions.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [roomOptions.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [roomOptions.audioCodec] - A video codec like 'PCMU'\r\n   * @param {boolean} [roomOptions.videoReceiveEnabled] - A flag to set video recvonly\r\n   * @param {boolean} [roomOptions.audioReceiveEnabled] - A flag to set audio recvonly\r\n   * @return {SFURoom} - An instance of SFURoom.\r\n   */\r\n  _initializeSfuRoom(roomName, roomOptions = {}) {\r\n    if (this.rooms[roomName]) {\r\n      return this.rooms[roomName];\r\n    }\r\n    const sfuRoom = new peer_sfuRoom(roomName, this.id, roomOptions);\r\n    this.rooms[roomName] = sfuRoom;\r\n    this._setupSFURoomMessageHandlers(sfuRoom);\r\n\r\n    const data = {\r\n      roomName: roomName,\r\n      roomType: 'sfu',\r\n    };\r\n\r\n    this.socket.send(config.MESSAGE_TYPES.CLIENT.ROOM_JOIN.key, data);\r\n\r\n    return sfuRoom;\r\n  }\r\n\r\n  /**\r\n   * Create and setup a MeshRoom instance and emit MESH_JOIN message to SkyWay server.\r\n   * @param {string} roomName - The name of the room user is joining to.\r\n   * @param {object} roomOptions - Optional arguments for the RTCPeerConnection.\r\n   * @param {string} roomOptions.pcConfig -  A RTCConfiguration dictionary for the RTCPeerConnection.\r\n   * @param {string} roomOptions.peerId - User's peerId.\r\n   * @param {string} [roomOptions.mode='mesh'] - One of 'sfu' or 'mesh'.\r\n   * @param {MediaStream} [roomOptions.stream] - Media stream user wants to emit.\r\n   * @param {number} [roomOptions.videoBandwidth] - A max video bandwidth(kbps)\r\n   * @param {number} [roomOptions.audioBandwidth] - A max audio bandwidth(kbps)\r\n   * @param {string} [roomOptions.videoCodec] - A video codec like 'H264'\r\n   * @param {string} [roomOptions.audioCodec] - A video codec like 'PCMU'\r\n   * @param {boolean} [roomOptions.videoReceiveEnabled] - A flag to set video recvonly\r\n   * @param {boolean} [roomOptions.audioReceiveEnabled] - A flag to set audio recvonly\r\n   * @return {SFURoom} - An instance of MeshRoom.\r\n   */\r\n  _initializeFullMeshRoom(roomName, roomOptions = {}) {\r\n    if (this.rooms[roomName]) {\r\n      return this.rooms[roomName];\r\n    }\r\n    const meshRoom = new peer_meshRoom(roomName, this.id, roomOptions);\r\n    this.rooms[roomName] = meshRoom;\r\n    this._setupMeshRoomMessageHandlers(meshRoom);\r\n\r\n    const data = {\r\n      roomName: roomName,\r\n      roomType: 'mesh',\r\n    };\r\n\r\n    this.socket.send(config.MESSAGE_TYPES.CLIENT.ROOM_JOIN.key, data);\r\n\r\n    return meshRoom;\r\n  }\r\n\r\n  /**\r\n   * Set up socket's message handlers.\r\n   * @private\r\n   */\r\n  _setupMessageHandlers() {\r\n    this.socket.on(config.MESSAGE_TYPES.SERVER.OPEN.key, openMessage => {\r\n      this.id = openMessage.peerId;\r\n      this._pcConfig = Object.assign({}, this.options.config);\r\n\r\n      // make a copy of iceServers as Object.assign still retains the reference\r\n      const iceServers = this._pcConfig.iceServers;\r\n      this._pcConfig.iceServers = iceServers ? iceServers.slice() : [];\r\n\r\n      // Set up turn credentials\r\n      const turnCredential = openMessage.turnCredential;\r\n      let turnUserName;\r\n      let turnPassword;\r\n      if (typeof turnCredential === 'object') {\r\n        turnUserName = turnCredential.username;\r\n        turnPassword = turnCredential.credential;\r\n      } else if (typeof turnCredential === 'string') {\r\n        // Handle older server versions that don't send the username\r\n        turnUserName = `${this.options.key}$${this.id}`;\r\n        turnPassword = turnCredential;\r\n      }\r\n      if (this.options.turn === true && turnUserName && turnPassword) {\r\n        // possible turn types are turn-tcp, turns-tcp, turn-udp\r\n        const turnCombinations = [\r\n          { protocol: 'turn', transport: 'tcp' },\r\n          { protocol: 'turn', transport: 'udp' },\r\n        ];\r\n\r\n        // Edge can not handle turns-tcp\r\n        const browser = util.detectBrowser();\r\n        if (browser.name !== 'edge') {\r\n          turnCombinations.push({ protocol: 'turns', transport: 'tcp' });\r\n        }\r\n\r\n        for (const turnType of turnCombinations) {\r\n          const protocol = turnType.protocol;\r\n          const transport = turnType.transport;\r\n\r\n          const iceServer = {\r\n            urls: `${protocol}:${config.TURN_HOST}:${config.TURN_PORT}?transport=${transport}`,\r\n            url: `${protocol}:${config.TURN_HOST}:${config.TURN_PORT}?transport=${transport}`,\r\n\r\n            username: turnUserName,\r\n            credential: turnPassword,\r\n          };\r\n\r\n          this._pcConfig.iceServers.push(iceServer);\r\n        }\r\n\r\n        logger.log('SkyWay TURN Server is available');\r\n      } else {\r\n        logger.log('SkyWay TURN Server is unavailable');\r\n      }\r\n\r\n      this.emit(peer_Peer.EVENTS.open.key, this.id);\r\n    });\r\n\r\n    this.socket.on(config.MESSAGE_TYPES.SERVER.ERROR.key, error => {\r\n      const err = new Error(error.message);\r\n      err.type = error.type;\r\n      logger.error(err);\r\n      this.emit(peer_Peer.EVENTS.error.key, err);\r\n    });\r\n\r\n    this.socket.on(config.MESSAGE_TYPES.SERVER.LEAVE.key, peerId => {\r\n      logger.log(`Received leave message from ${peerId}`);\r\n      this._cleanupPeer(peerId);\r\n    });\r\n\r\n    this.socket.on(\r\n      config.MESSAGE_TYPES.SERVER.FORCE_CLOSE.key,\r\n      ({ src: remoteId, connectionId }) => {\r\n        // select a force closing connection and Close it.\r\n        const connection = this.getConnection(remoteId, connectionId);\r\n        if (connection) {\r\n          // close the connection without sending FORCE_CLOSE\r\n          connection.close(false);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.socket.on(\r\n      config.MESSAGE_TYPES.SERVER.AUTH_EXPIRES_IN.key,\r\n      remainingSec => {\r\n        logger.log(`Credential expires in ${remainingSec}`);\r\n        this.emit(peer_Peer.EVENTS.expiresin.key, remainingSec);\r\n      }\r\n    );\r\n\r\n    this.socket.on(config.MESSAGE_TYPES.SERVER.OFFER.key, offerMessage => {\r\n      // handle mesh room offers\r\n      const roomName = offerMessage.roomName;\r\n      if (roomName) {\r\n        const room = this.rooms[roomName];\r\n\r\n        if (room) {\r\n          room.handleOffer(offerMessage);\r\n        }\r\n        return;\r\n      }\r\n\r\n      // handle p2p offers\r\n      const connectionId = offerMessage.connectionId;\r\n      let connection = this.getConnection(offerMessage.src, connectionId);\r\n\r\n      if (connection) {\r\n        connection.updateOffer(offerMessage);\r\n        return;\r\n      }\r\n\r\n      if (offerMessage.connectionType === 'media') {\r\n        connection = new mediaConnection(offerMessage.src, {\r\n          connectionId: connectionId,\r\n          payload: offerMessage,\r\n          metadata: offerMessage.metadata,\r\n          originator: false,\r\n          queuedMessages: this._queuedMessages[connectionId],\r\n          pcConfig: this._pcConfig,\r\n        });\r\n        connection.startConnection();\r\n\r\n        logger.log('MediaConnection created in OFFER');\r\n\r\n        this._addConnection(offerMessage.src, connection);\r\n        this.emit(peer_Peer.EVENTS.call.key, connection);\r\n      } else if (offerMessage.connectionType === 'data') {\r\n        connection = new dataConnection(offerMessage.src, {\r\n          connectionId: connectionId,\r\n          payload: offerMessage,\r\n          metadata: offerMessage.metadata,\r\n          label: offerMessage.label,\r\n          dcInit: offerMessage.dcInit,\r\n          serialization: offerMessage.serialization,\r\n          queuedMessages: this._queuedMessages[connectionId],\r\n          pcConfig: this._pcConfig,\r\n        });\r\n        connection.startConnection();\r\n\r\n        logger.log('DataConnection created in OFFER');\r\n\r\n        this._addConnection(offerMessage.src, connection);\r\n        this.emit(peer_Peer.EVENTS.connection.key, connection);\r\n      } else {\r\n        logger.warn(\r\n          'Received malformed connection type: ',\r\n          offerMessage.connectionType\r\n        );\r\n      }\r\n\r\n      delete this._queuedMessages[connectionId];\r\n    });\r\n\r\n    this.socket.on(config.MESSAGE_TYPES.SERVER.ANSWER.key, answerMessage => {\r\n      // handle mesh room answers\r\n      const roomName = answerMessage.roomName;\r\n      if (roomName) {\r\n        const room = this.rooms[roomName];\r\n\r\n        if (room) {\r\n          room.handleAnswer(answerMessage);\r\n        }\r\n        return;\r\n      }\r\n\r\n      // handle p2p answers\r\n      const connection = this.getConnection(\r\n        answerMessage.src,\r\n        answerMessage.connectionId\r\n      );\r\n\r\n      if (connection) {\r\n        connection.handleAnswer(answerMessage);\r\n      } else {\r\n        // Should we remove this storing\r\n        // because answer should be handled immediately after its arrival?\r\n        this._storeMessage(\r\n          config.MESSAGE_TYPES.SERVER.ANSWER.key,\r\n          answerMessage\r\n        );\r\n      }\r\n    });\r\n\r\n    this.socket.on(\r\n      config.MESSAGE_TYPES.SERVER.CANDIDATE.key,\r\n      candidateMessage => {\r\n        // handle mesh room candidates\r\n        const roomName = candidateMessage.roomName;\r\n        if (roomName) {\r\n          const room = this.rooms[roomName];\r\n\r\n          if (room) {\r\n            room.handleCandidate(candidateMessage);\r\n          }\r\n          return;\r\n        }\r\n\r\n        // handle p2p candidates\r\n        const connection = this.getConnection(\r\n          candidateMessage.src,\r\n          candidateMessage.connectionId\r\n        );\r\n\r\n        if (connection) {\r\n          connection.handleCandidate(candidateMessage);\r\n        } else {\r\n          // Store candidate in the queue so that the candidate can be added\r\n          // after setRemoteDescription completed.\r\n          this._storeMessage(\r\n            config.MESSAGE_TYPES.SERVER.CANDIDATE.key,\r\n            candidateMessage\r\n          );\r\n        }\r\n      }\r\n    );\r\n\r\n    this.socket.on(\r\n      config.MESSAGE_TYPES.SERVER.ROOM_USER_JOIN.key,\r\n      roomUserJoinMessage => {\r\n        const room = this.rooms[roomUserJoinMessage.roomName];\r\n        if (room) {\r\n          room.handleJoin(roomUserJoinMessage);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.socket.on(\r\n      config.MESSAGE_TYPES.SERVER.ROOM_USER_LEAVE.key,\r\n      roomUserLeaveMessage => {\r\n        const room = this.rooms[roomUserLeaveMessage.roomName];\r\n        if (room) {\r\n          room.handleLeave(roomUserLeaveMessage);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.socket.on(\r\n      config.MESSAGE_TYPES.SERVER.ROOM_DATA.key,\r\n      roomDataMessage => {\r\n        const room = this.rooms[roomDataMessage.roomName];\r\n        if (room) {\r\n          room.handleData(roomDataMessage);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.socket.on(\r\n      config.MESSAGE_TYPES.SERVER.ROOM_LOGS.key,\r\n      roomLogMessage => {\r\n        const room = this.rooms[roomLogMessage.roomName];\r\n        if (room) {\r\n          room.handleLog(roomLogMessage.log);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.socket.on(\r\n      config.MESSAGE_TYPES.SERVER.ROOM_USERS.key,\r\n      roomUserListMessage => {\r\n        const room = this.rooms[roomUserListMessage.roomName];\r\n        if (room) {\r\n          if (roomUserListMessage.type === 'media') {\r\n            room.makeMediaConnections(roomUserListMessage.userList);\r\n          } else {\r\n            room.makeDataConnections(roomUserListMessage.userList);\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    this.socket.on(config.MESSAGE_TYPES.SERVER.SFU_OFFER.key, offerMessage => {\r\n      const room = this.rooms[offerMessage.roomName];\r\n      if (room) {\r\n        room.updateMsidMap(offerMessage.msids);\r\n        room.handleOffer(offerMessage);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set up connection's event handlers.\r\n   * @param {MediaConnection|DataConnection} connection - The connection to be set up.\r\n   * @private\r\n   */\r\n  _setupConnectionMessageHandlers(connection) {\r\n    connection.on(peer_connection.EVENTS.candidate.key, candidateMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SEND_CANDIDATE.key,\r\n        candidateMessage\r\n      );\r\n    });\r\n    connection.on(peer_connection.EVENTS.answer.key, answerMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SEND_ANSWER.key,\r\n        answerMessage\r\n      );\r\n    });\r\n    connection.on(peer_connection.EVENTS.offer.key, offerMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SEND_OFFER.key,\r\n        offerMessage\r\n      );\r\n    });\r\n    connection.on(peer_connection.EVENTS.forceClose.key, () => {\r\n      const forceCloseMessage = {\r\n        dst: connection.remoteId,\r\n        connectionId: connection.id,\r\n      };\r\n\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SEND_FORCE_CLOSE.key,\r\n        forceCloseMessage\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set up the message event handlers for a Room\r\n   * @param {Room} room - The room to be set up.\r\n   * @private\r\n   */\r\n  _setupRoomMessageHandlers(room) {\r\n    room.on(peer_sfuRoom.MESSAGE_EVENTS.broadcast.key, sendMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.ROOM_SEND_DATA.key,\r\n        sendMessage\r\n      );\r\n    });\r\n    room.on(peer_sfuRoom.MESSAGE_EVENTS.getLog.key, getLogMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.ROOM_GET_LOGS.key,\r\n        getLogMessage\r\n      );\r\n    });\r\n    room.on(peer_sfuRoom.MESSAGE_EVENTS.leave.key, leaveMessage => {\r\n      delete this.rooms[room.name];\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.ROOM_LEAVE.key,\r\n        leaveMessage\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set up the message event handlers for an SFURoom\r\n   * @param {SFURoom} room - The room to be set up.\r\n   * @private\r\n   */\r\n  _setupSFURoomMessageHandlers(room) {\r\n    this._setupRoomMessageHandlers(room);\r\n\r\n    room.on(peer_sfuRoom.MESSAGE_EVENTS.offerRequest.key, sendMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SFU_GET_OFFER.key,\r\n        sendMessage\r\n      );\r\n    });\r\n    room.on(peer_sfuRoom.MESSAGE_EVENTS.answer.key, answerMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SFU_ANSWER.key,\r\n        answerMessage\r\n      );\r\n    });\r\n    room.on(peer_sfuRoom.MESSAGE_EVENTS.candidate.key, candidateMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SFU_CANDIDATE.key,\r\n        candidateMessage\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set up the message event handlers for a MeshRoom\r\n   * @param {MeshRoom} room - The room to be set up.\r\n   * @private\r\n   */\r\n  _setupMeshRoomMessageHandlers(room) {\r\n    this._setupRoomMessageHandlers(room);\r\n\r\n    room.on(peer_meshRoom.MESSAGE_EVENTS.offer.key, offerMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SEND_OFFER.key,\r\n        offerMessage\r\n      );\r\n    });\r\n    room.on(peer_meshRoom.MESSAGE_EVENTS.answer.key, answerMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SEND_ANSWER.key,\r\n        answerMessage\r\n      );\r\n    });\r\n    room.on(peer_meshRoom.MESSAGE_EVENTS.candidate.key, candidateMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.SEND_CANDIDATE.key,\r\n        candidateMessage\r\n      );\r\n    });\r\n    room.on(peer_meshRoom.MESSAGE_EVENTS.getPeers.key, requestMessage => {\r\n      this.socket.send(\r\n        config.MESSAGE_TYPES.CLIENT.ROOM_GET_USERS.key,\r\n        requestMessage\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Disconnect the socket and emit error.\r\n   * @param {string} type - The type of error.\r\n   * @param {string} message - Error description.\r\n   * @private\r\n   */\r\n  _abort(type, message) {\r\n    logger.error('Aborting!');\r\n    this.disconnect();\r\n\r\n    const err = new Error(message);\r\n    err.type = type;\r\n    logger.error(err);\r\n    this.emit(peer_Peer.EVENTS.error.key, err);\r\n  }\r\n\r\n  /**\r\n   * Add connection to connections property and set up message handlers.\r\n   * @param {string} peerId - User's peerId.\r\n   * @param {MediaConnection|DataConnection} connection - The connection to be added.\r\n   * @private\r\n   */\r\n  _addConnection(peerId, connection) {\r\n    if (!this.connections[peerId]) {\r\n      this.connections[peerId] = [];\r\n    }\r\n    this.connections[peerId].push(connection);\r\n\r\n    this._setupConnectionMessageHandlers(connection);\r\n  }\r\n\r\n  /**\r\n   * Store a message until the connection is ready.\r\n   * @param {string} type - The type of message. One of 'ANSWER' or 'CANDIDATE'.\r\n   * @param {object} message - The object containing the message from remote peer.\r\n   * @private\r\n   */\r\n  _storeMessage(type, message) {\r\n    if (!this._queuedMessages[message.connectionId]) {\r\n      this._queuedMessages[message.connectionId] = [];\r\n    }\r\n    this._queuedMessages[message.connectionId].push({\r\n      type: type,\r\n      payload: message,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Close all connections and emit close event.\r\n   * @private\r\n   */\r\n  _cleanup() {\r\n    if (this.connections) {\r\n      for (const peer of Object.keys(this.connections)) {\r\n        this._cleanupPeer(peer);\r\n      }\r\n    }\r\n    this.emit(peer_Peer.EVENTS.close.key);\r\n  }\r\n\r\n  /**\r\n   * Close the connection.\r\n   * @param {string} peer - The peerId of the peer to be closed.\r\n   * @private\r\n   */\r\n  _cleanupPeer(peer) {\r\n    if (this.connections[peer]) {\r\n      for (const connection of this.connections[peer]) {\r\n        connection.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Events the Peer class can emit.\r\n   * @type {Enum}\r\n   */\r\n  static get EVENTS() {\r\n    return PeerEvents;\r\n  }\r\n\r\n  /**\r\n   * Successfully connected to signaling server.\r\n   *\r\n   * @event Peer#open\r\n   * @type {string}\r\n   */\r\n\r\n  /**\r\n   * Error occurred.\r\n   *\r\n   * @event Peer#error\r\n   * @type {MediaStream}\r\n   */\r\n\r\n  /**\r\n   * Received a call from peer.\r\n   *\r\n   * @event Peer#call\r\n   * @type {MediaConnection}\r\n   */\r\n\r\n  /**\r\n   * Received a connection from peer.\r\n   *\r\n   * @event Peer#connection\r\n   * @type {DataConnection}\r\n   */\r\n\r\n  /**\r\n   * Finished closing all connections to peers.\r\n   *\r\n   * @event Peer#close\r\n   */\r\n\r\n  /**\r\n   * Disconnected from the signalling server.\r\n   *\r\n   * @event Peer#disconnected\r\n   * @type {string}\r\n   */\r\n}\r\n\r\n/* harmony default export */ var peer = __webpack_exports__[\"default\"] = (peer_Peer);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ 0:\r\n/*!********************!*\\\r\n  !*** ws (ignored) ***!\r\n  \\********************/\r\n/*! no static exports found */\r\n/*! ModuleConcatenation bailout: Module is not an ECMAScript module */\r\n/***/ (function(module, exports) {\r\n\r\n/* (ignored) */\r\n\r\n/***/ })\r\n\r\n/******/ })[\"default\"];\r\n});\n\n//# sourceURL=webpack:///./node_modules/skyway-js/dist/skyway.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/socket.io-client/lib/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar url = __webpack_require__(/*! ./url */ \"./node_modules/socket.io-client/lib/url.js\");\r\nvar parser = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/index.js\");\r\nvar Manager = __webpack_require__(/*! ./manager */ \"./node_modules/socket.io-client/lib/manager.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = lookup;\r\n\r\n/**\r\n * Managers cache.\r\n */\r\n\r\nvar cache = exports.managers = {};\r\n\r\n/**\r\n * Looks up an existing `Manager` for multiplexing.\r\n * If the user summons:\r\n *\r\n *   `io('http://localhost/a');`\r\n *   `io('http://localhost/b');`\r\n *\r\n * We reuse the existing instance based on same scheme/port/host,\r\n * and we initialize sockets for each namespace.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction lookup (uri, opts) {\r\n  if (typeof uri === 'object') {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n\r\n  opts = opts || {};\r\n\r\n  var parsed = url(uri);\r\n  var source = parsed.source;\r\n  var id = parsed.id;\r\n  var path = parsed.path;\r\n  var sameNamespace = cache[id] && path in cache[id].nsps;\r\n  var newConnection = opts.forceNew || opts['force new connection'] ||\r\n                      false === opts.multiplex || sameNamespace;\r\n\r\n  var io;\r\n\r\n  if (newConnection) {\r\n    debug('ignoring socket cache for %s', source);\r\n    io = Manager(source, opts);\r\n  } else {\r\n    if (!cache[id]) {\r\n      debug('new io instance for %s', source);\r\n      cache[id] = Manager(source, opts);\r\n    }\r\n    io = cache[id];\r\n  }\r\n  if (parsed.query && !opts.query) {\r\n    opts.query = parsed.query;\r\n  }\r\n  return io.socket(parsed.path, opts);\r\n}\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.protocol = parser.protocol;\r\n\r\n/**\r\n * `connect`.\r\n *\r\n * @param {String} uri\r\n * @api public\r\n */\r\n\r\nexports.connect = lookup;\r\n\r\n/**\r\n * Expose constructors for standalone build.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.Manager = __webpack_require__(/*! ./manager */ \"./node_modules/socket.io-client/lib/manager.js\");\r\nexports.Socket = __webpack_require__(/*! ./socket */ \"./node_modules/socket.io-client/lib/socket.js\");\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/manager.js":
/*!******************************************************!*\
  !*** ./node_modules/socket.io-client/lib/manager.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar eio = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/lib/index.js\");\r\nvar Socket = __webpack_require__(/*! ./socket */ \"./node_modules/socket.io-client/lib/socket.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/socket.io-client/node_modules/component-emitter/index.js\");\r\nvar parser = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/index.js\");\r\nvar on = __webpack_require__(/*! ./on */ \"./node_modules/socket.io-client/lib/on.js\");\r\nvar bind = __webpack_require__(/*! component-bind */ \"./node_modules/component-bind/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client:manager');\r\nvar indexOf = __webpack_require__(/*! indexof */ \"./node_modules/indexof/index.js\");\r\nvar Backoff = __webpack_require__(/*! backo2 */ \"./node_modules/backo2/index.js\");\r\n\r\n/**\r\n * IE6+ hasOwnProperty\r\n */\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Module exports\r\n */\r\n\r\nmodule.exports = Manager;\r\n\r\n/**\r\n * `Manager` constructor.\r\n *\r\n * @param {String} engine instance or engine uri/opts\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Manager (uri, opts) {\r\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\r\n  if (uri && ('object' === typeof uri)) {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n  opts = opts || {};\r\n\r\n  opts.path = opts.path || '/socket.io';\r\n  this.nsps = {};\r\n  this.subs = [];\r\n  this.opts = opts;\r\n  this.reconnection(opts.reconnection !== false);\r\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\r\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\r\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\r\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\r\n  this.backoff = new Backoff({\r\n    min: this.reconnectionDelay(),\r\n    max: this.reconnectionDelayMax(),\r\n    jitter: this.randomizationFactor()\r\n  });\r\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\r\n  this.readyState = 'closed';\r\n  this.uri = uri;\r\n  this.connecting = [];\r\n  this.lastPing = null;\r\n  this.encoding = false;\r\n  this.packetBuffer = [];\r\n  var _parser = opts.parser || parser;\r\n  this.encoder = new _parser.Encoder();\r\n  this.decoder = new _parser.Decoder();\r\n  this.autoConnect = opts.autoConnect !== false;\r\n  if (this.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Propagate given event to sockets and emit on `this`\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.emitAll = function () {\r\n  this.emit.apply(this, arguments);\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Update `socket.id` of all sockets\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.updateSocketIds = function () {\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].id = this.generateId(nsp);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * generate `socket.id` for the given `nsp`\r\n *\r\n * @param {String} nsp\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nManager.prototype.generateId = function (nsp) {\r\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\r\n};\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Manager.prototype);\r\n\r\n/**\r\n * Sets the `reconnection` config.\r\n *\r\n * @param {Boolean} true/false if it should automatically reconnect\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnection = function (v) {\r\n  if (!arguments.length) return this._reconnection;\r\n  this._reconnection = !!v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the reconnection attempts config.\r\n *\r\n * @param {Number} max reconnection attempts before giving up\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionAttempts = function (v) {\r\n  if (!arguments.length) return this._reconnectionAttempts;\r\n  this._reconnectionAttempts = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelay = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelay;\r\n  this._reconnectionDelay = v;\r\n  this.backoff && this.backoff.setMin(v);\r\n  return this;\r\n};\r\n\r\nManager.prototype.randomizationFactor = function (v) {\r\n  if (!arguments.length) return this._randomizationFactor;\r\n  this._randomizationFactor = v;\r\n  this.backoff && this.backoff.setJitter(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the maximum delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelayMax = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelayMax;\r\n  this._reconnectionDelayMax = v;\r\n  this.backoff && this.backoff.setMax(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the connection timeout. `false` to disable\r\n *\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.timeout = function (v) {\r\n  if (!arguments.length) return this._timeout;\r\n  this._timeout = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Starts trying to reconnect if reconnection is enabled and we have not\r\n * started reconnecting yet\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.maybeReconnectOnOpen = function () {\r\n  // Only try to reconnect if it's the first time we're connecting\r\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\r\n    // keeps reconnection from firing twice for the same reconnection loop\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Sets the current transport `socket`.\r\n *\r\n * @param {Function} optional, callback\r\n * @return {Manager} self\r\n * @api public\r\n */\r\n\r\nManager.prototype.open =\r\nManager.prototype.connect = function (fn, opts) {\r\n  debug('readyState %s', this.readyState);\r\n  if (~this.readyState.indexOf('open')) return this;\r\n\r\n  debug('opening %s', this.uri);\r\n  this.engine = eio(this.uri, this.opts);\r\n  var socket = this.engine;\r\n  var self = this;\r\n  this.readyState = 'opening';\r\n  this.skipReconnect = false;\r\n\r\n  // emit `open`\r\n  var openSub = on(socket, 'open', function () {\r\n    self.onopen();\r\n    fn && fn();\r\n  });\r\n\r\n  // emit `connect_error`\r\n  var errorSub = on(socket, 'error', function (data) {\r\n    debug('connect_error');\r\n    self.cleanup();\r\n    self.readyState = 'closed';\r\n    self.emitAll('connect_error', data);\r\n    if (fn) {\r\n      var err = new Error('Connection error');\r\n      err.data = data;\r\n      fn(err);\r\n    } else {\r\n      // Only do this if there is no fn to handle the error\r\n      self.maybeReconnectOnOpen();\r\n    }\r\n  });\r\n\r\n  // emit `connect_timeout`\r\n  if (false !== this._timeout) {\r\n    var timeout = this._timeout;\r\n    debug('connect attempt will timeout after %d', timeout);\r\n\r\n    // set timer\r\n    var timer = setTimeout(function () {\r\n      debug('connect attempt timed out after %d', timeout);\r\n      openSub.destroy();\r\n      socket.close();\r\n      socket.emit('error', 'timeout');\r\n      self.emitAll('connect_timeout', timeout);\r\n    }, timeout);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n\r\n  this.subs.push(openSub);\r\n  this.subs.push(errorSub);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon transport open.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onopen = function () {\r\n  debug('open');\r\n\r\n  // clear old subs\r\n  this.cleanup();\r\n\r\n  // mark as open\r\n  this.readyState = 'open';\r\n  this.emit('open');\r\n\r\n  // add new subs\r\n  var socket = this.engine;\r\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\r\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\r\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\r\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\r\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\r\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\r\n};\r\n\r\n/**\r\n * Called upon a ping.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onping = function () {\r\n  this.lastPing = new Date();\r\n  this.emitAll('ping');\r\n};\r\n\r\n/**\r\n * Called upon a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onpong = function () {\r\n  this.emitAll('pong', new Date() - this.lastPing);\r\n};\r\n\r\n/**\r\n * Called with data.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondata = function (data) {\r\n  this.decoder.add(data);\r\n};\r\n\r\n/**\r\n * Called when parser fully decodes a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondecoded = function (packet) {\r\n  this.emit('packet', packet);\r\n};\r\n\r\n/**\r\n * Called upon socket error.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onerror = function (err) {\r\n  debug('error', err);\r\n  this.emitAll('error', err);\r\n};\r\n\r\n/**\r\n * Creates a new socket for the given `nsp`.\r\n *\r\n * @return {Socket}\r\n * @api public\r\n */\r\n\r\nManager.prototype.socket = function (nsp, opts) {\r\n  var socket = this.nsps[nsp];\r\n  if (!socket) {\r\n    socket = new Socket(this, nsp, opts);\r\n    this.nsps[nsp] = socket;\r\n    var self = this;\r\n    socket.on('connecting', onConnecting);\r\n    socket.on('connect', function () {\r\n      socket.id = self.generateId(nsp);\r\n    });\r\n\r\n    if (this.autoConnect) {\r\n      // manually call here since connecting event is fired before listening\r\n      onConnecting();\r\n    }\r\n  }\r\n\r\n  function onConnecting () {\r\n    if (!~indexOf(self.connecting, socket)) {\r\n      self.connecting.push(socket);\r\n    }\r\n  }\r\n\r\n  return socket;\r\n};\r\n\r\n/**\r\n * Called upon a socket close.\r\n *\r\n * @param {Socket} socket\r\n */\r\n\r\nManager.prototype.destroy = function (socket) {\r\n  var index = indexOf(this.connecting, socket);\r\n  if (~index) this.connecting.splice(index, 1);\r\n  if (this.connecting.length) return;\r\n\r\n  this.close();\r\n};\r\n\r\n/**\r\n * Writes a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nManager.prototype.packet = function (packet) {\r\n  debug('writing packet %j', packet);\r\n  var self = this;\r\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\r\n\r\n  if (!self.encoding) {\r\n    // encode, then write to engine with result\r\n    self.encoding = true;\r\n    this.encoder.encode(packet, function (encodedPackets) {\r\n      for (var i = 0; i < encodedPackets.length; i++) {\r\n        self.engine.write(encodedPackets[i], packet.options);\r\n      }\r\n      self.encoding = false;\r\n      self.processPacketQueue();\r\n    });\r\n  } else { // add packet to the queue\r\n    self.packetBuffer.push(packet);\r\n  }\r\n};\r\n\r\n/**\r\n * If packet buffer is non-empty, begins encoding the\r\n * next packet in line.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.processPacketQueue = function () {\r\n  if (this.packetBuffer.length > 0 && !this.encoding) {\r\n    var pack = this.packetBuffer.shift();\r\n    this.packet(pack);\r\n  }\r\n};\r\n\r\n/**\r\n * Clean up transport subscriptions and packet buffer.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.cleanup = function () {\r\n  debug('cleanup');\r\n\r\n  var subsLength = this.subs.length;\r\n  for (var i = 0; i < subsLength; i++) {\r\n    var sub = this.subs.shift();\r\n    sub.destroy();\r\n  }\r\n\r\n  this.packetBuffer = [];\r\n  this.encoding = false;\r\n  this.lastPing = null;\r\n\r\n  this.decoder.destroy();\r\n};\r\n\r\n/**\r\n * Close the current socket.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.close =\r\nManager.prototype.disconnect = function () {\r\n  debug('disconnect');\r\n  this.skipReconnect = true;\r\n  this.reconnecting = false;\r\n  if ('opening' === this.readyState) {\r\n    // `onclose` will not fire because\r\n    // an open event never happened\r\n    this.cleanup();\r\n  }\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  if (this.engine) this.engine.close();\r\n};\r\n\r\n/**\r\n * Called upon engine close.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onclose = function (reason) {\r\n  debug('onclose');\r\n\r\n  this.cleanup();\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  this.emit('close', reason);\r\n\r\n  if (this._reconnection && !this.skipReconnect) {\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Attempt a reconnection.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.reconnect = function () {\r\n  if (this.reconnecting || this.skipReconnect) return this;\r\n\r\n  var self = this;\r\n\r\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\r\n    debug('reconnect failed');\r\n    this.backoff.reset();\r\n    this.emitAll('reconnect_failed');\r\n    this.reconnecting = false;\r\n  } else {\r\n    var delay = this.backoff.duration();\r\n    debug('will wait %dms before reconnect attempt', delay);\r\n\r\n    this.reconnecting = true;\r\n    var timer = setTimeout(function () {\r\n      if (self.skipReconnect) return;\r\n\r\n      debug('attempting reconnect');\r\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\r\n      self.emitAll('reconnecting', self.backoff.attempts);\r\n\r\n      // check again for the case socket closed in above events\r\n      if (self.skipReconnect) return;\r\n\r\n      self.open(function (err) {\r\n        if (err) {\r\n          debug('reconnect attempt error');\r\n          self.reconnecting = false;\r\n          self.reconnect();\r\n          self.emitAll('reconnect_error', err.data);\r\n        } else {\r\n          debug('reconnect success');\r\n          self.onreconnect();\r\n        }\r\n      });\r\n    }, delay);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful reconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onreconnect = function () {\r\n  var attempt = this.backoff.attempts;\r\n  this.reconnecting = false;\r\n  this.backoff.reset();\r\n  this.updateSocketIds();\r\n  this.emitAll('reconnect', attempt);\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/manager.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/on.js":
/*!*************************************************!*\
  !*** ./node_modules/socket.io-client/lib/on.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = on;\r\n\r\n/**\r\n * Helper for subscriptions.\r\n *\r\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\r\n * @param {String} event name\r\n * @param {Function} callback\r\n * @api public\r\n */\r\n\r\nfunction on (obj, ev, fn) {\r\n  obj.on(ev, fn);\r\n  return {\r\n    destroy: function () {\r\n      obj.removeListener(ev, fn);\r\n    }\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/on.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/socket.js":
/*!*****************************************************!*\
  !*** ./node_modules/socket.io-client/lib/socket.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/index.js\");\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/socket.io-client/node_modules/component-emitter/index.js\");\r\nvar toArray = __webpack_require__(/*! to-array */ \"./node_modules/to-array/index.js\");\r\nvar on = __webpack_require__(/*! ./on */ \"./node_modules/socket.io-client/lib/on.js\");\r\nvar bind = __webpack_require__(/*! component-bind */ \"./node_modules/component-bind/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client:socket');\r\nvar parseqs = __webpack_require__(/*! parseqs */ \"./node_modules/parseqs/index.js\");\r\nvar hasBin = __webpack_require__(/*! has-binary2 */ \"./node_modules/has-binary2/index.js\");\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = Socket;\r\n\r\n/**\r\n * Internal events (blacklisted).\r\n * These events can't be emitted by the user.\r\n *\r\n * @api private\r\n */\r\n\r\nvar events = {\r\n  connect: 1,\r\n  connect_error: 1,\r\n  connect_timeout: 1,\r\n  connecting: 1,\r\n  disconnect: 1,\r\n  error: 1,\r\n  reconnect: 1,\r\n  reconnect_attempt: 1,\r\n  reconnect_failed: 1,\r\n  reconnect_error: 1,\r\n  reconnecting: 1,\r\n  ping: 1,\r\n  pong: 1\r\n};\r\n\r\n/**\r\n * Shortcut to `Emitter#emit`.\r\n */\r\n\r\nvar emit = Emitter.prototype.emit;\r\n\r\n/**\r\n * `Socket` constructor.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Socket (io, nsp, opts) {\r\n  this.io = io;\r\n  this.nsp = nsp;\r\n  this.json = this; // compat\r\n  this.ids = 0;\r\n  this.acks = {};\r\n  this.receiveBuffer = [];\r\n  this.sendBuffer = [];\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  this.flags = {};\r\n  if (opts && opts.query) {\r\n    this.query = opts.query;\r\n  }\r\n  if (this.io.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Subscribe to open, close and packet events\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.subEvents = function () {\r\n  if (this.subs) return;\r\n\r\n  var io = this.io;\r\n  this.subs = [\r\n    on(io, 'open', bind(this, 'onopen')),\r\n    on(io, 'packet', bind(this, 'onpacket')),\r\n    on(io, 'close', bind(this, 'onclose'))\r\n  ];\r\n};\r\n\r\n/**\r\n * \"Opens\" the socket.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.prototype.open =\r\nSocket.prototype.connect = function () {\r\n  if (this.connected) return this;\r\n\r\n  this.subEvents();\r\n  this.io.open(); // ensure open\r\n  if ('open' === this.io.readyState) this.onopen();\r\n  this.emit('connecting');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a `message` event.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.send = function () {\r\n  var args = toArray(arguments);\r\n  args.unshift('message');\r\n  this.emit.apply(this, args);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Override `emit`.\r\n * If the event is in `events`, it's emitted normally.\r\n *\r\n * @param {String} event name\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.emit = function (ev) {\r\n  if (events.hasOwnProperty(ev)) {\r\n    emit.apply(this, arguments);\r\n    return this;\r\n  }\r\n\r\n  var args = toArray(arguments);\r\n  var packet = {\r\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\r\n    data: args\r\n  };\r\n\r\n  packet.options = {};\r\n  packet.options.compress = !this.flags || false !== this.flags.compress;\r\n\r\n  // event ack callback\r\n  if ('function' === typeof args[args.length - 1]) {\r\n    debug('emitting packet with ack id %d', this.ids);\r\n    this.acks[this.ids] = args.pop();\r\n    packet.id = this.ids++;\r\n  }\r\n\r\n  if (this.connected) {\r\n    this.packet(packet);\r\n  } else {\r\n    this.sendBuffer.push(packet);\r\n  }\r\n\r\n  this.flags = {};\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.packet = function (packet) {\r\n  packet.nsp = this.nsp;\r\n  this.io.packet(packet);\r\n};\r\n\r\n/**\r\n * Called upon engine `open`.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onopen = function () {\r\n  debug('transport is open - connecting');\r\n\r\n  // write connect packet if necessary\r\n  if ('/' !== this.nsp) {\r\n    if (this.query) {\r\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\r\n      debug('sending connect packet with query %s', query);\r\n      this.packet({type: parser.CONNECT, query: query});\r\n    } else {\r\n      this.packet({type: parser.CONNECT});\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon engine `close`.\r\n *\r\n * @param {String} reason\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onclose = function (reason) {\r\n  debug('close (%s)', reason);\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  delete this.id;\r\n  this.emit('disconnect', reason);\r\n};\r\n\r\n/**\r\n * Called with socket packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onpacket = function (packet) {\r\n  var sameNamespace = packet.nsp === this.nsp;\r\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\r\n\r\n  if (!sameNamespace && !rootNamespaceError) return;\r\n\r\n  switch (packet.type) {\r\n    case parser.CONNECT:\r\n      this.onconnect();\r\n      break;\r\n\r\n    case parser.EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.BINARY_EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.BINARY_ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.DISCONNECT:\r\n      this.ondisconnect();\r\n      break;\r\n\r\n    case parser.ERROR:\r\n      this.emit('error', packet.data);\r\n      break;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon a server event.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onevent = function (packet) {\r\n  var args = packet.data || [];\r\n  debug('emitting event %j', args);\r\n\r\n  if (null != packet.id) {\r\n    debug('attaching ack callback to event');\r\n    args.push(this.ack(packet.id));\r\n  }\r\n\r\n  if (this.connected) {\r\n    emit.apply(this, args);\r\n  } else {\r\n    this.receiveBuffer.push(args);\r\n  }\r\n};\r\n\r\n/**\r\n * Produces an ack callback to emit with an event.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ack = function (id) {\r\n  var self = this;\r\n  var sent = false;\r\n  return function () {\r\n    // prevent double callbacks\r\n    if (sent) return;\r\n    sent = true;\r\n    var args = toArray(arguments);\r\n    debug('sending ack %j', args);\r\n\r\n    self.packet({\r\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\r\n      id: id,\r\n      data: args\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * Called upon a server acknowlegement.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onack = function (packet) {\r\n  var ack = this.acks[packet.id];\r\n  if ('function' === typeof ack) {\r\n    debug('calling ack %s with %j', packet.id, packet.data);\r\n    ack.apply(this, packet.data);\r\n    delete this.acks[packet.id];\r\n  } else {\r\n    debug('bad ack %s', packet.id);\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon server connect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onconnect = function () {\r\n  this.connected = true;\r\n  this.disconnected = false;\r\n  this.emit('connect');\r\n  this.emitBuffered();\r\n};\r\n\r\n/**\r\n * Emit buffered events (received and emitted).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.emitBuffered = function () {\r\n  var i;\r\n  for (i = 0; i < this.receiveBuffer.length; i++) {\r\n    emit.apply(this, this.receiveBuffer[i]);\r\n  }\r\n  this.receiveBuffer = [];\r\n\r\n  for (i = 0; i < this.sendBuffer.length; i++) {\r\n    this.packet(this.sendBuffer[i]);\r\n  }\r\n  this.sendBuffer = [];\r\n};\r\n\r\n/**\r\n * Called upon server disconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ondisconnect = function () {\r\n  debug('server disconnect (%s)', this.nsp);\r\n  this.destroy();\r\n  this.onclose('io server disconnect');\r\n};\r\n\r\n/**\r\n * Called upon forced client/server side disconnections,\r\n * this method ensures the manager stops tracking us and\r\n * that reconnections don't get triggered for this.\r\n *\r\n * @api private.\r\n */\r\n\r\nSocket.prototype.destroy = function () {\r\n  if (this.subs) {\r\n    // clean subscriptions to avoid reconnections\r\n    for (var i = 0; i < this.subs.length; i++) {\r\n      this.subs[i].destroy();\r\n    }\r\n    this.subs = null;\r\n  }\r\n\r\n  this.io.destroy(this);\r\n};\r\n\r\n/**\r\n * Disconnects the socket manually.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.close =\r\nSocket.prototype.disconnect = function () {\r\n  if (this.connected) {\r\n    debug('performing disconnect (%s)', this.nsp);\r\n    this.packet({ type: parser.DISCONNECT });\r\n  }\r\n\r\n  // remove socket from pool\r\n  this.destroy();\r\n\r\n  if (this.connected) {\r\n    // fire events\r\n    this.onclose('io client disconnect');\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the compress flag.\r\n *\r\n * @param {Boolean} if `true`, compresses the sending data\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.compress = function (compress) {\r\n  this.flags.compress = compress;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the binary flag\r\n *\r\n * @param {Boolean} whether the emitted data contains binary\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.binary = function (binary) {\r\n  this.flags.binary = binary;\r\n  return this;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/socket.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/url.js":
/*!**************************************************!*\
  !*** ./node_modules/socket.io-client/lib/url.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parseuri = __webpack_require__(/*! parseuri */ \"./node_modules/parseuri/index.js\");\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-client/node_modules/debug/src/browser.js\")('socket.io-client:url');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = url;\r\n\r\n/**\r\n * URL parser.\r\n *\r\n * @param {String} url\r\n * @param {Object} An object meant to mimic window.location.\r\n *                 Defaults to window.location.\r\n * @api public\r\n */\r\n\r\nfunction url (uri, loc) {\r\n  var obj = uri;\r\n\r\n  // default to window.location\r\n  loc = loc || (typeof location !== 'undefined' && location);\r\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\r\n\r\n  // relative path support\r\n  if ('string' === typeof uri) {\r\n    if ('/' === uri.charAt(0)) {\r\n      if ('/' === uri.charAt(1)) {\r\n        uri = loc.protocol + uri;\r\n      } else {\r\n        uri = loc.host + uri;\r\n      }\r\n    }\r\n\r\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\r\n      debug('protocol-less url %s', uri);\r\n      if ('undefined' !== typeof loc) {\r\n        uri = loc.protocol + '//' + uri;\r\n      } else {\r\n        uri = 'https://' + uri;\r\n      }\r\n    }\r\n\r\n    // parse\r\n    debug('parse %s', uri);\r\n    obj = parseuri(uri);\r\n  }\r\n\r\n  // make sure we treat `localhost:80` and `localhost` equally\r\n  if (!obj.port) {\r\n    if (/^(http|ws)$/.test(obj.protocol)) {\r\n      obj.port = '80';\r\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\r\n      obj.port = '443';\r\n    }\r\n  }\r\n\r\n  obj.path = obj.path || '/';\r\n\r\n  var ipv6 = obj.host.indexOf(':') !== -1;\r\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\r\n\r\n  // define unique id\r\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\r\n  // define href\r\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\r\n\r\n  return obj;\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/lib/url.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/component-emitter/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/component-emitter/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/component-emitter/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/debug/src/browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/debug/src/browser.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */\r\n\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n */\r\n\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n\t'#0000CC',\r\n\t'#0000FF',\r\n\t'#0033CC',\r\n\t'#0033FF',\r\n\t'#0066CC',\r\n\t'#0066FF',\r\n\t'#0099CC',\r\n\t'#0099FF',\r\n\t'#00CC00',\r\n\t'#00CC33',\r\n\t'#00CC66',\r\n\t'#00CC99',\r\n\t'#00CCCC',\r\n\t'#00CCFF',\r\n\t'#3300CC',\r\n\t'#3300FF',\r\n\t'#3333CC',\r\n\t'#3333FF',\r\n\t'#3366CC',\r\n\t'#3366FF',\r\n\t'#3399CC',\r\n\t'#3399FF',\r\n\t'#33CC00',\r\n\t'#33CC33',\r\n\t'#33CC66',\r\n\t'#33CC99',\r\n\t'#33CCCC',\r\n\t'#33CCFF',\r\n\t'#6600CC',\r\n\t'#6600FF',\r\n\t'#6633CC',\r\n\t'#6633FF',\r\n\t'#66CC00',\r\n\t'#66CC33',\r\n\t'#9900CC',\r\n\t'#9900FF',\r\n\t'#9933CC',\r\n\t'#9933FF',\r\n\t'#99CC00',\r\n\t'#99CC33',\r\n\t'#CC0000',\r\n\t'#CC0033',\r\n\t'#CC0066',\r\n\t'#CC0099',\r\n\t'#CC00CC',\r\n\t'#CC00FF',\r\n\t'#CC3300',\r\n\t'#CC3333',\r\n\t'#CC3366',\r\n\t'#CC3399',\r\n\t'#CC33CC',\r\n\t'#CC33FF',\r\n\t'#CC6600',\r\n\t'#CC6633',\r\n\t'#CC9900',\r\n\t'#CC9933',\r\n\t'#CCCC00',\r\n\t'#CCCC33',\r\n\t'#FF0000',\r\n\t'#FF0033',\r\n\t'#FF0066',\r\n\t'#FF0099',\r\n\t'#FF00CC',\r\n\t'#FF00FF',\r\n\t'#FF3300',\r\n\t'#FF3333',\r\n\t'#FF3366',\r\n\t'#FF3399',\r\n\t'#FF33CC',\r\n\t'#FF33FF',\r\n\t'#FF6600',\r\n\t'#FF6633',\r\n\t'#FF9900',\r\n\t'#FF9933',\r\n\t'#FFCC00',\r\n\t'#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\n// eslint-disable-next-line complexity\r\nfunction useColors() {\r\n\t// NB: In an Electron preload script, document will be defined but not fully\r\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\r\n\t// explicitly\r\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Internet Explorer and Edge do not support colors.\r\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\r\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\r\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n\t\t// Is firefox >= v31?\r\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n\t\t// Double check webkit in userAgent just in case we are in a worker\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n\targs[0] = (this.useColors ? '%c' : '') +\r\n\t\tthis.namespace +\r\n\t\t(this.useColors ? ' %c' : ' ') +\r\n\t\targs[0] +\r\n\t\t(this.useColors ? '%c ' : ' ') +\r\n\t\t'+' + module.exports.humanize(this.diff);\r\n\r\n\tif (!this.useColors) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst c = 'color: ' + this.color;\r\n\targs.splice(1, 0, c, 'color: inherit');\r\n\r\n\t// The final \"%c\" is somewhat tricky, because there could be other\r\n\t// arguments passed either before or after the %c, so we need to\r\n\t// figure out the correct index to insert the CSS into\r\n\tlet index = 0;\r\n\tlet lastC = 0;\r\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\r\n\t\tif (match === '%%') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tindex++;\r\n\t\tif (match === '%c') {\r\n\t\t\t// We only are interested in the *last* %c\r\n\t\t\t// (the user may have provided their own)\r\n\t\t\tlastC = index;\r\n\t\t}\r\n\t});\r\n\r\n\targs.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\nfunction log(...args) {\r\n\t// This hackery is required for IE8/9, where\r\n\t// the `console.log` function doesn't have 'apply'\r\n\treturn typeof console === 'object' &&\r\n\t\tconsole.log &&\r\n\t\tconsole.log(...args);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\nfunction save(namespaces) {\r\n\ttry {\r\n\t\tif (namespaces) {\r\n\t\t\texports.storage.setItem('debug', namespaces);\r\n\t\t} else {\r\n\t\t\texports.storage.removeItem('debug');\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\nfunction load() {\r\n\tlet r;\r\n\ttry {\r\n\t\tr = exports.storage.getItem('debug');\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n\r\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\r\n\t\tr = process.env.DEBUG;\r\n\t}\r\n\r\n\treturn r;\r\n}\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n\ttry {\r\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\r\n\t\t// The Browser also has localStorage in the global context.\r\n\t\treturn localStorage;\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/socket.io-client/node_modules/debug/src/common.js\")(exports);\r\n\r\nconst {formatters} = module.exports;\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nformatters.j = function (v) {\r\n\ttry {\r\n\t\treturn JSON.stringify(v);\r\n\t} catch (error) {\r\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\r\n\t}\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/debug/src/common.js":
/*!************************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/debug/src/common.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n */\r\n\r\nfunction setup(env) {\r\n\tcreateDebug.debug = createDebug;\r\n\tcreateDebug.default = createDebug;\r\n\tcreateDebug.coerce = coerce;\r\n\tcreateDebug.disable = disable;\r\n\tcreateDebug.enable = enable;\r\n\tcreateDebug.enabled = enabled;\r\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/socket.io-client/node_modules/ms/index.js\");\r\n\r\n\tObject.keys(env).forEach(key => {\r\n\t\tcreateDebug[key] = env[key];\r\n\t});\r\n\r\n\t/**\r\n\t* Active `debug` instances.\r\n\t*/\r\n\tcreateDebug.instances = [];\r\n\r\n\t/**\r\n\t* The currently active debug mode names, and names to skip.\r\n\t*/\r\n\r\n\tcreateDebug.names = [];\r\n\tcreateDebug.skips = [];\r\n\r\n\t/**\r\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n\t*\r\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n\t*/\r\n\tcreateDebug.formatters = {};\r\n\r\n\t/**\r\n\t* Selects a color for a debug namespace\r\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\r\n\t* @return {Number|String} An ANSI color code for the given namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction selectColor(namespace) {\r\n\t\tlet hash = 0;\r\n\r\n\t\tfor (let i = 0; i < namespace.length; i++) {\r\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t}\r\n\r\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\r\n\t}\r\n\tcreateDebug.selectColor = selectColor;\r\n\r\n\t/**\r\n\t* Create a debugger with the given `namespace`.\r\n\t*\r\n\t* @param {String} namespace\r\n\t* @return {Function}\r\n\t* @api public\r\n\t*/\r\n\tfunction createDebug(namespace) {\r\n\t\tlet prevTime;\r\n\r\n\t\tfunction debug(...args) {\r\n\t\t\t// Disabled?\r\n\t\t\tif (!debug.enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst self = debug;\r\n\r\n\t\t\t// Set `diff` timestamp\r\n\t\t\tconst curr = Number(new Date());\r\n\t\t\tconst ms = curr - (prevTime || curr);\r\n\t\t\tself.diff = ms;\r\n\t\t\tself.prev = prevTime;\r\n\t\t\tself.curr = curr;\r\n\t\t\tprevTime = curr;\r\n\r\n\t\t\targs[0] = createDebug.coerce(args[0]);\r\n\r\n\t\t\tif (typeof args[0] !== 'string') {\r\n\t\t\t\t// Anything else let's inspect with %O\r\n\t\t\t\targs.unshift('%O');\r\n\t\t\t}\r\n\r\n\t\t\t// Apply any `formatters` transformations\r\n\t\t\tlet index = 0;\r\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\r\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\r\n\t\t\t\tif (match === '%%') {\r\n\t\t\t\t\treturn match;\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t\tconst formatter = createDebug.formatters[format];\r\n\t\t\t\tif (typeof formatter === 'function') {\r\n\t\t\t\t\tconst val = args[index];\r\n\t\t\t\t\tmatch = formatter.call(self, val);\r\n\r\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\r\n\t\t\t\t\targs.splice(index, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t\treturn match;\r\n\t\t\t});\r\n\r\n\t\t\t// Apply env-specific formatting (colors, etc.)\r\n\t\t\tcreateDebug.formatArgs.call(self, args);\r\n\r\n\t\t\tconst logFn = self.log || createDebug.log;\r\n\t\t\tlogFn.apply(self, args);\r\n\t\t}\r\n\r\n\t\tdebug.namespace = namespace;\r\n\t\tdebug.enabled = createDebug.enabled(namespace);\r\n\t\tdebug.useColors = createDebug.useColors();\r\n\t\tdebug.color = selectColor(namespace);\r\n\t\tdebug.destroy = destroy;\r\n\t\tdebug.extend = extend;\r\n\t\t// Debug.formatArgs = formatArgs;\r\n\t\t// debug.rawLog = rawLog;\r\n\r\n\t\t// env-specific initialization logic for debug instances\r\n\t\tif (typeof createDebug.init === 'function') {\r\n\t\t\tcreateDebug.init(debug);\r\n\t\t}\r\n\r\n\t\tcreateDebug.instances.push(debug);\r\n\r\n\t\treturn debug;\r\n\t}\r\n\r\n\tfunction destroy() {\r\n\t\tconst index = createDebug.instances.indexOf(this);\r\n\t\tif (index !== -1) {\r\n\t\t\tcreateDebug.instances.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction extend(namespace, delimiter) {\r\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\r\n\t\tnewDebug.log = this.log;\r\n\t\treturn newDebug;\r\n\t}\r\n\r\n\t/**\r\n\t* Enables a debug mode by namespaces. This can include modes\r\n\t* separated by a colon and wildcards.\r\n\t*\r\n\t* @param {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction enable(namespaces) {\r\n\t\tcreateDebug.save(namespaces);\r\n\r\n\t\tcreateDebug.names = [];\r\n\t\tcreateDebug.skips = [];\r\n\r\n\t\tlet i;\r\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n\t\tconst len = split.length;\r\n\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tif (!split[i]) {\r\n\t\t\t\t// ignore empty strings\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\r\n\r\n\t\t\tif (namespaces[0] === '-') {\r\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n\t\t\t} else {\r\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\r\n\t\t\tconst instance = createDebug.instances[i];\r\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Disable debug output.\r\n\t*\r\n\t* @return {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction disable() {\r\n\t\tconst namespaces = [\r\n\t\t\t...createDebug.names.map(toNamespace),\r\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\r\n\t\t].join(',');\r\n\t\tcreateDebug.enable('');\r\n\t\treturn namespaces;\r\n\t}\r\n\r\n\t/**\r\n\t* Returns true if the given mode name is enabled, false otherwise.\r\n\t*\r\n\t* @param {String} name\r\n\t* @return {Boolean}\r\n\t* @api public\r\n\t*/\r\n\tfunction enabled(name) {\r\n\t\tif (name[name.length - 1] === '*') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet i;\r\n\t\tlet len;\r\n\r\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\r\n\t\t\tif (createDebug.skips[i].test(name)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\r\n\t\t\tif (createDebug.names[i].test(name)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t* Convert regexp to namespace\r\n\t*\r\n\t* @param {RegExp} regxep\r\n\t* @return {String} namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction toNamespace(regexp) {\r\n\t\treturn regexp.toString()\r\n\t\t\t.substring(2, regexp.toString().length - 2)\r\n\t\t\t.replace(/\\.\\*\\?$/, '*');\r\n\t}\r\n\r\n\t/**\r\n\t* Coerce `val`.\r\n\t*\r\n\t* @param {Mixed} val\r\n\t* @return {Mixed}\r\n\t* @api private\r\n\t*/\r\n\tfunction coerce(val) {\r\n\t\tif (val instanceof Error) {\r\n\t\t\treturn val.stack || val.message;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\tcreateDebug.enable(createDebug.load());\r\n\r\n\treturn createDebug;\r\n}\r\n\r\nmodule.exports = setup;\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/debug/src/common.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/ms/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/ms/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar w = d * 7;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isFinite(val)) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'weeks':\r\n    case 'week':\r\n    case 'w':\r\n      return n * w;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (msAbs >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (msAbs >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (msAbs >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return plural(ms, msAbs, d, 'day');\r\n  }\r\n  if (msAbs >= h) {\r\n    return plural(ms, msAbs, h, 'hour');\r\n  }\r\n  if (msAbs >= m) {\r\n    return plural(ms, msAbs, m, 'minute');\r\n  }\r\n  if (msAbs >= s) {\r\n    return plural(ms, msAbs, s, 'second');\r\n  }\r\n  return ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, msAbs, n, name) {\r\n  var isPlural = msAbs >= n * 1.5;\r\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-client/node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/binary.js":
/*!*************************************************!*\
  !*** ./node_modules/socket.io-parser/binary.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*global Blob,File*/\r\n\r\n/**\r\n * Module requirements\r\n */\r\n\r\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/socket.io-parser/node_modules/isarray/index.js\");\r\nvar isBuf = __webpack_require__(/*! ./is-buffer */ \"./node_modules/socket.io-parser/is-buffer.js\");\r\nvar toString = Object.prototype.toString;\r\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\r\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\r\n\r\n/**\r\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\r\n * Anything with blobs or files should be fed through removeBlobs before coming\r\n * here.\r\n *\r\n * @param {Object} packet - socket.io event packet\r\n * @return {Object} with deconstructed packet and list of buffers\r\n * @api public\r\n */\r\n\r\nexports.deconstructPacket = function(packet) {\r\n  var buffers = [];\r\n  var packetData = packet.data;\r\n  var pack = packet;\r\n  pack.data = _deconstructPacket(packetData, buffers);\r\n  pack.attachments = buffers.length; // number of binary 'attachments'\r\n  return {packet: pack, buffers: buffers};\r\n};\r\n\r\nfunction _deconstructPacket(data, buffers) {\r\n  if (!data) return data;\r\n\r\n  if (isBuf(data)) {\r\n    var placeholder = { _placeholder: true, num: buffers.length };\r\n    buffers.push(data);\r\n    return placeholder;\r\n  } else if (isArray(data)) {\r\n    var newData = new Array(data.length);\r\n    for (var i = 0; i < data.length; i++) {\r\n      newData[i] = _deconstructPacket(data[i], buffers);\r\n    }\r\n    return newData;\r\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\r\n    var newData = {};\r\n    for (var key in data) {\r\n      newData[key] = _deconstructPacket(data[key], buffers);\r\n    }\r\n    return newData;\r\n  }\r\n  return data;\r\n}\r\n\r\n/**\r\n * Reconstructs a binary packet from its placeholder packet and buffers\r\n *\r\n * @param {Object} packet - event packet with placeholders\r\n * @param {Array} buffers - binary buffers to put in placeholder positions\r\n * @return {Object} reconstructed packet\r\n * @api public\r\n */\r\n\r\nexports.reconstructPacket = function(packet, buffers) {\r\n  packet.data = _reconstructPacket(packet.data, buffers);\r\n  packet.attachments = undefined; // no longer useful\r\n  return packet;\r\n};\r\n\r\nfunction _reconstructPacket(data, buffers) {\r\n  if (!data) return data;\r\n\r\n  if (data && data._placeholder) {\r\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\r\n  } else if (isArray(data)) {\r\n    for (var i = 0; i < data.length; i++) {\r\n      data[i] = _reconstructPacket(data[i], buffers);\r\n    }\r\n  } else if (typeof data === 'object') {\r\n    for (var key in data) {\r\n      data[key] = _reconstructPacket(data[key], buffers);\r\n    }\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Asynchronously removes Blobs or Files from data via\r\n * FileReader's readAsArrayBuffer method. Used before encoding\r\n * data as msgpack. Calls callback with the blobless data.\r\n *\r\n * @param {Object} data\r\n * @param {Function} callback\r\n * @api private\r\n */\r\n\r\nexports.removeBlobs = function(data, callback) {\r\n  function _removeBlobs(obj, curKey, containingObject) {\r\n    if (!obj) return obj;\r\n\r\n    // convert any blob\r\n    if ((withNativeBlob && obj instanceof Blob) ||\r\n        (withNativeFile && obj instanceof File)) {\r\n      pendingBlobs++;\r\n\r\n      // async filereader\r\n      var fileReader = new FileReader();\r\n      fileReader.onload = function() { // this.result == arraybuffer\r\n        if (containingObject) {\r\n          containingObject[curKey] = this.result;\r\n        }\r\n        else {\r\n          bloblessData = this.result;\r\n        }\r\n\r\n        // if nothing pending its callback time\r\n        if(! --pendingBlobs) {\r\n          callback(bloblessData);\r\n        }\r\n      };\r\n\r\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\r\n    } else if (isArray(obj)) { // handle array\r\n      for (var i = 0; i < obj.length; i++) {\r\n        _removeBlobs(obj[i], i, obj);\r\n      }\r\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\r\n      for (var key in obj) {\r\n        _removeBlobs(obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n\r\n  var pendingBlobs = 0;\r\n  var bloblessData = data;\r\n  _removeBlobs(bloblessData);\r\n  if (!pendingBlobs) {\r\n    callback(bloblessData);\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/binary.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/index.js":
/*!************************************************!*\
  !*** ./node_modules/socket.io-parser/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/socket.io-parser/node_modules/debug/src/browser.js\")('socket.io-parser');\r\nvar Emitter = __webpack_require__(/*! component-emitter */ \"./node_modules/socket.io-parser/node_modules/component-emitter/index.js\");\r\nvar binary = __webpack_require__(/*! ./binary */ \"./node_modules/socket.io-parser/binary.js\");\r\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/socket.io-parser/node_modules/isarray/index.js\");\r\nvar isBuf = __webpack_require__(/*! ./is-buffer */ \"./node_modules/socket.io-parser/is-buffer.js\");\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.protocol = 4;\r\n\r\n/**\r\n * Packet types.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.types = [\r\n  'CONNECT',\r\n  'DISCONNECT',\r\n  'EVENT',\r\n  'ACK',\r\n  'ERROR',\r\n  'BINARY_EVENT',\r\n  'BINARY_ACK'\r\n];\r\n\r\n/**\r\n * Packet type `connect`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.CONNECT = 0;\r\n\r\n/**\r\n * Packet type `disconnect`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.DISCONNECT = 1;\r\n\r\n/**\r\n * Packet type `event`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.EVENT = 2;\r\n\r\n/**\r\n * Packet type `ack`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.ACK = 3;\r\n\r\n/**\r\n * Packet type `error`.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.ERROR = 4;\r\n\r\n/**\r\n * Packet type 'binary event'\r\n *\r\n * @api public\r\n */\r\n\r\nexports.BINARY_EVENT = 5;\r\n\r\n/**\r\n * Packet type `binary ack`. For acks with binary arguments.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.BINARY_ACK = 6;\r\n\r\n/**\r\n * Encoder constructor.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.Encoder = Encoder;\r\n\r\n/**\r\n * Decoder constructor.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.Decoder = Decoder;\r\n\r\n/**\r\n * A socket.io Encoder instance\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Encoder() {}\r\n\r\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\r\n\r\n/**\r\n * Encode a packet as a single string if non-binary, or as a\r\n * buffer sequence, depending on packet type.\r\n *\r\n * @param {Object} obj - packet object\r\n * @param {Function} callback - function to handle encodings (likely engine.write)\r\n * @return Calls callback with Array of encodings\r\n * @api public\r\n */\r\n\r\nEncoder.prototype.encode = function(obj, callback){\r\n  debug('encoding packet %j', obj);\r\n\r\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\r\n    encodeAsBinary(obj, callback);\r\n  } else {\r\n    var encoding = encodeAsString(obj);\r\n    callback([encoding]);\r\n  }\r\n};\r\n\r\n/**\r\n * Encode packet as string.\r\n *\r\n * @param {Object} packet\r\n * @return {String} encoded\r\n * @api private\r\n */\r\n\r\nfunction encodeAsString(obj) {\r\n\r\n  // first is type\r\n  var str = '' + obj.type;\r\n\r\n  // attachments if we have them\r\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\r\n    str += obj.attachments + '-';\r\n  }\r\n\r\n  // if we have a namespace other than `/`\r\n  // we append it followed by a comma `,`\r\n  if (obj.nsp && '/' !== obj.nsp) {\r\n    str += obj.nsp + ',';\r\n  }\r\n\r\n  // immediately followed by the id\r\n  if (null != obj.id) {\r\n    str += obj.id;\r\n  }\r\n\r\n  // json data\r\n  if (null != obj.data) {\r\n    var payload = tryStringify(obj.data);\r\n    if (payload !== false) {\r\n      str += payload;\r\n    } else {\r\n      return ERROR_PACKET;\r\n    }\r\n  }\r\n\r\n  debug('encoded %j as %s', obj, str);\r\n  return str;\r\n}\r\n\r\nfunction tryStringify(str) {\r\n  try {\r\n    return JSON.stringify(str);\r\n  } catch(e){\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Encode packet as 'buffer sequence' by removing blobs, and\r\n * deconstructing packet into object with placeholders and\r\n * a list of buffers.\r\n *\r\n * @param {Object} packet\r\n * @return {Buffer} encoded\r\n * @api private\r\n */\r\n\r\nfunction encodeAsBinary(obj, callback) {\r\n\r\n  function writeEncoding(bloblessData) {\r\n    var deconstruction = binary.deconstructPacket(bloblessData);\r\n    var pack = encodeAsString(deconstruction.packet);\r\n    var buffers = deconstruction.buffers;\r\n\r\n    buffers.unshift(pack); // add packet info to beginning of data list\r\n    callback(buffers); // write all the buffers\r\n  }\r\n\r\n  binary.removeBlobs(obj, writeEncoding);\r\n}\r\n\r\n/**\r\n * A socket.io Decoder instance\r\n *\r\n * @return {Object} decoder\r\n * @api public\r\n */\r\n\r\nfunction Decoder() {\r\n  this.reconstructor = null;\r\n}\r\n\r\n/**\r\n * Mix in `Emitter` with Decoder.\r\n */\r\n\r\nEmitter(Decoder.prototype);\r\n\r\n/**\r\n * Decodes an encoded packet string into packet JSON.\r\n *\r\n * @param {String} obj - encoded packet\r\n * @return {Object} packet\r\n * @api public\r\n */\r\n\r\nDecoder.prototype.add = function(obj) {\r\n  var packet;\r\n  if (typeof obj === 'string') {\r\n    packet = decodeString(obj);\r\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\r\n      this.reconstructor = new BinaryReconstructor(packet);\r\n\r\n      // no attachments, labeled binary but no binary data to follow\r\n      if (this.reconstructor.reconPack.attachments === 0) {\r\n        this.emit('decoded', packet);\r\n      }\r\n    } else { // non-binary full packet\r\n      this.emit('decoded', packet);\r\n    }\r\n  } else if (isBuf(obj) || obj.base64) { // raw binary data\r\n    if (!this.reconstructor) {\r\n      throw new Error('got binary data when not reconstructing a packet');\r\n    } else {\r\n      packet = this.reconstructor.takeBinaryData(obj);\r\n      if (packet) { // received final buffer\r\n        this.reconstructor = null;\r\n        this.emit('decoded', packet);\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Unknown type: ' + obj);\r\n  }\r\n};\r\n\r\n/**\r\n * Decode a packet String (JSON data)\r\n *\r\n * @param {String} str\r\n * @return {Object} packet\r\n * @api private\r\n */\r\n\r\nfunction decodeString(str) {\r\n  var i = 0;\r\n  // look up type\r\n  var p = {\r\n    type: Number(str.charAt(0))\r\n  };\r\n\r\n  if (null == exports.types[p.type]) {\r\n    return error('unknown packet type ' + p.type);\r\n  }\r\n\r\n  // look up attachments if type binary\r\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\r\n    var buf = '';\r\n    while (str.charAt(++i) !== '-') {\r\n      buf += str.charAt(i);\r\n      if (i == str.length) break;\r\n    }\r\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\r\n      throw new Error('Illegal attachments');\r\n    }\r\n    p.attachments = Number(buf);\r\n  }\r\n\r\n  // look up namespace (if any)\r\n  if ('/' === str.charAt(i + 1)) {\r\n    p.nsp = '';\r\n    while (++i) {\r\n      var c = str.charAt(i);\r\n      if (',' === c) break;\r\n      p.nsp += c;\r\n      if (i === str.length) break;\r\n    }\r\n  } else {\r\n    p.nsp = '/';\r\n  }\r\n\r\n  // look up id\r\n  var next = str.charAt(i + 1);\r\n  if ('' !== next && Number(next) == next) {\r\n    p.id = '';\r\n    while (++i) {\r\n      var c = str.charAt(i);\r\n      if (null == c || Number(c) != c) {\r\n        --i;\r\n        break;\r\n      }\r\n      p.id += str.charAt(i);\r\n      if (i === str.length) break;\r\n    }\r\n    p.id = Number(p.id);\r\n  }\r\n\r\n  // look up json data\r\n  if (str.charAt(++i)) {\r\n    var payload = tryParse(str.substr(i));\r\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\r\n    if (isPayloadValid) {\r\n      p.data = payload;\r\n    } else {\r\n      return error('invalid payload');\r\n    }\r\n  }\r\n\r\n  debug('decoded %s as %j', str, p);\r\n  return p;\r\n}\r\n\r\nfunction tryParse(str) {\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch(e){\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Deallocates a parser's resources\r\n *\r\n * @api public\r\n */\r\n\r\nDecoder.prototype.destroy = function() {\r\n  if (this.reconstructor) {\r\n    this.reconstructor.finishedReconstruction();\r\n  }\r\n};\r\n\r\n/**\r\n * A manager of a binary event's 'buffer sequence'. Should\r\n * be constructed whenever a packet of type BINARY_EVENT is\r\n * decoded.\r\n *\r\n * @param {Object} packet\r\n * @return {BinaryReconstructor} initialized reconstructor\r\n * @api private\r\n */\r\n\r\nfunction BinaryReconstructor(packet) {\r\n  this.reconPack = packet;\r\n  this.buffers = [];\r\n}\r\n\r\n/**\r\n * Method to be called when binary data received from connection\r\n * after a BINARY_EVENT packet.\r\n *\r\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\r\n * @return {null | Object} returns null if more binary data is expected or\r\n *   a reconstructed packet object if all buffers have been received.\r\n * @api private\r\n */\r\n\r\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\r\n  this.buffers.push(binData);\r\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\r\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\r\n    this.finishedReconstruction();\r\n    return packet;\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Cleans up binary packet reconstruction variables.\r\n *\r\n * @api private\r\n */\r\n\r\nBinaryReconstructor.prototype.finishedReconstruction = function() {\r\n  this.reconPack = null;\r\n  this.buffers = [];\r\n};\r\n\r\nfunction error(msg) {\r\n  return {\r\n    type: exports.ERROR,\r\n    data: 'parser error: ' + msg\r\n  };\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/is-buffer.js":
/*!****************************************************!*\
  !*** ./node_modules/socket.io-parser/is-buffer.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\r\nmodule.exports = isBuf;\r\n\r\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\r\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\r\n\r\nvar isView = function (obj) {\r\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\r\n};\r\n\r\n/**\r\n * Returns true if obj is a buffer or an arraybuffer.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction isBuf(obj) {\r\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\r\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\r\n}\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/is-buffer.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/node_modules/component-emitter/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/socket.io-parser/node_modules/component-emitter/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/component-emitter/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/node_modules/debug/src/browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/socket.io-parser/node_modules/debug/src/browser.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/**\r\n * This is the web browser implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/socket.io-parser/node_modules/debug/src/debug.js\");\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = 'undefined' != typeof chrome\r\n               && 'undefined' != typeof chrome.storage\r\n                  ? chrome.storage.local\r\n                  : localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\r\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\r\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\r\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\r\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\r\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\r\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\r\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\r\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\r\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\r\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\nfunction useColors() {\r\n  // NB: In an Electron preload script, document will be defined but not fully\r\n  // initialized. Since we know we're in Chrome, we'll just detect this case\r\n  // explicitly\r\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\r\n    return true;\r\n  }\r\n\r\n  // Internet Explorer and Edge do not support colors.\r\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n    return false;\r\n  }\r\n\r\n  // is webkit? http://stackoverflow.com/a/16459606/376773\r\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n    // is firebug? http://stackoverflow.com/a/398120/376773\r\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n    // is firefox >= v31?\r\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n    // double check webkit in userAgent just in case we are in a worker\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nexports.formatters.j = function(v) {\r\n  try {\r\n    return JSON.stringify(v);\r\n  } catch (err) {\r\n    return '[UnexpectedJSONParseError]: ' + err.message;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var useColors = this.useColors;\r\n\r\n  args[0] = (useColors ? '%c' : '')\r\n    + this.namespace\r\n    + (useColors ? ' %c' : ' ')\r\n    + args[0]\r\n    + (useColors ? '%c ' : ' ')\r\n    + '+' + exports.humanize(this.diff);\r\n\r\n  if (!useColors) return;\r\n\r\n  var c = 'color: ' + this.color;\r\n  args.splice(1, 0, c, 'color: inherit')\r\n\r\n  // the final \"%c\" is somewhat tricky, because there could be other\r\n  // arguments passed either before or after the %c, so we need to\r\n  // figure out the correct index to insert the CSS into\r\n  var index = 0;\r\n  var lastC = 0;\r\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\r\n    if ('%%' === match) return;\r\n    index++;\r\n    if ('%c' === match) {\r\n      // we only are interested in the *last* %c\r\n      // (the user may have provided their own)\r\n      lastC = index;\r\n    }\r\n  });\r\n\r\n  args.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\n\r\nfunction log() {\r\n  // this hackery is required for IE8/9, where\r\n  // the `console.log` function doesn't have 'apply'\r\n  return 'object' === typeof console\r\n    && console.log\r\n    && Function.prototype.apply.call(console.log, console, arguments);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  try {\r\n    if (null == namespaces) {\r\n      exports.storage.removeItem('debug');\r\n    } else {\r\n      exports.storage.debug = namespaces;\r\n    }\r\n  } catch(e) {}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  var r;\r\n  try {\r\n    r = exports.storage.debug;\r\n  } catch(e) {}\r\n\r\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\r\n    r = process.env.DEBUG;\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `localStorage.debug` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n  try {\r\n    return window.localStorage;\r\n  } catch (e) {}\r\n}\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/node_modules/debug/src/debug.js":
/*!***********************************************************************!*\
  !*** ./node_modules/socket.io-parser/node_modules/debug/src/debug.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\r\nexports.coerce = coerce;\r\nexports.disable = disable;\r\nexports.enable = enable;\r\nexports.enabled = enabled;\r\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\r\n\r\n/**\r\n * Active `debug` instances.\r\n */\r\nexports.instances = [];\r\n\r\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\r\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\r\n\r\nexports.formatters = {};\r\n\r\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction selectColor(namespace) {\r\n  var hash = 0, i;\r\n\r\n  for (i in namespace) {\r\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n\r\n  return exports.colors[Math.abs(hash) % exports.colors.length];\r\n}\r\n\r\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction createDebug(namespace) {\r\n\r\n  var prevTime;\r\n\r\n  function debug() {\r\n    // disabled?\r\n    if (!debug.enabled) return;\r\n\r\n    var self = debug;\r\n\r\n    // set `diff` timestamp\r\n    var curr = +new Date();\r\n    var ms = curr - (prevTime || curr);\r\n    self.diff = ms;\r\n    self.prev = prevTime;\r\n    self.curr = curr;\r\n    prevTime = curr;\r\n\r\n    // turn the `arguments` into a proper Array\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n\r\n    args[0] = exports.coerce(args[0]);\r\n\r\n    if ('string' !== typeof args[0]) {\r\n      // anything else let's inspect with %O\r\n      args.unshift('%O');\r\n    }\r\n\r\n    // apply any `formatters` transformations\r\n    var index = 0;\r\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\r\n      // if we encounter an escaped % then don't increase the array index\r\n      if (match === '%%') return match;\r\n      index++;\r\n      var formatter = exports.formatters[format];\r\n      if ('function' === typeof formatter) {\r\n        var val = args[index];\r\n        match = formatter.call(self, val);\r\n\r\n        // now we need to remove `args[index]` since it's inlined in the `format`\r\n        args.splice(index, 1);\r\n        index--;\r\n      }\r\n      return match;\r\n    });\r\n\r\n    // apply env-specific formatting (colors, etc.)\r\n    exports.formatArgs.call(self, args);\r\n\r\n    var logFn = debug.log || exports.log || console.log.bind(console);\r\n    logFn.apply(self, args);\r\n  }\r\n\r\n  debug.namespace = namespace;\r\n  debug.enabled = exports.enabled(namespace);\r\n  debug.useColors = exports.useColors();\r\n  debug.color = selectColor(namespace);\r\n  debug.destroy = destroy;\r\n\r\n  // env-specific initialization logic for debug instances\r\n  if ('function' === typeof exports.init) {\r\n    exports.init(debug);\r\n  }\r\n\r\n  exports.instances.push(debug);\r\n\r\n  return debug;\r\n}\r\n\r\nfunction destroy () {\r\n  var index = exports.instances.indexOf(this);\r\n  if (index !== -1) {\r\n    exports.instances.splice(index, 1);\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\r\n\r\nfunction enable(namespaces) {\r\n  exports.save(namespaces);\r\n\r\n  exports.names = [];\r\n  exports.skips = [];\r\n\r\n  var i;\r\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r\n  for (i = 0; i < len; i++) {\r\n    if (!split[i]) continue; // ignore empty strings\r\n    namespaces = split[i].replace(/\\*/g, '.*?');\r\n    if (namespaces[0] === '-') {\r\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n    } else {\r\n      exports.names.push(new RegExp('^' + namespaces + '$'));\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < exports.instances.length; i++) {\r\n    var instance = exports.instances[i];\r\n    instance.enabled = exports.enabled(instance.namespace);\r\n  }\r\n}\r\n\r\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction disable() {\r\n  exports.enable('');\r\n}\r\n\r\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction enabled(name) {\r\n  if (name[name.length - 1] === '*') {\r\n    return true;\r\n  }\r\n  var i, len;\r\n  for (i = 0, len = exports.skips.length; i < len; i++) {\r\n    if (exports.skips[i].test(name)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.names.length; i < len; i++) {\r\n    if (exports.names[i].test(name)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\r\n\r\nfunction coerce(val) {\r\n  if (val instanceof Error) return val.stack || val.message;\r\n  return val;\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/debug/src/debug.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/node_modules/isarray/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/socket.io-parser/node_modules/isarray/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\r\n\r\nmodule.exports = Array.isArray || function (arr) {\r\n  return toString.call(arr) == '[object Array]';\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/socket.io-parser/node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/to-array/index.js":
/*!****************************************!*\
  !*** ./node_modules/to-array/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = toArray\r\n\r\nfunction toArray(list, index) {\r\n    var array = []\r\n\r\n    index = index || 0\r\n\r\n    for (var i = index || 0; i < list.length; i++) {\r\n        array[i - index] = list[i]\r\n    }\r\n\r\n    return array\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/to-array/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || new Function(\"return this\")();\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/yeast/index.js":
/*!*************************************!*\
  !*** ./node_modules/yeast/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\r\n  , length = 64\r\n  , map = {}\r\n  , seed = 0\r\n  , i = 0\r\n  , prev;\r\n\r\n/**\r\n * Return a string representing the specified number.\r\n *\r\n * @param {Number} num The number to convert.\r\n * @returns {String} The string representation of the number.\r\n * @api public\r\n */\r\nfunction encode(num) {\r\n  var encoded = '';\r\n\r\n  do {\r\n    encoded = alphabet[num % length] + encoded;\r\n    num = Math.floor(num / length);\r\n  } while (num > 0);\r\n\r\n  return encoded;\r\n}\r\n\r\n/**\r\n * Return the integer value specified by the given string.\r\n *\r\n * @param {String} str The string to convert.\r\n * @returns {Number} The integer value represented by the string.\r\n * @api public\r\n */\r\nfunction decode(str) {\r\n  var decoded = 0;\r\n\r\n  for (i = 0; i < str.length; i++) {\r\n    decoded = decoded * length + map[str.charAt(i)];\r\n  }\r\n\r\n  return decoded;\r\n}\r\n\r\n/**\r\n * Yeast: A tiny growing id generator.\r\n *\r\n * @returns {String} A unique id.\r\n * @api public\r\n */\r\nfunction yeast() {\r\n  var now = encode(+new Date());\r\n\r\n  if (now !== prev) return seed = 0, prev = now;\r\n  return now +'.'+ encode(seed++);\r\n}\r\n\r\n//\r\n// Map each character to its index.\r\n//\r\nfor (; i < length; i++) map[alphabet[i]] = i;\r\n\r\n//\r\n// Expose the `yeast`, `encode` and `decode` functions.\r\n//\r\nyeast.encode = encode;\r\nyeast.decode = decode;\r\nmodule.exports = yeast;\r\n\n\n//# sourceURL=webpack:///./node_modules/yeast/index.js?");

/***/ }),

/***/ "./src/robot/Robot.ts":
/*!****************************!*\
  !*** ./src/robot/Robot.ts ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var skyway_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! skyway-js */ \"./node_modules/skyway-js/dist/skyway.js\");\n/* harmony import */ var skyway_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(skyway_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/lib/index.js\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(socket_io_client__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n/**\r\n * robot.htmlのエントリーポイント。\r\n * Robotの制御等を行う(あくまで仮実装、将来的にはROSに移行する)\r\n */\r\nfunction main() {\r\n    window.onload = () => {\r\n        const args = location.href.split(\"?\")[1].split(\"&\");\r\n        const peerId = args[0] + \"_Robot\";\r\n        const interruptId = args[0] + \"_Operator_Interrupt\";\r\n        var connectionLock = false;\r\n        var currentMediaConnection = null;\r\n        var currentDataConnection = null;\r\n        console.log(\"v2.1.0\");\r\n        navigator.mediaDevices\r\n            .getUserMedia({ audio: true, video: true })\r\n            .then((localStream) => {\r\n            console.log(\"MediaDevice OK\");\r\n            const socket = socket_io_client__WEBPACK_IMPORTED_MODULE_1__[\"connect\"](\"http://localhost:8000/\");\r\n            socket.on(\"error\", () => { document.location.reload(); });\r\n            socket.on(\"connect\", () => {\r\n                console.log(\"SocketCOnnect OK\");\r\n                socket.emit(\"message\", \"#d 0 0 0\");\r\n                const peer = new skyway_js__WEBPACK_IMPORTED_MODULE_0___default.a(peerId, {\r\n                    key: \"f54f20bd-718f-4c5e-aefa-f16b8b77bc87\",\r\n                });\r\n                peer.on(\"error\", (err) => {\r\n                    document.location.reload();\r\n                    console.log(err);\r\n                });\r\n                peer.on(\"open\", () => {\r\n                    console.log(\"open \" + peerId);\r\n                    const video = document.getElementById(\"webcam\");\r\n                    video.srcObject = localStream;\r\n                    video.play();\r\n                    peer.on(\"call\", (mediaConnection) => {\r\n                        if (!connectionLock || mediaConnection.remoteId == interruptId) {\r\n                            if (mediaConnection.remoteId == interruptId) {\r\n                                if (currentMediaConnection != null) {\r\n                                    currentMediaConnection.close();\r\n                                }\r\n                                if (currentDataConnection != null) {\r\n                                    currentDataConnection.close();\r\n                                }\r\n                                connectionLock = true;\r\n                            }\r\n                            currentMediaConnection = mediaConnection;\r\n                            mediaConnection.on(\"stream\", (stream) => {\r\n                                const video2 = document.getElementById(\"webcam2\");\r\n                                video2.srcObject = stream;\r\n                                video2.play();\r\n                            });\r\n                            mediaConnection.answer(localStream);\r\n                            mediaConnection.on(\"close\", () => {\r\n                                if (mediaConnection.remoteId == interruptId) {\r\n                                    connectionLock = false;\r\n                                }\r\n                                return;\r\n                            });\r\n                            console.log(\"media answer\");\r\n                        }\r\n                        else {\r\n                            mediaConnection.close();\r\n                            console.log(\"Block\");\r\n                        }\r\n                    });\r\n                    peer.on(\"connection\", (dataConnection) => {\r\n                        currentDataConnection = dataConnection;\r\n                        dataConnection.on(\"open\", () => {\r\n                            socket.emit(\"message\", \"#d 0 0 0\");\r\n                            socket.emit(\"entry\", \"\");\r\n                            dataConnection.on(\"data\", (data) => {\r\n                                console.log(data);\r\n                                if (data[0] == \"rotateHead\") {\r\n                                    socket.emit(\"message\", \"#d\" + \" \" + data[1] + \" \" + data[2] + \" \" + data[3]);\r\n                                }\r\n                                if (data[0] == \"reboot\") {\r\n                                    socket.emit(\"reboot\", \"\");\r\n                                }\r\n                                if (data[0] == \"move\") {\r\n                                    console.log(data[1], data[2], data[3]);\r\n                                    socket.emit(\"move\", data[1], data[2], data[3]);\r\n                                }\r\n                            });\r\n                            dataConnection.on(\"close\", () => {\r\n                                socket.emit(\"message\", \"#d 0 0 0\");\r\n                                return;\r\n                            });\r\n                            console.log(\"dataconnection open\");\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }).catch((e) => {\r\n            if (e.message.indexOf(\"Requested device not found\") >= 0) {\r\n                const readmeDiv = document.getElementById(\"readme\");\r\n                readmeDiv.textContent = \"マイク、スピーカー、カメラのいずれかが接続されていません\";\r\n            }\r\n            console.log(e);\r\n            setTimeout(() => { document.location.reload(); }, 5000);\r\n        });\r\n    };\r\n}\r\nmain();\r\n\n\n//# sourceURL=webpack:///./src/robot/Robot.ts?");

/***/ }),

/***/ 0:
/*!********************!*\
  !*** ws (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///ws_(ignored)?");

/***/ })

/******/ });